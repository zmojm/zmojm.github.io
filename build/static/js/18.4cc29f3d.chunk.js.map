{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","feature/idiom/icon.svg","feature/idiom/index.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_arrayLikeToArray","arr","len","length","i","arr2","Idiom","useState","explanation","sentence","url","questionCount","idiomObject","setIdiomObject","useEffect","document","title","className","t","viewBox","version","xmlns","p-id","width","height","d","fill","onKeyUp","e","keyCode","value","target","s","sentenceList","find","item","q","idiomList","idiom","ids","type","placeholder","map","index","html","replace","dangerouslySetInnerHTML","__html","Fragment","href","rel","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/18.4cc29f3d.chunk.js","sourcesContent":["import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default __webpack_public_path__ + \"static/media/icon.31d6cfe0.svg\";","import React, { useEffect, useState } from 'react'\r\nimport sentenceList from './sentence.json'\r\nimport idiomList from './idiom.json'\r\nimport SearchSvg from './icon.svg'\r\nimport './github.css'\r\nimport './index.scss'\r\n// 成语查询页面\r\nfunction Idiom() {\r\n    const [idiomObject, setIdiomObject] = useState({\r\n        name: '',\r\n        explanation: '',\r\n        sentence: [],\r\n        url: '',\r\n        questionCount: 0,\r\n    })\r\n\r\n    const handleKeyUp = e => {\r\n        if (e.keyCode === 13) {\r\n            const value = e.target.value\r\n            // 找到例句\r\n            const s = sentenceList.find(item => item.name === value)\r\n            // 找到真题\r\n            const q = idiomList.find(item => item.idiom === value)\r\n            setIdiomObject({\r\n                name: value,\r\n                explanation: s ? s.explanation : '',\r\n                sentence: s ? s.sentence : '',\r\n                url: q\r\n                    ? `https://zmojm.github.io/build/index.html?title=${value} 专项练习#/book/${q.ids.toString()}`\r\n                    : '',\r\n                questionCount: q ? q.ids.length : 0,\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = '成语查询'\r\n    }, [])\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='title'>\r\n                <h1>成语词典Plus版</h1>\r\n            </div>\r\n            <div className='search'>\r\n                <div className='icon'>\r\n                    <svg\r\n                        t='1666753462959'\r\n                        viewBox='0 0 1024 1024'\r\n                        version='1.1'\r\n                        xmlns='http://www.w3.org/2000/svg'\r\n                        p-id='2555'\r\n                        width='20'\r\n                        height='20'\r\n                    >\r\n                        <path\r\n                            d='M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6c3.2 3.2 8.4 3.2 11.6 0l43.6-43.5c3.2-3.2 3.2-8.4 0-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z'\r\n                            p-id='2556'\r\n                            fill='#9aa0a6'\r\n                        ></path>\r\n                    </svg>\r\n                </div>\r\n                <input\r\n                    onKeyUp={handleKeyUp}\r\n                    type='text'\r\n                    placeholder='请输入您想查询的成语...'\r\n                />\r\n            </div>\r\n            {idiomObject.name && (\r\n                <div className='markdown-body'>\r\n                    <h1>{idiomObject.name}</h1>\r\n                    <p>{idiomObject.explanation || '没有找到释义'}</p>\r\n                    <h2>例句</h2>\r\n                    {idiomObject.sentence ? (\r\n                        <ul>\r\n                            {idiomObject.sentence.map((item, index) => {\r\n                                // 将成语高亮\r\n                                const html = item.replace(\r\n                                    idiomObject.name,\r\n                                    `<b>${idiomObject.name}</b>`\r\n                                )\r\n                                return (\r\n                                    <li\r\n                                        key={index}\r\n                                        dangerouslySetInnerHTML={{\r\n                                            __html: html,\r\n                                        }}\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    ) : (\r\n                        <p>没有找到该成语例句</p>\r\n                    )}\r\n                    <h2>真题</h2>\r\n                    <p>\r\n                        {idiomObject.url ? (\r\n                            <React.Fragment>\r\n                                「{idiomObject.name}」在真题中出现过\r\n                                {idiomObject.questionCount}\r\n                                次，\r\n                                <a\r\n                                    href={idiomObject.url}\r\n                                    target='_blank'\r\n                                    rel='noreferrer'\r\n                                >\r\n                                    练习\r\n                                </a>\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <p>没有找到相关的真题</p>\r\n                        )}\r\n                    </p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Idiom\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}