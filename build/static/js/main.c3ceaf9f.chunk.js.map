{"version":3,"sources":["static/logo.svg","utils/index.js","feature/edit/Header/HeaderSlice.js","service/index.js","service/service.js","feature/edit/Header/EditCategoryModal.jsx","service/article.js","feature/edit/Header/StatisticsModal.jsx","feature/edit/Annotation/AnnotationSlice.js","feature/edit/Header/Header.jsx","feature/edit/Annotation/Annotation.jsx","feature/edit/Comment/Comment.jsx","feature/admin/ArticleTable/SearchForm.jsx","feature/admin/ArticleTable/ArticleTable.jsx","feature/edit/SideBar/AddModal.jsx","feature/admin/StatisticsModal.jsx","feature/admin/Admin.jsx","feature/shenlun/index.jsx","service/question.js","service/exam.js","feature/book/Book.jsx","feature/xingce/components/Answer.jsx","components/Sketch/GuaFabric.js","components/Sketch/Sketch.jsx","feature/book/components/QuestionItem.jsx","feature/book/components/BookListOper.jsx","components/SkeletonList/SkeletonList.jsx","feature/book/hooks/useVisibleData.jsx","feature/book/components/NotesEditor.jsx","feature/book/hooks/useQuestionIds.jsx","feature/book/hooks/useDeviceInfo.jsx","feature/book/BookList.jsx","feature/algorithm/AdjacencyListGraph.js","feature/algorithm/Matrix.jsx","utils/math.js","feature/calc/Calc2.jsx","app/test.js","feature/wrongQuestion/WrongQuestion.jsx","feature/xingce/XingCe.jsx","feature/xingce/components/CollectIcon.jsx","service/collect.js","feature/xingce/XingCeList.jsx","feature/xingce/components/CategoryTree.jsx","feature/xingce/Exam.jsx","feature/calc/CalcPdf.jsx","app/App.js","store/index.js","index.js"],"names":["_path","_path2","_path3","_path4","_path5","_path6","_path7","_path8","_path9","_path10","_path11","_path12","_path13","_path14","_path15","_path16","_path17","_path18","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","title","titleId","props","t","className","viewBox","xmlns","width","height","ref","id","d","fill","ForwardRef","mapColorToHex","blue","indigo","purple","pink","red","orange","yellow","green","teal","cyan","presetColor","label","value","getDomByDataId","highlightId","span","document","querySelectorAll","addClass","el","classList","contains","add","setHightlightSpanEl","els","option","text","color","dataset","highlightIdExtra","spans","highlightSplitType","Header","createSlice","name","initialState","categoryList","reducers","createCategory","state","action","len","index","console","log","category","nanoid","type","push","changeCategory","payload","map","item","deleteCategory","filter","updateCategory","actions","LC","init","appId","appKey","serverURL","getConfigFromLeanCloud","objectId","query","Query","get","find","Option","Select","EditCategoryModal","visible","onOk","onCancel","useState","loading","setLoading","dispatch","useDispatch","useSelector","header","useEffect","then","res","list","handleChange","okText","cancelText","confirmLoading","data","config","createWithoutData","forEach","set","save","updateConfigToLeanCloud","message","success","window","location","reload","catch","error","layout","style","marginBottom","Item","onChange","marginTop","borderRadius","backgroundColor","e","placeholder","display","alignItems","MinusCircleOutlined","onClick","Modal","confirm","icon","ExclamationCircleOutlined","content","handleDelete","PlusOutlined","getArticleFromLeanCloud","descending","limit","updateArticleToLeanCloud","StatisticsModal","dataSource","setDataSource","annotationList","annotation","columns","dataIndex","render","obj","No","categoryId","count","categoryName","statisticsData","Annotation","isSave","initAnnotation","score","nationality","createAnnotation","mark","some","deleteAnnotation","updateSavaStatus","status","history","useHistory","params","useParams","isModalVisible","setIsModalVisible","isStatisticsVisible","setIsStatisticsVisible","cls","classNames","handleOk","useCallback","a","annotationCount","err","keyDownFn","event","keyCode","ctrlKey","preventDefault","addEventListener","removeEventListener","pathname","marginLeft","keyCodeList","bind","highlighter","contentRef","useRef","setContent","articleList","setArticleList","pager","setPager","article","articleObj","toJSON","con","str","createElement","innerHTML","textContent","replace","match","replaceAll","processText2","fromStore","start","end","findIndex","char","String","fromCharCode","handleClickBtn","parentElement","removeChild","clearHightLight","current","getCategoryConfigById","h","on","Highlighter","CREATE","sources","hs","startMeta","endMeta","HOVER","HOVER_OUT","removeClass","tagName","listener","returnValue","selection","getSelection","setOption","fromRange","getRangeAt","handleNavigate","url","URL","href","hash","dangerouslySetInnerHTML","__html","when","Comment","prefix","itemLayout","renderItem","annotationId","remove","onMouseEnter","onMouseLeave","SearchForm","Form","useForm","form","handleSelectChange","setFieldsValue","onFinish","values","autoComplete","allowClear","htmlType","mapKeyToText","BLCU","SYSU","mid","high","korea","britain","ArticleTable","onUpdate","searchList","setSearchList","record","size","handleEdit","handleUpdate","onConfirm","danger","destroy","formValues","newData","flag","bordered","pagination","showTotal","total","TextArea","Input","formItemLayout","labelCol","wrapperCol","AddModal","articleId","onFail","handleClose","submit","labelAlign","configs","extend","createArticle","rules","required","rows","Admin","isStaticVisible","setIsStaticVisible","setCategoryList","CSVData","setCSVData","CSVDataText","setCSVDataText","setArticleId","setCount","getArticle","getCategory","csv","anaphora","anno","words","csvText","join","filename","Date","now","ShenLun","Array","textList","setTextList","activeIndex","setActiveIndex","includes","suffix","newTextList","from","active","getQuestionList","questionIds","containedIn","existQuestion","equalTo","addQuestion","question","saveAll","updateQuestionNotes","notes","addCategoryQuestion","getCategoryQuestion","addCustomWrongQuestionCategory","getExamList","getBookList","skip","addExam","XingCe","processCategoryList","toString","shape","children","treeData","Answer","correctAnswer","solution","keypoints","questionMeta","mapIndexToLetter","onClose","correctRatio","toFixed","mostWrongAnswer","choice","GuaFabric","canvasDom","canvas","fabric","Canvas","isDrawingMode","body","clientWidth","clientHeight","past","future","freeDrawingBrush","toDatalessJSON","previous","slice","loadFromJSON","clear","getObjects","Sketch","canvasRef","fabricObj","f","CloseOutlined","fontSize","UndoOutlined","undo","RedoOutlined","redo","DeleteOutlined","QuestionItem","sketchVisible","setSketchVisible","accessories","options","pos","selectIndex","optionCls","handleSelectOption","EditOutlined","BookListOper","filterIdList","filterIds","setFilterIds","answer","setAnswer","handleChangeAnswer","SettingOutlined","Group","compact","defaultValue","SkeletonList","useVisibleData","visibleData","setVisibleData","NotesEditor","editorRef","forceRender","getContent","onInit","evt","editor","apiKey","menubar","plugins","toolbar","content_style","useQuestionIds","setQuestionIds","qIds","split","parseInt","useDeviceInfo","isMobile","deviceInfo","setDeviceInfo","resizeFn","device","formatSelectedItem","answerVisible","XingCeList","testCount","setTestCount","visibleIdList","setVisibleIdList","setNotes","notesVisible","setNotesVisible","getAllBookList","requestList","request","Promise","all","sort","b","totalCount","itemLength","Math","max","formatDataSource","flat","localStorage","getItem","questionId","newDataSource","getAnswer","left","stringArr","wrong","arr","charCodeAt","p","zql","ct","zqda","Vertex","sku","Set","limitData","skuId","commoditySpecs","isDirected","vertices","adjList","Map","reduce","acc","cur","concat","vertex","addVertex","j","k","addEdge","random","vertexId","v","w","hasVertex","vId","wId","v1","getVertexById","v2","hasEdge","existVertices","s","vertexToString","neighbors","setList","has","vertexIdList","adj","getVertexIdList","getSkuIntersection","every","loadDataSource","Matrix","getNumberFromLen","numberLength","num","pow","formatAnswerNumber","number","n","getData","divisionFn","formula","formatAnswer","errorAnalysis","input","abs","divisionFn2","growthFn","round","addFn","subFn","mulFn","threeMulToOneFn","twoMulToOneFn","threeMulFn","fractionFn","mapTypeToFn","1","2","3","4","5","6","7","8","9","10","answerObj","time","defaultColumn","Calc","column","calcMethod","setCalcMethod","setAnswerVisible","acceptRate","setAcceptRate","setData","setTime","consumeTime","preItem","handleClickInput","handleChangeInput","onBlur","handleBlur","showIcon","Test","remLayoutFn","oHtml","getElementsByTagName","iWidth","documentElement","rootFontSize","box","querySelector","wEl","hEl","getBoundingClientRect","Dragger","Upload","WrongQuestion","fileList","setFileList","uploading","multiple","info","file","onDrop","dataTransfer","files","beforeUpload","reader","FileReader","onload","JSON","parse","result","readAsText","filterRepeatQuestion","qs","ids","shortSource","handleUpload","handleUploadTrain","questionData","InboxOutlined","CollectIcon","checked","src","alt","getCollectList","activeNotes","setActiveNotes","collectMap","setCollectMap","getCollect","getQuestions","getQuestionIds","callback","getAllData","examData","bookData","qId","newMap","handleCollect","deleteCollect","addCollect","handleNotesChange","CategoryTree","setTreeData","showData","setShowData","cascaderOptions","setCascaderOptions","inputValue","setInputValue","deleteInputValue","setDeleteInputValue","addModalVisible","setAddModalVisible","deleteModalVisible","setDeleteModalVisible","checkedQuestionIds","setCheckedQuestionIds","getCustomCategory","stringify","getQuestionIdCount","treeNode","newShowData","dfs","getCascaderData","submitQuestion","deleteQuestion","handleCancel","resetFields","getFieldsValue","validateFields","interArr","lodash","intersection","newQuestionIds","isEqual","deleteIds","newIds","without","xorIds","xor","warn","defaultExpandAll","checkable","onSelect","selectedKeys","selectedKey","checkedNodes","onCheck","okCancel","initialValues","remember","open","Exam","setPageList","setCollectList","newPageList","addAndSubFn","c","CalcPdf","Edit","exceptSelectors","setHighlighter","dispose","App","exact","path","component","Calc2","Book","BookList","store","configureStore","reducer","annotationReducer","headerReducer","ReactDOM","getElementById"],"mappings":"umBAAIA,EAAOC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAASC,EAASC,EAASC,EAASC,EAASC,EAASC,EAASC,EAASC,E,iGAE/IC,EAAY,CAAC,QAAS,WAE1B,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,SAASoB,EAAQC,EAAMC,GACrB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQd,EAAyBU,EAAMzB,GAE3C,OAAoB,gBAAoB,MAAOC,EAAS,CACtD6B,EAAG,cACHC,UAAW,OACXC,QAAS,gBACTC,MAAO,6BACP,OAAQ,KACRC,MAAO,GACPC,OAAQ,GACRC,IAAKV,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DU,GAAIT,GACHD,GAAS,KAAM7C,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EwD,EAAG,4RACHC,KAAM,GACN,OAAQ,QACLxD,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEuD,EAAG,+NACHC,KAAM,UACN,OAAQ,QACLvD,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEsD,EAAG,yvBACHC,KAAM,UACN,OAAQ,QACLtD,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEqD,EAAG,kHACHC,KAAM,GACN,OAAQ,QACLrD,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEoD,EAAG,wEACHC,KAAM,UACN,OAAQ,QACLpD,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEmD,EAAG,wEACHC,KAAM,GACN,OAAQ,QACLnD,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEkD,EAAG,sEACHC,KAAM,UACN,OAAQ,QACLlD,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEiD,EAAG,6HACHC,KAAM,GACN,OAAQ,QACLjD,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEgD,EAAG,wEACHC,KAAM,UACN,OAAQ,QACLhD,IAAYA,EAAuB,gBAAoB,OAAQ,CAClE+C,EAAG,wEACHC,KAAM,GACN,OAAQ,QACL/C,IAAYA,EAAuB,gBAAoB,OAAQ,CAClE8C,EAAG,sEACHC,KAAM,UACN,OAAQ,QACL9C,IAAYA,EAAuB,gBAAoB,OAAQ,CAClE6C,EAAG,8DACHC,KAAM,GACN,OAAQ,QACL7C,IAAYA,EAAuB,gBAAoB,OAAQ,CAClE4C,EAAG,iEACHC,KAAM,UACN,OAAQ,QACL5C,IAAYA,EAAuB,gBAAoB,OAAQ,CAClE2C,EAAG,qLACHC,KAAM,GACN,OAAQ,QACL3C,IAAYA,EAAuB,gBAAoB,OAAQ,CAClE0C,EAAG,iEACHC,KAAM,UACN,OAAQ,QACL1C,IAAYA,EAAuB,gBAAoB,OAAQ,CAClEyC,EAAG,8KACHC,KAAM,GACN,OAAQ,QACLzC,IAAYA,EAAuB,gBAAoB,OAAQ,CAClEwC,EAAG,iEACHC,KAAM,UACN,OAAQ,QACLxC,IAAYA,EAAuB,gBAAoB,OAAQ,CAClEuC,EAAG,qHACHC,KAAM,GACN,OAAQ,SAIZ,IAAIC,EAA0B,aAAiBhB,G,GAChC,I,iICjCFiB,EAAgB,CACzBC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,KAAM,UACNC,IAAK,UACLC,OAAQ,UACRC,OAAQ,UACRC,MAAO,UACPC,KAAM,UACNC,KAAM,WAGGC,EAAc,CACvB,CACI3C,IAAK,OACL4C,MAAO,eACPC,MAAO,WAEX,CACI7C,IAAK,SACL4C,MAAO,qBACPC,MAAO,WAEX,CACI7C,IAAK,SACL4C,MAAO,eACPC,MAAO,WAEX,CACI7C,IAAK,OACL4C,MAAO,eACPC,MAAO,WAEX,CACI7C,IAAK,MACL4C,MAAO,eACPC,MAAO,WAEX,CACI7C,IAAK,SACL4C,MAAO,eACPC,MAAO,WAEX,CACI7C,IAAK,SACL4C,MAAO,eACPC,MAAO,WAEX,CACI7C,IAAK,QACL4C,MAAO,eACPC,MAAO,WAEX,CACI7C,IAAK,OACL4C,MAAO,qBACPC,MAAO,WAEX,CACI7C,IAAK,OACL4C,MAAO,eACPC,MAAO,YAKFC,GAAiB,SAAAC,GAC1B,IAAIC,EAAOC,SAASC,iBAAT,kCACoBH,EADpB,OAOX,OAJIC,EAAKlD,QAAU,IACfkD,EAAOC,SAASC,iBAAT,wCAC8BH,EAD9B,QAGJC,GAYEG,GAAW,SAACC,EAAI9B,GACpB8B,EAAGC,UAAUC,SAAShC,IACvB8B,EAAGC,UAAUE,IAAIjC,IAKZkC,GAAsB,SAACC,EAAKC,GAErC,IADA,IAAQC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACLhE,EAAI,EAAGA,EAAI6D,EAAI3D,OAAQF,IAAK,CACjC,IAAIwD,EAAKK,EAAI7D,GACbuD,GAASC,EAAD,gBAAcQ,IACtB,IAAIb,EAAcK,EAAGS,QAAQC,kBAAoBV,EAAGS,QAAQd,YACtDgB,EAAQjB,GAAeC,GACzBK,IAAOW,EAAM,GACRX,EAAGS,QAAQF,MAA4B,SAApBP,EAAGS,QAAQF,OAE/BP,EAAGS,QAAQF,KAAOA,IAItBP,EAAGS,QAAQF,KAAO,OACoB,SAAlCP,EAAGS,QAAQG,oBACmB,SAA1BD,EAAM,GAAGF,QAAQF,OACjBI,EAAM,GAAGF,QAAQF,KAAOA,MCxK/BM,GAASC,YAAY,CAC9BC,KAAM,SACNC,aAbiB,CACjBC,aAAc,IAadC,SAAU,CACNC,eAAgB,SAACC,EAAOC,GACpB,IAAMC,EAAMF,EAAMH,aAAavE,OACzB6E,EACFD,EAAM/B,EAAY7C,OAAS4E,EAAM/B,EAAY7C,OAAS,EAC1D8E,QAAQC,IACJ,yBACAlC,EAAYgC,GACZhC,EAAYgC,GAAO3E,KAEvB,IAAM8E,EAAW,CACblD,GAAImD,cACJpB,KAAM,GACNC,MAAOjB,EAAYgC,GAAO3E,IAC1BgF,KAAM,UAEVR,EAAMH,aAAaY,KAAKH,IAE5BI,eAAgB,SAACV,EAAOC,GACpB,MAA4BA,EAAOU,QAA3BvD,EAAR,EAAQA,GAAIuC,EAAZ,EAAYA,KAAMtB,EAAlB,EAAkBA,MAClB+B,QAAQC,IAAI,iBAAkBJ,EAAOU,SACrCX,EAAMH,aAAeG,EAAMH,aAAae,KAAI,SAAAC,GACxC,OAAIzD,IAAOyD,EAAKzD,GACL,2BACAyD,GADP,kBAEKlB,EAAOtB,IAGLwC,MAInBC,eAAgB,SAACd,EAAOC,GACpB,IAAM7C,EAAK6C,EAAOU,QAClBX,EAAMH,aAAeG,EAAMH,aAAakB,QACpC,SAAAF,GAAI,OAAIA,EAAKzD,KAAOA,MAG5B4D,eAAgB,SAAChB,EAAOC,GACpBD,EAAMH,aAAeI,EAAOU,YAKjC,GAKHlB,GAAOwB,QAJPlB,GADG,GACHA,eACAW,GAFG,GAEHA,eACAM,GAHG,GAGHA,eACAF,GAJG,GAIHA,eAGWrB,MAAf,Q,uCClEAyB,KAAGC,KAAK,CACJC,MAAO,oCACPC,OAAQ,2BACRC,UAAW,yC,IAkBAJ,MAAf,ECLaK,GAAyB,SAAAC,GAClC,IAAMC,EAAQ,IAAIP,GAAGQ,MAAM,WAC3B,OAAIF,EAAiBC,EAAME,IAAIH,GACnBC,EAAMG,Q,QCAdC,GAAWC,IAAXD,OACFL,GAAW,2BAiLFO,GAhLW,SAAAnF,GACtB,IAAQoF,EAA4BpF,EAA5BoF,QAASC,EAAmBrF,EAAnBqF,KAAMC,EAAatF,EAAbsF,SACvB,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,cAEX1C,EAAe2C,aAAY,SAAAxC,GAAK,OAAIA,EAAMyC,OAAO5C,gBACxC2C,aAAY,SAAAxC,GAAK,OAAIA,EAAMyC,UAsB1CC,qBAAU,WACNnB,GAAuBC,IAAUmB,MAAK,SAAAC,GAClC,IAAMC,EAAOD,EAAIjB,IAAI,gBAErBW,EAAStB,GAAe6B,SAE7B,IAEH,IAIMC,EAAe,SAAC,GAAyB,IAAvB1F,EAAsB,EAAtBA,GAAIiB,EAAkB,EAAlBA,MAAOsB,EAAW,EAAXA,KAC/B2C,EACI5B,GAAe,CACXtD,KACAiB,QACAsB,WAsBZ,OACI,eAAC,IAAD,CACIjD,MAAM,2BACNqG,OAAO,eACPC,WAAW,eACXC,eAAgBb,EAChBJ,QAASA,EACTC,KAnEW,WACfI,GAAW,GDNoB,SAACb,EAAU0B,GAC9C,IAAMC,EAASjC,GAAGjG,OAAOmI,kBAAkB,UAAW5B,GAItD,OAHAvG,OAAOgB,KAAKiH,GAAMG,SAAQ,SAAA7H,GACtB2H,EAAOG,IAAI9H,EAAK0H,EAAK1H,OAElB2H,EAAOI,OCEVC,CAAwBhC,GAAU,CAC9B3B,aAAcA,IAEb8C,MAAK,SAAAC,GACFP,GAAW,GACXoB,IAAQC,QAAQ,4BAChBC,OAAOC,SAASC,SAChB5B,GAAQA,OAEX6B,OAAM,WACHzB,GAAW,GACXoB,IAAQM,MAAM,gCAuDlB9G,MAAO,IACPiF,SApDa,WACjBA,GAAYA,KA2CZ,SAUI,gBAAC,IAAD,CAAM8B,OAAQ,SAAd,UACKnE,EAAae,KAAI,SAACC,EAAMV,GACrB,IAAQ/C,EAA0ByD,EAA1BzD,GAAI+B,EAAsB0B,EAAtB1B,KAAMC,EAAgByB,EAAhBzB,MAAOoB,EAASK,EAATL,KACzB,OACI,gBAAC,IAAD,CAAKyD,MAAO,CAAEC,aAAc,IAA5B,UACI,eAAC,IAAD,UACI,gBAAC,IAAKC,KAAN,CAAW/F,MAAM,2BAAjB,UACI,eAAC,IAAD,CACIC,MAAOe,EACP6E,MAAO,CAAEhH,MAAO,KAChBmH,SAAU,SAAA/F,GAAK,OACXyE,EAAa,CACT1F,KACAiB,QACAsB,KAAM,WAPlB,SAWKxB,EAAYyC,KAAI,SAACC,EAAMV,GACpB,IAAQ3E,EAAeqF,EAAfrF,IAAK4C,EAAUyC,EAAVzC,MACb,OACI,eAACyD,GAAD,CAAoBxD,MAAO7C,EAA3B,SACK4C,GADQ+B,QAMzB,sBACI8D,MAAO,CACHI,UAAW,EACXC,aAAc,EACdpH,OAAQ,GACRqH,gBACI/G,EAAc4B,WAKlC,eAAC,IAAD,UACI,eAAC,IAAK+E,KAAN,CAAW/F,MAAM,2BAAjB,SACI,eAAC,IAAD,CACIC,MAAOc,EACPiF,SAAU,SAAAI,GAAC,OACP1B,EAAa,CACT1F,KACAiB,MAAOmG,EAAErJ,OAAOkD,MAChBsB,KAAM,UAGd8E,YAAY,yDAIxB,eAAC,IAAD,UACI,eAAC,IAAKN,KAAN,CAAW/F,MAAM,2BAAjB,SACI,gBAAC,IAAD,CACIC,MAAOmC,EACPyD,MAAO,CAAEhH,MAAO,KAChBmH,SAAU,SAAA/F,GAAK,OACXyE,EAAa,CACT1F,KACAiB,QACAsB,KAAM,UAPlB,UAWI,eAACkC,GAAD,CAAQxD,MAAM,SAAd,sCACA,eAACwD,GAAD,CAAQxD,MAAM,QAAd,6CAIZ,sBACI4F,MAAO,CACHS,QAAS,OACTC,WAAY,UAEhB7H,UAAU,SALd,SAOI,eAAC8H,EAAA,EAAD,CACIC,QAAS,kBA3GpB,SAAAzH,GACjB0H,IAAMC,QAAQ,CACVrI,MAAO,eACPsI,KAAM,eAACC,EAAA,EAAD,IACNC,QAAS,mJACTnC,OAAQ,eACRC,WAAY,eACZd,SAAU,WACN9B,QAAQC,IAAI,iBAEhB4B,KAAM,WACFK,EAASxB,GAAe1D,IACxBgD,QAAQC,IAAI,eAAMjD,MA+FiB+H,CAAatE,EAAKzD,WA3ENA,MAiF/C,eAAC,IAAD,CACIoD,KAAK,SACLqE,QAAS,WAhIrBvC,EAASvC,OAiIGkE,MAAO,CAAEI,UAAW,IACpBW,KAAM,eAACI,EAAA,EAAD,IAJV,4CC3JHC,GAA0B,SAAA7D,GACnC,IAAMC,EAAQ,IAAIP,GAAGQ,MAAM,WAE3B,OADAD,EAAM6D,WAAW,aACb9D,EAAiBC,EAAME,IAAIH,IAE3BC,EAAM8D,MAAM,KACL9D,EAAMG,SAKR4D,GAA2B,SAAChE,EAAU0B,GAC/C,IAAMC,EAASjC,GAAGjG,OAAOmI,kBAAkB,UAAW5B,GAItD,OAHAvG,OAAOgB,KAAKiH,GAAMG,SAAQ,SAAA7H,GACtB2H,EAAOG,IAAI9H,EAAK0H,EAAK1H,OAElB2H,EAAOI,Q,UCyDHkC,IApGI3D,IAAXD,OAEgB,SAAAjF,GACpB,IAAQoF,EAA4BpF,EAA5BoF,QAAeE,GAAatF,EAAnBqF,KAAmBrF,EAAbsF,UACvB,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAEA,GAFA,KACiBG,cACmBJ,mBAAS,KAA7C,mBAAOuD,EAAP,KAAmBC,EAAnB,KAGMC,GADSpD,aAAY,SAAAxC,GAAK,OAAIA,EAAM6F,WAAW1C,UAC9BX,aAAY,SAAAxC,GAAK,OAAIA,EAAM6F,WAAWD,mBACvD/F,EAAe2C,aAAY,SAAAxC,GAAK,OAAIA,EAAMyC,OAAO5C,gBAWjDiG,EAAU,CACZ,CACIpJ,MAAO,MACPqJ,UAAW,KACXvK,IAAK,MAET,CACIkB,MAAO,OACPqJ,UAAW,OACXvK,IAAK,QAET,CACIkB,MAAO,QACPqJ,UAAW,QACXvK,IAAK,SAET,CACIkB,MAAO,OACPqJ,UAAW,OACXvK,IAAK,OACLwK,OAAQ,SAAA7G,GAAI,OACR,+BACKA,EAAKyB,KAAI,SAACC,EAAMV,GACb,OACI,iCACKA,EAAQ,EADb,KACkBU,IADRV,WAuClC,OA7BAuC,qBAAU,WACN,GAAIV,GAAW4D,GAAkBA,EAAetK,OAAS,EAAG,CACxD,IAAM2K,EAAM,GACRC,EAAK,EACTN,EAAevC,SAAQ,SAACxC,EAAMV,GAC1B,IAAQgG,EAAqBtF,EAArBsF,WAAYhH,EAAS0B,EAAT1B,KACpB,GAAI8G,EAAIE,GACJF,EAAIE,GAAYC,MAAQH,EAAIE,GAAYC,MAAQ,EAChDH,EAAIE,GAAYhH,KAAKsB,KAAKtB,OACvB,CACH,IACMkH,EADSxG,EAAa+B,MAAK,SAAAxG,GAAC,OAAIA,EAAEgC,KAAO+I,KACnBhH,KAC5B8G,EAAIE,GAAc,CACd3K,IAAK0K,EACLA,GAAIA,IACJvG,KAAM0G,EACNlH,KAAM,CAACA,GACPiH,MAAO,OAInB,IAAME,EAAiBrL,OAAOgB,KAAKgK,GAAKrF,KAAI,SAAApF,GAExC,OADayK,EAAIzK,MAGrBmK,EAAcW,MAEnB,CAACV,EAAgB5D,EAASnC,IAGzB,eAAC,IAAD,CACInD,MAAM,2BACNqG,OAAO,eACPC,WAAW,eACXC,eAAgBb,EAChBJ,QAASA,EACTC,KA/EW,WACfC,GAAYA,KA+ERjF,MAAO,IACPiF,SA7Ea,WACjB9B,QAAQC,IAAI,oDACZ6B,GAAYA,KAmEZ,SAUI,eAAC,KAAD,CAAOwD,WAAYA,EAAYI,QAASA,QC5FvCS,GAAa7G,YAAY,CAClCC,KAAM,aACNC,aARiB,CACjBgG,eAAgB,GAChBzC,OAAQ,GACRqD,QAAQ,GAMR1G,SAAU,CACN2G,eAAgB,SAACzG,EAAOC,GACpB,IAAMgG,EAAMhG,EAAOU,QACXkF,EAA2CI,EAA3CJ,WAAYa,EAA+BT,EAA/BS,MAAOC,EAAwBV,EAAxBU,YAAapL,EAAW0K,EAAX1K,OACxCyE,EAAM4F,eAAiBC,GAAc,GACrC7F,EAAMmD,OAAS,CACXuD,QACAC,cACApL,WAGRqL,iBAAkB,SAAC5G,EAAOC,GACtB,IAAM4G,EAAO5G,EAAOU,QAELX,EAAM4F,eAAekB,MAChC,SAAAjG,GAAI,OAAIA,EAAKzD,KAAOyJ,EAAKzJ,OAGzB4C,EAAM4F,eAAenF,KAAKoG,IAGlCE,iBAAkB,SAAC/G,EAAOC,GACtB,IAAM7C,EAAK6C,EAAOU,QAClBX,EAAM4F,eAAiB5F,EAAM4F,eAAe7E,QACxC,SAAAF,GAAI,OAAIA,EAAKzD,KAAOA,MAG5B4J,iBAAkB,SAAChH,EAAOC,GACtB,IAAMgH,EAAShH,EAAOU,QACtBX,EAAMwG,OAASS,MAKpB,GAKHV,GAAWtF,QAJXwF,GADG,GACHA,eACAG,GAFG,GAEHA,iBACAG,GAHG,GAGHA,iBACAC,GAJG,GAIHA,iBAGWT,MAAf,QCsEe9G,GA5GA,SAAA7C,GAAU,IAAD,EACZE,EAA6BF,EAA7BE,UAAR,EAAqCF,EAAlB4D,YAAnB,MAA0B,OAA1B,EACM0G,EAAUC,cACVC,EAASC,cACT/E,EAAWC,cACjB,EAA8BJ,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4CF,oBAAS,GAArD,mBAAOmF,EAAP,KAAuBC,EAAvB,KACA,EAAsDpF,oBAAS,GAA/D,mBAAOqF,EAAP,KAA4BC,EAA5B,KACM7B,EAAiBpD,aAAY,SAAAxC,GAAK,OAAIA,EAAM6F,WAAWD,kBAEvD8B,EAAMC,KAAU,mBADP,aAED,GADQ,cAEjB7K,EAAYA,GAFK,IAIhB8K,EAAWC,sBAAW,sBAAC,4BAAAC,EAAA,sDACjBtG,EAAa4F,EAAb5F,SACRpB,QAAQC,IAAI,iBAAkBuF,EAAgBpE,GAC9Ca,GAAW,GACXmD,GAAyBhE,EAAU,CAC/BqE,WAAYD,EACZmC,gBAAiBnC,EAAetK,QAAU,IAEzCqH,MAAK,SAAAC,GACFa,IAAQC,QAAQ,kCAChBpB,EAAS0E,IAAiB,IAC1B3E,GAAW,MAEdyB,OAAM,SAAAkE,GACHvE,IAAQC,QAAQ,kFAChBrB,GAAW,MAfM,2CAiB1B,CAACuD,IAEJlD,qBAAU,WACN,IAAMuF,EAAY,SAAAC,GAGC,IAFCA,EAAMC,SAEDxE,OAAOuE,MAAME,UAC9BzE,OAAOuE,MAAMG,iBACbT,MAKR,OAFAjE,OAAO2E,iBAAiB,UAAWL,GAE5B,WACHtE,OAAO4E,oBAAoB,UAAWN,MAE3C,CAACL,IAYJ,OACI,uBAAK9K,UAAW4K,EAAhB,UACI,uBAAK5K,UAAU,OAAf,UACI,sBAAKA,UAAU,OAAO+H,QATX,WACnBqC,EAAQzG,KAAK,CACT+H,SAAS,YAOL,SACI,eAAC,EAAD,MAEJ,sBAAK1L,UAAU,QAAf,uEAEM,SAAT0D,GACG,uBAAK1D,UAAU,QAAf,UACI,eAAC,IAAD,CACIsF,QAASA,EACT5B,KAAK,oBACLqE,QAAS+C,EAHb,sCAQA,eAAC,IAAD,CACI3D,MAAO,CAAEwE,WAAY,IACrB5D,QAAS,kBAAM0C,GAAkB,IACjC/G,KAAK,oBAHT,sCAOA,eAAC,IAAD,CACIyD,MAAO,CAAEwE,WAAY,IACrBjI,KAAK,oBACLqE,QAAS,kBAAM4C,GAAuB,IAH1C,yCAUR,eAAC,GAAD,CACIzF,QAASsF,EACTrF,KAAM2F,EACN1F,SAhDS,WACjBqF,GAAkB,MAkDd,eAAC,GAAD,CACIvF,QAASwF,EACTtF,SAAU,kBAAMuF,GAAuB,U,oBCrFjDiB,I,OAFMtI,QAAQC,IAAIsI,KAAKvI,QAAS,YAElB,sCA0RLmG,GAtPI,SAAA3J,GAAU,IAAD,EAClBwK,EAASC,cACPvK,EAA2BF,EAA3BE,UAAW8L,EAAgBhM,EAAhBgM,YACbC,EAAaC,iBAAO,MACpBxG,EAAWC,cACjB,EAA8BJ,mBAAS,IAAvC,mBAAO+C,EAAP,KAAgB6D,EAAhB,KACA,EAAsC5G,mBAAS,IAA/C,mBAAO6G,EAAP,KAAoBC,EAApB,KACA,EAA0B9G,mBAAS,IAAnC,mBAAO+G,EAAP,KAAcC,EAAd,KACMtJ,EAAe2C,aAAY,SAAAxC,GAAK,OAAIA,EAAMyC,OAAO5C,gBACjD+F,EAAiBpD,aAAY,SAAAxC,GAAK,OAAIA,EAAM6F,WAAWD,kBACvDY,EAAShE,aAAY,SAAAxC,GAAK,OAAIA,EAAM6F,WAAWW,UAG/CkB,EAAMC,KAAU,mBADP,iBAED,GADQ,cAEjB7K,EAAYA,GAFK,IAKtB4F,qBAAU,WACN,IAAQlB,EAAa4F,EAAb5F,SACR6D,GAAwB7D,GAAUmB,MAAK,SAAAyG,GACnC,IAAMC,EAAaD,EAAQE,SACrBzG,EAAOwG,EAAWxD,WACpB0D,EAAM,GAENA,EADsB,SAAtBF,EAAW9N,OA5CN,SAAAiO,GACjB,IAAM5K,EAAKH,SAASgL,cAAc,OAElC,OADA7K,EAAG8K,UAAYF,EAEX5K,EAAG+K,YACEC,QAAQ,MAAO,IACfA,QAAQ,KAAM,IACdA,QAAQ,KAAM,IAEdA,QAAQ,OAAQ,IAChBA,QAAQ,kBAAmB,IAC3BA,QAAQ,MAAO,IACfA,QAAQ,wBAAc,SAAAC,GACnB,OAAOA,EAAM,MAEhBC,WAAW,SAAK,iBA8BPC,CAAaV,EAAWD,SAEZC,EAAWD,QA1DpCQ,QAAQ,WAAY,IACpBA,QAAQ,gBAAiB,MACzBA,QAAQ,eAAgB,MACxBA,QAAQ,WAAY,IACpBE,WAAW,SAAK,iBAChBA,WAAW,KAAM,IACjBA,WAAW,IAAK,IAsDbf,EAAWQ,GAEXjH,EAASmE,GAAe4C,IACpBxG,GAEAA,EAAKQ,SAAQ,SAAAxC,GACT+H,EAAYoB,UACRnJ,EAAKoJ,MACLpJ,EAAKqJ,IACLrJ,EAAK1B,KACL0B,EAAKzD,YAKtB,CAACgK,EAAQwB,IAEZlG,qBAAU,WACN,IAAQlB,EAAa4F,EAAb5F,SACR6D,KAA0B1C,MACtB,SAAAC,GACI,IAAMM,EAAON,EAAIhC,KAAI,SAACC,EAAMV,GACxB,OAAO,aACHqB,SAAUX,EAAKzD,GACf8I,GAAI/F,EAAQ,GACTU,EAAKyI,aAGhBL,EAAe/F,GACf,IAAM/C,EAAQ+C,EAAKiH,WAAU,SAAAtJ,GAAI,OAAIA,EAAKW,WAAaA,KACvD2H,EAAS,CACLhJ,MAAOA,EAAQ,EACf7E,OAAQ4H,EAAK5H,YAGrB,WACImI,IAAQM,MAAM,6CAGvB,CAACqD,IAEJ1E,qBAAU,WACN,IAAMuF,EAAY,SAAAC,GACd,IAAMC,EAAUD,EAAMC,QACtB,GAAIA,IAAYxE,OAAOuE,MAAME,QAAS,CAClC,IAAMgC,EAAOC,OAAOC,aAAanC,GAC3BhI,EAAQuI,GAAYxM,QAAQkO,GAClC,IAAc,GAAVjK,GAAeA,EAAQN,EAAavE,OAAQ,CAC5C,IAAMgF,EAAWT,EAAaM,GAC9BoK,EAAejK,MAM3B,OAFAqD,OAAO2E,iBAAiB,UAAWL,GAE5B,WACHtE,OAAO4E,oBAAoB,UAAWN,MAE3C,CAACpI,IAEJ6C,qBAAU,WAEN,KAAIkD,EAAetK,OAAS,GAA5B,ETPuB,SAAAsD,GAE3B,IADA,IAAMiE,EAAOjE,EAAGF,iBAAiB,KACxBtD,EAAI,EAAGA,EAAIyH,EAAKvH,OAAQF,IACPyH,EAAKzH,GAAGoP,cAChBC,YAAY5H,EAAKzH,ISM/BsP,CAAgB7B,EAAW8B,SAM3B,IAJA,IAAMC,EAAwB,SAAAzE,GAC1B,OAAOtG,EAAa+B,MAAK,SAAAf,GAAI,OAAIA,EAAKzD,KAAO+I,MAGxC/K,EAAI,EAAGA,EAAIwK,EAAetK,OAAQF,IAAK,CAC5C,MAA2BwK,EAAexK,GAAlCgC,EAAR,EAAQA,GAAI+I,EAAZ,EAAYA,WACNlH,EAAMX,GAAelB,GAErB+F,EAASyH,EAAsBzE,GACrC,GAAIhD,EAAQ,CACR,IAAQhE,EAAgBgE,EAAhBhE,KAAMC,EAAU+D,EAAV/D,MACdJ,GAAoBC,EAAK,CACrBE,OACAC,eAIb,CAACwG,EAAgB/F,IAEpB6C,qBAAU,WACN,GAAKkG,EAAL,CACA,IAAMiC,EAAIjC,EAEViC,EAAEC,GAAGC,KAAY7C,MAAM8C,QAAQ,SAAU9L,GACjBA,EAAZ+L,QAEArK,KAAI,SAAAsK,GACR,IAAMjF,EAAM,CACRgE,MAAOiB,EAAGjB,OAASiB,EAAGC,UACtBjB,IAAKgB,EAAGhB,KAAOgB,EAAGE,QAClBjM,KAAM+L,EAAG/L,KACT/B,GAAI8N,EAAG9N,GACP+I,WAAY+E,EAAG/E,YAAcxC,OAAOwC,WACpChD,OAAQlI,OAAOC,OAAOgQ,EAAG/H,QAAU,GAAIQ,OAAOR,SAElDb,EAASsE,GAAiBX,UAI7B6E,GAAGC,KAAY7C,MAAMmD,OAAO,YAAa,IAAVjO,EAAS,EAATA,GAC5ByN,EAAElM,SAAS,uBAAwBvB,MAEtC0N,GAAGC,KAAY7C,MAAMoD,WAAW,YAAa,IAAVlO,EAAS,EAATA,GAChCyN,EAAEU,YAAY,uBAAwBnO,SAE/C,CAACwL,IAEJlG,qBAAU,WACNmG,EAAW8B,QAAQrC,iBAAiB,SAAS,SAAA9D,GAC1BA,EAAErJ,OACNqQ,aAOhB,IAEH9I,qBAAU,WACN,IAAM+I,EAAW,SAAAjH,GACbA,EAAE6D,iBAEE7D,EAAEkH,YADFlF,EACgB,6FAEA,IAIxB,OADAA,GAAU7C,OAAO2E,iBAAiB,eAAgBmD,GAC3C,WACH9H,OAAO4E,oBAAoB,eAAgBkD,MAEhD,CAACjF,IAEJ,IAAM+D,EAAiB,SAAApH,GACnB,IAAQ/F,EAAc+F,EAAd/F,GAAIgC,EAAU+D,EAAV/D,MAGZuE,OAAOwC,WAAa/I,EACpB,IAAMyN,EAAIjC,EACJ9L,EAAS,gBAAYsC,GACrBuM,EAAYhI,OAAOiI,eACzBf,EAAEgB,UAAU,CACR5H,MAAO,CACHnH,eAGR+N,EAAEiB,UAAUH,EAAUI,WAAW,IAEjCzJ,EAAS0E,IAAiB,KAGxBgF,EAAiB,SAAAxL,GACnB,IAAQgB,EAAa4F,EAAb5F,SACJrB,EAAQ6I,EAAYmB,WAAU,SAAAtJ,GAAI,OAAIA,EAAKW,WAAaA,KAM5D,GALa,QAAThB,EACAL,GAAS,EACO,SAATK,IACPL,GAAS,GAETA,GAAS,GAAKA,EAAQ6I,EAAY1N,OAClC,GAAKkL,EAMD/C,IAAQM,MAAM,gFANL,CACT,IAAMb,EAAO8F,EAAY7I,GACnB8L,EAAM,IAAIC,IAAIvI,OAAOC,SAASuI,MACpCF,EAAIG,KAAJ,iBAAqBlJ,EAAK1B,UAC1BmC,OAAOC,SAASuI,KAAOF,EAAIE,UAK/B1I,IAAQM,MAAM,+IAKtB,OADA3D,QAAQC,IAAI,SAAUmG,GAElB,uBAAK1J,UAAW4K,EAAhB,UACI,sBAAK5K,UAAU,SAAf,SACK+C,EAAae,KAAI,SAACC,EAAMV,GACGU,EAAhBzB,MAAR,IAAeD,EAAS0B,EAAT1B,KACf,OACI,gBAAC,IAAD,CAEI0F,QAAS,kBAAM0F,EAAe1J,IAFlC,UAIK6H,GAAYvI,GAJjB,SAI0BhB,IAHjBgB,QAQrB,sBACI/C,GAAG,YACHD,IAAK0L,EAEL/L,UAAU,UACVuP,wBAAyB,CAAEC,OAAQpH,KAGvC,eAAC,IAAD,CAAQqH,KAAM/F,EAAQ/C,QAAQ,0FAE9B,uBAAK3G,UAAU,SAAf,UACI,eAAC,IAAD,CAAQ+H,QAAS,kBAAMmH,EAAe,QAAtC,gCACA,eAAC,IAAD,CAAQnH,QAAS,kBAAMmH,EAAe,SAAtC,gCAEA,0CAAU9C,EAAM/I,MAAhB,cAA2B+I,EAAM5N,iB,mBCjNlCkR,IA9EHpM,QAAQC,IAAIsI,KAAKvI,QAAS,aAItB,SAAAxD,GAAU,IAAD,EACbE,EAA2BF,EAA3BE,UAAW8L,EAAgBhM,EAAhBgM,YACb6D,EAAS,aACT/E,EAAMC,KAAU,mBACjB8E,GAAS,GADQ,cAEjB3P,EAAYA,GAFK,IAKhBwF,EAAWC,cAEXqD,EAAiBpD,aAAY,SAAAxC,GAAK,OAAIA,EAAM6F,WAAWD,kBACvD/F,EAAe2C,aAAY,SAAAxC,GAAK,OAAIA,EAAMyC,OAAO5C,gBA8BvD,OACI,uBAAK/C,UAAW4K,EAAhB,UACI,2EACA,eAAC,KAAD,CACIgF,WAAW,aACX5P,UAAS,UAAK2P,EAAL,SACT/G,WAAYE,EACZ+G,WAAY,SAAA9L,GACR,IAAMsC,EAAStD,EAAa+B,MACxB,SAAAxG,GAAC,OAAIA,EAAEgC,KAAOyD,EAAKsF,cAGvB,OACI,gBAAC,KAAKhC,KAAN,CAAWrH,UAAS,UAAK2P,EAAL,cAApB,UACKtJ,GAAUtC,GAAV,UAAqBsC,EAAOhE,KAA5B,aAAqC0B,EAAK1B,MAC3C,sBAAKrC,UAAU,SAAf,SACI,oBACI+H,QAAS,kBA7CpB+H,EA6CuC/L,EAAKzD,QA5C7D0H,IAAMC,QAAQ,CACVrI,MAAO,eACPsI,KAAM,eAACC,EAAA,EAAD,IACNC,QAAS,uCACTnC,OAAQ,eACRC,WAAY,eACZd,SAAU,WACN9B,QAAQC,IAAI,iBAEhB4B,KAAM,WAEFK,EAASyE,GAAiB6F,IAC1BtK,EAAS0E,IAAiB,IAE1B4B,EAAYiE,OAAOD,MAfV,IAAAA,GA8CWE,aAAc,kBA1B7B1P,EA0B4CyD,EAAKzD,QAzB9DwL,EAAYjK,SAAS,uBAAwBvB,GADhC,IAAAA,GA2Be2P,aAAc,kBAvB1B3P,EAuB4CyD,EAAKzD,QAtBjEwL,EAAY2C,YAAY,uBAAwBnO,GADhC,IAAAA,GAoBQ,mBAIQ,mC,oBClFhCyE,I,OAAWC,IAAXD,QA4DOmL,GAzDI,SAAApQ,GACf,MAAeqQ,IAAKC,UAAbC,EAAP,oBAEMC,EAAqB,SAAC5M,EAAMnC,GAC9B8O,EAAKE,eAAL,eACK7M,EAAOnC,KAMhB,OACI,sBAAKvB,UAAU,iBAAf,SACI,gBAAC,IAAD,CAGIA,UAAU,cACVkH,OAAO,SACPmJ,KAAMA,EAENG,SAZK,SAAAC,GACb3Q,EAAMwH,UAAYxH,EAAMwH,SAASmJ,IAYzBC,aAAa,MARjB,UAUI,eAAC,IAAKrJ,KAAN,CAAWxE,KAAK,QAAQvB,MAAM,2BAA9B,SACI,eAAC,IAAD,MAWJ,eAAC,IAAK+F,KAAN,CAAWxE,KAAK,QAAQvB,MAAM,2BAA9B,SACI,gBAAC,IAAD,CAAQgG,SAAUgJ,EAAoBK,YAAU,EAAhD,UACI,eAAC,GAAD,CAAQpP,MAAM,MAAd,0BACA,eAAC,GAAD,CAAQA,MAAM,OAAd,+BAGR,eAAC,IAAK8F,KAAN,CAAWxE,KAAK,cAAcvB,MAAM,eAApC,SACI,gBAAC,IAAD,CAAQgG,SAAUgJ,EAAoBK,YAAU,EAAhD,UACI,eAAC,GAAD,CAAQpP,MAAM,QAAd,0BACA,eAAC,GAAD,CAAQA,MAAM,UAAd,+BAGR,eAAC,IAAK8F,KAAN,UACI,eAAC,IAAD,CAAQ3D,KAAK,UAAUkN,SAAS,SAAhC,kCC5CdC,GAAe,CACjBC,KAAM,gDACNC,KAAM,uFACNC,IAAK,eACLC,KAAM,eACNC,MAAO,eACPC,QAAS,gBA0LEC,GAvLM,SAAAtR,GACjB,IAAQwF,EAAkCxF,EAAlCwF,QAASsD,EAAyB9I,EAAzB8I,WAAYyI,EAAavR,EAAbuR,SAC7B,EAAoChM,mBAASuD,GAAc,IAA3D,mBAAO0I,EAAP,KAAmBC,EAAnB,KACMnH,EAAUC,cACVrB,EAAU,CACZ,CACIpJ,MAAO,MACPqJ,UAAW,KACXvK,IAAK,MAET,CACIkB,MAAO,eACPqJ,UAAW,QACXvK,IAAK,SAET,CACIkB,MAAO,2BACPqJ,UAAW,SACXvK,IAAK,SACLwK,OAAQ,SAAAxK,GAAG,OAAImS,GAAanS,IAAQA,IAExC,CACIkB,MAAO,eACPqJ,UAAW,cACXvK,IAAK,cACLwK,OAAQ,SAAAxK,GAAG,OAAImS,GAAanS,IAAQA,IAExC,CACIkB,MAAO,2BACPqJ,UAAW,QACXvK,IAAK,QACLwK,OAAQ,SAAAxK,GAAG,OAAImS,GAAanS,IAAQA,IAExC,CACIkB,MAAO,2BACPqJ,UAAW,kBACXvK,IAAK,mBAET,CACIkB,MAAO,SACPlB,IAAK,SACLwK,OAAQ,SAAC7G,EAAMmP,GAAP,OACJ,gBAAC,KAAD,CAAOC,KAAK,SAAZ,UACI,oBACI1J,QAAS,kBAAM2J,EAAWF,EAAO9M,WACjChB,KAAK,UAFT,0BAMA,oBAAGqE,QAAS,kBAAM4J,EAAaH,EAAO9M,WAAtC,0BACA,eAAC,KAAD,CACI9E,MAAM,iFACNgS,UAAW,kBAAMvJ,EAAamJ,EAAO9M,WAFzC,SAII,oBAAGhB,KAAK,UAAUmO,QAAM,EAAxB,kCASpBjM,qBAAU,WACN2L,EAAc3I,KACf,CAACA,IA6BJ,IAAM8I,EAAa,SAAApR,GACf8J,EAAQzG,KAAK,CACT+H,SAAS,SAAD,OAAWpL,MAGrB+H,EAAe,SAAA/H,GPlEe,IAAAoE,EOmEhCpB,QAAQC,IAAI,2BAAQjD,IPnEYoE,EOoEPpE,EPnEhB8D,GAAGjG,OAAOmI,kBAAkB,UAAW5B,GACxCoN,WOmEHjM,MAAK,WACFc,IAAQC,QAAQ,4BAChByK,GAAYA,OAEfrK,OAAM,WACHL,IAAQC,QAAQ,gCAmBtB+K,EAAe,SAAArR,GACjBR,EAAMuR,UAAYvR,EAAMuR,SAAS/Q,IAuCrC,OACI,iCAEI,eAAC,GAAD,CAAYgH,SAnBC,SAAAyK,GACjBzO,QAAQC,IAAI,eAAMwO,GAClB,IACMC,EADWpJ,EACQ3E,QAAO,SAAAF,GAC5B,IAAIkO,GAAO,EAMX,OALA9T,OAAOgB,KAAK4S,GAAYxL,SAAQ,SAAA7H,GACxBqT,EAAWrT,IAAQqT,EAAWrT,KAASqF,EAAKrF,KAC5CuT,GAAO,MAGRA,KAEX3O,QAAQC,IAAI,eAAMyO,GAClBT,EAAcS,MAOV,eAAC,KAAD,CACI1M,QAASA,EACT4M,UAAU,EACVlJ,QAASA,EACTJ,WAAY0I,EACZa,WAAY,CACRC,UAAW,SAAAC,GAAK,wCAAWA,EAAX,8B,6BC3L5BtN,GAAWC,IAAXD,OACAuN,GAAaC,IAAbD,SAEFE,GAAiB,CACnBC,SAAU,CAAE/Q,KAAM,GAClBgR,WAAY,CAAEhR,KAAM,KA4ITiR,GAzIE,SAAA7S,GACb,IAAQoF,EAAqCpF,EAArCoF,QAAS0N,EAA4B9S,EAA5B8S,UAAWzN,EAAiBrF,EAAjBqF,KAAM0N,EAAW/S,EAAX+S,OAClC,EAAe1C,IAAKC,UAAbC,EAAP,oBAEAzK,qBAAU,WACFV,GAAW0N,GACXrK,GAAwBqK,GAAW/M,MAAK,SAAAyG,GACpC,IAAMC,EAAaD,EAAQE,SAC3BlJ,QAAQC,IAAI,aAAcgJ,GAC1B8D,EAAKE,eAAL,eACOhE,SAIhB,CAACrH,EAAS0N,IAEb,IAAMtC,EAAqB,SAAC5M,EAAMnC,GAC9B8O,EAAKE,eAAL,eACK7M,EAAOnC,KASVuR,EAAc,WAChBhT,EAAMsF,UAAYtF,EAAMsF,YA+B5B,OACI,eAAC,IAAD,CACIxF,MAAOgT,EAAY,2BAAS,2BAC5B1N,QAASA,EACTC,KAzCc,WAClBkL,EAAK0C,SACLjT,EAAMqF,MAAQrF,EAAMqF,QAwChBC,SAAU0N,EACV7M,OAAQ2M,EAAY,eAAO,eAC3B1M,WAAW,eANf,SAQI,gBAAC,IAAD,2BACQsM,IADR,IAEIQ,WAAY,QACZ3C,KAAMA,EACNxN,KAAK,yBACL2N,SA1CK,SAAAC,GACTmC,EACAlK,GAAyBkK,EAAWnC,GAAQ5K,MACxC,SAAAC,GAEIa,IAAQC,QAAQ,4BAChBzB,GAAQA,OAEZ,SAAA+F,GACIvE,IAAQM,MAAM,4BACd4L,GAAUA,ORlDD,SAAAzM,GAEzB,IACM6M,EAAU,IADA7O,GAAGjG,OAAO+U,OAAO,YAKjC,OAHA/U,OAAOgB,KAAKiH,GAAMG,SAAQ,SAAA7H,GACtBuU,EAAQzM,IAAI9H,EAAK0H,EAAK1H,OAEnBuU,EAAQxM,OQ+CP0M,CAAc1C,GAAQ5K,MAClB,SAAAC,GACIgN,IACAnM,IAAQC,QAAQ,4BAChBzB,GAAQA,OAEZ,SAAA+F,GACIvE,IAAQM,MAAM,4BACd4L,GAAUA,OAItBvP,QAAQC,IAAI,SAAUkN,IAiBdC,aAAa,MANjB,UAQI,eAAC,IAAKrJ,KAAN,CACIxE,KAAK,QACLvB,MAAM,2BACN8R,MAAO,CAAC,CAAEC,UAAU,IAHxB,SAKI,eAAC,IAAD,MAGJ,eAAC,IAAKhM,KAAN,CACIxE,KAAK,SACLvB,MAAM,2BACN8R,MAAO,CAAC,CAAEC,UAAU,IAHxB,SAKI,gBAAC,IAAD,CAAQ/L,SAAUgJ,EAAoBK,YAAU,EAAhD,UACI,eAAC,GAAD,CAAQpP,MAAM,OAAd,2DACA,eAAC,GAAD,CAAQA,MAAM,OAAd,uGAKR,eAAC,IAAK8F,KAAN,CACIxE,KAAK,QACLvB,MAAM,2BACN8R,MAAO,CAAC,CAAEC,UAAU,IAHxB,SAKI,gBAAC,IAAD,CAAQ/L,SAAUgJ,EAAoBK,YAAU,EAAhD,UACI,eAAC,GAAD,CAAQpP,MAAM,MAAd,0BACA,eAAC,GAAD,CAAQA,MAAM,OAAd,+BAGR,eAAC,IAAK8F,KAAN,CACIxE,KAAK,cACLvB,MAAM,eACN8R,MAAO,CAAC,CAAEC,UAAU,IAHxB,SAKI,gBAAC,IAAD,CAAQ/L,SAAUgJ,EAAoBK,YAAU,EAAhD,UACI,eAAC,GAAD,CAAQpP,MAAM,QAAd,0BACA,eAAC,GAAD,CAAQA,MAAM,UAAd,+BAGR,eAAC,IAAK8F,KAAN,CACIxE,KAAK,UACLvB,MACI,eAAC,KAAD,CAAS1B,MAAM,+DAAf,SACI,+DAGRwT,MAAO,CAAC,CAAEC,UAAU,IAPxB,SASI,eAACf,GAAD,CAAUgB,KAAM,aC7GrB3K,I,OA5BS,SAAA7I,GACpB,IAAQoF,EAAmCpF,EAAnCoF,QAASoE,EAA0BxJ,EAA1BwJ,MAAalE,GAAatF,EAAnBqF,KAAmBrF,EAAbsF,UAEfM,aAAY,SAAAxC,GAAK,OAAIA,EAAM6F,WAAW1C,UAUrD,OACI,eAAC,IAAD,CACIzG,MAAM,2BACNqG,OAAO,eACPC,WAAW,eACXhB,QAASA,EACTC,KAdW,WACfC,GAAYA,KAcRjF,MAAO,IACPiF,SAZa,WACjB9B,QAAQC,IAAI,oDACZ6B,GAAYA,KAGZ,SASI,kEAAWkE,EAAX,gBC8TGiK,GAzTD,WACV,MAA4ClO,oBAAS,GAArD,mBAAOmF,EAAP,KAAuBC,EAAvB,KACA,EAA8CpF,oBAAS,GAAvD,mBAAOmO,EAAP,KAAwBC,EAAxB,KACA,EAA8BpO,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAsCF,mBAAS,IAA/C,mBAAO6G,EAAP,KAAoBC,EAApB,KACA,EAAwC9G,mBAAS,IAAjD,mBAAOtC,EAAP,KAAqB2Q,EAArB,KACA,EAA8BrO,mBAAS,IAAvC,mBAAOsO,EAAP,KAAgBC,EAAhB,KACA,EAAsCvO,mBAAS,IAA/C,mBAAOwO,EAAP,KAAoBC,EAApB,KACA,EAAkCzO,mBAAS,IAA3C,mBAAOuN,EAAP,KAAkBmB,EAAlB,KACA,EAA0B1O,mBAAS,GAAnC,mBAAOiE,EAAP,KAAc0K,EAAd,KAGMC,EAAalJ,uBAAY,WAC3B,IAAIzB,EAAQ,EACZ/D,GAAW,GACXgD,KAA0B1C,MACtB,SAAAC,GACI,IAAMM,EAAON,EAAIhC,KAAI,SAACC,EAAMV,GACxB,OAAO,aACHqB,SAAUX,EAAKzD,GACf8I,GAAI/F,EAAQ,GACTU,EAAKyI,aAGhBpG,EAAKG,SAAQ,SAAAxC,GACTuF,GAASvF,EAAKuI,QAAQ9N,UAE1BwV,EAAS1K,GACT6C,EAAe/F,GACfb,GAAW,MAEf,WACIA,GAAW,GACXoB,IAAQM,MAAM,6CAGvB,IAEGiN,EAAcnJ,uBAAY,WAC5BtG,GAAuB,4BAA4BoB,MAAK,SAAAC,GACpD,IAAMC,EAAOD,EAAIjB,IAAI,gBAErB6O,EAAgB3N,QAErB,IAEHH,qBAAU,WACNqO,IACAC,MACD,CAACD,EAAYC,IAEhBtO,qBAAU,WAoEN,GAAI7C,EAAavE,OAAS,GAAK0N,EAAY1N,OAAS,EAAG,CACnD,IAAM2V,EAnEMjI,EAAYpI,KAAI,SAAAwI,GACxB,IAAM8H,EAAW,GACb9K,EAAQ,EACRgD,EAAQvD,YAAcuD,EAAQvD,WAAWvK,OAAS,IAElD8N,EAAQvD,WAAWxC,SAAQ,SAAA8N,GACvB,IAAM7Q,EAAWT,EAAa+B,MAC1B,SAAAf,GAAI,OAAIA,EAAKzD,KAAO+T,EAAKhL,cAEzB+K,EAAS5Q,EAASnB,MAClB+R,EAAS5Q,EAASnB,OAAS,EAE3B+R,EAAS5Q,EAASnB,MAAQ,KAGlCiH,EAAQgD,EAAQvD,WAAWvK,QAE/B,IAAM8V,EAzFD,SAAA5H,GACjB,IAAM5K,EAAKH,SAASgL,cAAc,OAElC,OADA7K,EAAG8K,UAAYF,EAEX5K,EAAG+K,YACEC,QAAQ,MAAO,IACfA,QAAQ,KAAM,IACdA,QAAQ,KAAM,IAEdA,QAAQ,OAAQ,IAChBA,QAAQ,kBAAmB,IAC3BA,QAAQ,MAAO,IACfA,QAAQ,wBAAc,SAAAC,GACnB,OAAOA,EAAM,MA4ECE,CAAaX,EAAQA,SACnC,OAAO,aACHlD,GAAIkD,EAAQlD,GACZxJ,MAAO0M,EAAQ1M,MACfiK,YAAayC,EAAQzC,YACrBD,MAAO0C,EAAQ1C,MACfnL,OAAQ6N,EAAQ7N,OAChB6K,MAAOA,EACPgL,MAAOA,EAAM9V,QACV4V,MA0CLG,EApCMrI,EAAYpI,KAAI,SAAAwI,GACxB,IAAM8H,EAAW,GACb9K,EAAQ,EAoBZ,OAnBIgD,EAAQvD,YAAcuD,EAAQvD,WAAWvK,OAAS,IAElD8N,EAAQvD,WAAWxC,SAAQ,SAAA8N,GACvB,IAAM7Q,EAAWT,EAAa+B,MAC1B,SAAAf,GAAI,OAAIA,EAAKzD,KAAO+T,EAAKhL,cAE7B,GAAI+K,EAAS5Q,EAASnB,MAAO,CACzB,IAAMe,EAAMgR,EAAS5Q,EAASnB,MAAM7D,OAAS,EACvC6D,EAAI,UAAMe,EAAN,YAAaiR,EAAKhS,MAC5B+R,EAAS5Q,EAASnB,MAAMsB,KAAKtB,QAE7B+R,EAAS5Q,EAASnB,MAAQ,CAAC,KAAD,OAAMgS,EAAKhS,UAG7CiH,EAAQgD,EAAQvD,WAAWvK,QAE/BL,OAAOgB,KAAKiV,GAAU7N,SAClB,SAAA7H,GAAG,OAAK0V,EAAS1V,GAAO0V,EAAS1V,GAAK8V,KAAK,SAExC,aACHpL,GAAIkD,EAAQlD,GACZxJ,MAAO0M,EAAQ1M,MACfiK,YAAayC,EAAQzC,YACrBD,MAAO0C,EAAQ1C,MACfnL,OAAQ6N,EAAQ7N,OAChB6K,MAAOA,GACJ8K,MAQXR,EAAWO,GACXL,EAAeS,MAEpB,CAACxR,EAAcmJ,IA0HlB,OACI,uBAAKlM,UAAU,aAAf,UACI,eAAC,GAAD,CAAQ0D,KAAK,UAQb,uBAAK1D,UAAU,OAAf,UACI,uBAAKA,UAAU,SAAf,UACI,eAAC,IAAD,CAAQ0D,KAAK,YAAYqE,QApIpB,WACjB0C,GAAkB,GAClBsJ,EAAa,KAkID,sCAMA,eAAC,KAAD,CAASrQ,KAAK,aACd,eAAC,IAAD,CACIA,KAAK,YACLqE,QAAS,kBAAM0L,GAAmB,IAFtC,sCAMA,eAAC,KAAD,CAAS/P,KAAK,aAEd,eAAC,IAAD,CAAQA,KAAK,UAAb,SACI,eAAC,WAAD,CAAS+Q,SAAU,qBAAsBrO,KAAMuN,EAA/C,wCAIJ,eAAC,KAAD,CAASjQ,KAAK,aAEd,eAAC,IAAD,CAAQA,KAAK,UAAb,SACI,eAAC,WAAD,CACI+Q,SAAU,0BACVrO,KAAMyN,EAFV,2CAQR,eAAC,GAAD,CACIjL,WAAYsD,EACZ5G,QAASA,EACT+L,SAnJK,SAAA/Q,GAEjBmK,GAAkB,GAClBsJ,EAAazT,SAoJT,eAAC,GAAD,CAEIsS,UAAWA,EACX1N,QAASsF,EACTrF,KArKK,WACbsF,GAAkB,GAClBwJ,KAoKQ7O,SA1KS,WACjBqF,GAAkB,KAqKLiK,KAAKC,OAMd,eAAC,GAAD,CACIzP,QAASsO,EACTlK,MAAOA,EACPlE,SAAU,kBAAMqO,GAAmB,UCxRpCmB,I,OAtDC,WACZ,MAAgCvP,mBAAS,IAAIwP,MAAM,MAAMrU,KAAK,KAA9D,mBAAOsU,EAAP,KAAiBC,EAAjB,KACA,EAAsC1P,mBAAS,GAA/C,mBAAO2P,EAAP,KAAoBC,EAApB,KAwBA,OACI,uBAAKjV,UAAU,eAAf,UACI,eAAC,IAAMsS,SAAP,CACItS,UAAU,QACV0D,KAAK,OACL4D,SA3Bc,SAAAI,GAEtB,IADA,IAAInG,EAAQmG,EAAErJ,OAAOkD,MACdA,EAAM2T,SAAS,OAAO,CACzB,IACMC,EAAS,GADH5T,EAAMnC,QAAQ,MACC,GAEvBmC,EADA4T,EAAS,GACD5T,EAAMuL,QACV,KACA,IAAI+H,MAAMM,GAAQ3U,KAAK,KAAKgU,KAAK,KAG7BjT,EAAMuL,QAAQ,KAAM,IAIpC,IAAMsI,EAAc,IAAIP,MAAM,MAAMrU,KAAK,IACzCqU,MAAMQ,KAAK9T,GAAOgF,SAAQ,SAACxC,EAAMV,GAC7B+R,EAAY/R,GAASU,KAEzBgR,EAAYK,GACZH,EAAe1T,EAAM/C,WAUjB,sBAAKwB,UAAU,OAAf,SACK8U,EAAShR,KAAI,SAACC,EAAMV,GACjB,IAAMuH,EAAMC,IAAW,CACnB9G,MAAM,EACNuR,OAAQN,IAAgB3R,IAE5B,OACI,uBAAiBrD,UAAW4K,EAA5B,UACK7G,GACCV,EAAQ,GAAK,MAAQ,GACnB,sBAAKrD,UAAU,QAAf,SAAwBqD,EAAQ,MAH9BA,a,UC5CrBkS,GAAkB,SAAAC,GAC3B,IAAM7Q,EAAQ,IAAIP,GAAGQ,MAAM,YAM3B,OAJAD,EAAM8D,MAAM,KACR+M,GACA7Q,EAAM8Q,YAAY,KAAMD,GAErB7Q,EAAMG,QAGJ4Q,GAAgB,SAAAhR,GACzB,IAAMC,EAAQ,IAAIP,GAAGQ,MAAM,YAO3B,MANwB,kBAAbF,EACPC,EAAM8Q,YAAY,KAAM/Q,GAExBC,EAAMgR,QAAQ,KAAMjR,GAExBC,EAAM8D,MAAM,KACL9D,EAAMG,QAIJ8Q,GAAc,SAAAxP,GACvB,IAAML,EAAO,GASb,OARAK,EAAKG,SAAQ,SAAAxC,GACT,IACM8R,EAAW,IADAzR,GAAGjG,OAAO+U,OAAO,aAElC/U,OAAOgB,KAAK4E,GAAMwC,SAAQ,SAAA7H,GACtBmX,EAASrP,IAAI9H,EAAKqF,EAAKrF,OAE3BqH,EAAKpC,KAAKkS,MAEPzR,GAAGjG,OAAO2X,QAAQ/P,IAGhBgQ,GAAsB,SAACrR,EAAUsR,GAG1C,OAFU5R,GAAGjG,OAAOmI,kBAAkB,eAAgB5B,GAE7C+B,KAAK,CAAEuP,WAWPC,GAAsB,SAAA7P,GAC/B,IAAIyP,EAAWzR,GAAGjG,OAAOmI,kBACrB,WACA,4BAKJ,OAHAnI,OAAOgB,KAAKiH,GAAMG,SAAQ,SAAA7H,GACtBmX,EAASrP,IAAI9H,EAAK0H,EAAK1H,OAEpBmX,EAASpP,QAGPyP,GAAsB,SAAAxR,GAE/B,OADc,IAAIN,GAAGQ,MAAM,YACdC,IAAIH,GAAY,6BAIpByR,GAAiC,SAAA/P,GAC1C,IAAIyP,EAAWzR,GAAGjG,OAAOmI,kBACrB,WACA,4BAKJ,OAHAnI,OAAOgB,KAAKiH,GAAMG,SAAQ,SAAA7H,GACtBmX,EAASrP,IAAI9H,EAAK0H,EAAK1H,OAEpBmX,EAASpP,QC1EP2P,I,OAAc,SAAAZ,GACvB,IAAM7Q,EAAQ,IAAIP,GAAGQ,MAAM,cAM3B,OAJAD,EAAM8D,MAAM,KACR+M,GACA7Q,EAAM8Q,YAAY,KAAMD,GAErB7Q,EAAMG,SAGJuR,GAAc,SAACb,EAAac,GACrC,IAAM3R,EAAQ,IAAIP,GAAGQ,MAAM,gBAS3B,OAPAD,EAAM8D,MAAM,KACR6N,GACA3R,EAAM2R,KAAKA,GAEXd,GACA7Q,EAAM8Q,YAAY,KAAMD,GAErB7Q,EAAMG,QAGJyR,GAAU,SAAAnQ,GACnB,IAAML,EAAO,GASb,OARAK,EAAKG,SAAQ,SAAAxC,GACT,IACM8R,EAAW,IADAzR,GAAGjG,OAAO+U,OAAO,eAElC/U,OAAOgB,KAAK4E,GAAMwC,SAAQ,SAAA7H,GACtBmX,EAASrP,IAAI9H,EAAKqF,EAAKrF,OAE3BqH,EAAKpC,KAAKkS,MAEPzR,GAAGjG,OAAO2X,QAAQ/P,IC4CdyQ,GAxEA,WACX,MAAwCnR,mBAAS,IAAjD,mBAAOtC,EAAP,KAAqB2Q,EAArB,KACMtJ,EAAUC,cAChBzE,qBAAU,WACNsQ,GAAoB,4BAA4BrQ,MAAK,SAAAC,GACjD,IAAMM,EAAON,EAAI0G,SAASpE,QAC1BqO,EAAoBrQ,GACpB9C,QAAQC,IAAI,MAAO6C,GACnBsN,EAAgBtN,QAErB,IAGH,IAwBMqQ,EAAsB,SAAtBA,EAAsBrQ,GAExBA,EAAKG,SAAQ,SAAAxC,GACTA,EAAKnE,MACD,uBAAKI,UAAU,gBAAf,UACI,sBAAKA,UAAU,OAAf,SAAuB+D,EAAKlB,OAC5B,uBAAK7C,UAAU,MAAf,UAAsB+D,EAAKyR,YAAYhX,OAAvC,YACA,sBAAKwB,UAAU,WAAf,SACI,eAAC,IAAD,CACI+H,QAAS,kBAjCJyN,EAkCmBzR,EAAKyR,YAAazR,EAAKzD,QAjCnE8J,EAAQzG,KAAK,CACT+H,SAAS,SAAD,OAAW8J,EAAYkB,cAFX,IAAClB,GAoCLmB,MAAM,QAJV,+BAWZ5S,EAAKrF,IAAMqF,EAAKzD,GACZyD,EAAK6S,UACLH,EAAoB1S,EAAK6S,cAKrC,OACI,sBAAK5W,UAAU,eAAf,SACI,sBAAKA,UAAU,WAAf,SACI,eAAC,KAAD,CAAMA,UAAU,eAAe6W,SAAU9T,S,UCwB1C+T,I,OA5FA,SAAAhX,GACX,MAQIA,EAAMsG,KAPN2Q,EADJ,EACIA,cACAC,EAFJ,EAEIA,SACAC,EAHJ,EAGIA,UACAC,EAJJ,EAIIA,aACAzY,EALJ,EAKIA,OACA6B,EANJ,EAMIA,GACA0V,EAPJ,EAOIA,MAGEmB,EAAmB,CAAC,IAAK,IAAK,IAAK,KAMzCvR,qBAAU,cAAU,IAMpB,OACI,uBAAK5F,UAAU,SAAf,UACI,uBAAKA,UAAU,UAAf,UACI,sEAEI,gCAAOmX,EAAiBJ,EAAa,aAGzC,eAAC,IAAD,CAAQhP,QAlBA,WAChBjI,EAAMsX,WAiBE,6BAEJ,eAAC,KAAD,IACA,gCACI,gCACI,uDACA,sBACIpX,UAAU,UACVuP,wBAAyB,CAAEC,OAAQwH,QAG3C,gCACI,uDACA,sBAAKhX,UAAU,UAAf,SACKiX,EAAUnT,KAAI,SAACC,EAAMV,GAClB,OACI,eAAC,KAAD,CAAiBf,MAAM,UAAvB,SACKyB,EAAKlB,MADAQ,WAO1B,gCACI,uDACA,sBAAKrD,UAAU,UAAf,SAA0BvB,OAE9B,gCACI,uDACA,uBAAKuB,UAAU,UAAf,UACI,gBAAC,KAAD,CAAKsC,MAAM,QAAX,qCACS4U,EAAaG,aAAaC,QAAQ,GAD3C,OAGA,gBAAC,KAAD,CAAKhV,MAAM,UAAX,qCAGQ6U,EACID,EAAaK,gBAAgBC,iBAMjD,gCACI,uDACA,sBAAKxX,UAAU,UAAf,SAA0BM,OAE9B,gCACI,uDACA,sBAAKyH,QA7DI,WACrBjI,EAAMwH,UAAYxH,EAAMwH,SAASxH,EAAMsG,OA4DKpG,UAAU,iBAA1C,SACI,sBACIA,UAAU,OACVuP,wBAAyB,CAAEC,OAAQwG,kB,oEC9BhDyB,G,WAvDX,WAAYC,GAAY,IAAD,4BACnB,IAAMC,EAAS,IAAIC,UAAOC,OAAOH,EAAW,CACxCI,eAAe,EACf3X,MAAOwB,SAASoW,KAAKC,YACrB5X,OAAQuB,SAASoW,KAAKE,eAG1BlZ,KAAKmZ,KAAO,GAEZnZ,KAAKoZ,OAAS,GACdpZ,KAAK4Y,OAASA,EACd5Y,KAAK4Y,OAAOS,iBAAiBjY,MAAQ,EACrCpB,KAAK4Y,OAAOS,iBAAiB9V,MAAQ,UACrCqV,EAAO3J,GAAG,YAAY,WAClB,IAAM9K,EAAQyU,EAAOU,iBACrB,EAAKH,KAAKvU,KAAKT,GACf,EAAKiV,OAAS,M,yCAKtB,WACI,IAAQD,EAAiBnZ,KAAjBmZ,KAAMC,EAAWpZ,KAAXoZ,OACd,KAAID,EAAK1Z,QAAU,GAAnB,CACA,IAAM8Z,EAAWJ,EAAKA,EAAK1Z,OAAS,GAEpCO,KAAKmZ,KAAOA,EAAKK,MAAM,EAAGL,EAAK1Z,OAAS,GAExCO,KAAKoZ,OAAL,CAAeG,GAAf,oBAA4BH,IACH,IAArBpZ,KAAKmZ,KAAK1Z,OACVO,KAAK4Y,OAAOa,aAAa,IAEzBzZ,KAAK4Y,OAAOa,aAAazZ,KAAKmZ,KAAKnZ,KAAKmZ,KAAK1Z,OAAS,O,kBAK9D,WACI,KAAIO,KAAKoZ,OAAO3Z,QAAU,GAA1B,CACA,IAAMqP,EAAU9O,KAAKoZ,OAAO,GAE5BpZ,KAAKmZ,KAAL,uBAAgBnZ,KAAKmZ,MAArB,CAA2BrK,IAE3B9O,KAAKoZ,OAASpZ,KAAKoZ,OAAOI,MAAM,GAChCxZ,KAAK4Y,OAAOa,aAAa3K,M,mBAG7B,WACI9O,KAAK4Y,OAAOc,QACZ1Z,KAAK4Y,OAAO5H,OAAOhR,KAAK4Y,OAAOe,cAC/B3Z,KAAKmZ,KAAO,GACZnZ,KAAKoZ,OAAS,O,YC8BPQ,OAvEf,SAAgB7Y,GACZ,IAAM8Y,EAAY5M,iBAAO,MACnB6M,EAAY7M,iBAAO,MAwBzB,OAtBApG,qBAAU,WACN,IAAMkT,EAAI,IAAIrB,GAAUmB,EAAU/K,SAClCgL,EAAUhL,QAAUiL,IACrB,IAoBC,uBAAK9Y,UAAU,YAAf,UACI,uBAAKA,UAAU,gBAAf,UACI,eAAC+Y,GAAA,EAAD,CACIhR,QAhBI,WAChBjI,EAAMsX,SAAWtX,EAAMsX,WAgBXpX,UAAU,OACVmH,MAAO,CACH7E,MAAO,OACP0W,SAAU,MAGlB,eAACC,GAAA,EAAD,CACIlR,QArBG,WACL8Q,EAAUhL,QAClBqL,QAoBUlZ,UAAU,OACVmH,MAAO,CACH7E,MAAO,OACP0W,SAAU,MAGlB,eAACG,GAAA,EAAD,CACIpR,QAzBG,WACL8Q,EAAUhL,QAClBuL,QAwBUpZ,UAAU,OACVmH,MAAO,CACH7E,MAAO,OACP0W,SAAU,MAGlB,eAACK,GAAA,EAAD,CACItR,QA7CI,WACN8Q,EAAUhL,QAClB4K,SA4CUzY,UAAU,OACVmH,MAAO,CACH7E,MAAO,OACP0W,SAAU,SAQtB,yBAAQ3Y,IAAKuY,Q,OCKVU,OA9Ef,SAAsBxZ,GAAQ,IAAD,EACjBsG,EAA2CtG,EAA3CsG,KAAM/C,EAAqCvD,EAArCuD,MAAO6D,EAA8BpH,EAA9BoH,OAAQlH,EAAsBF,EAAtBE,UAAWmK,EAAWrK,EAAXqK,OACxC,EAA0C9E,oBAAS,GAAnD,mBAAOkU,EAAP,KAAsBC,EAAtB,KAEM5O,EAAMC,KAAU,GAClBgL,UAAU,GADQ,cAEjB7V,EAAYA,GAFK,cAGjBmK,EAASA,GAHQ,IAkBtB,OACI,uBAAKnK,UAAW4K,EAAhB,UACI,kCAAOvH,EAAQ,EAAf,OACA,uBAAKrD,UAAU,UAAf,UACI,sBAAKA,UAAU,QAAf,SACI,uBACIuP,wBAAyB,CACrBC,OAAQpJ,EAAKgC,aAKzB,sBAAKpI,UAAS,kBAAakH,GAA3B,SACKd,EAAKqT,YAAY,IACdrT,EAAKqT,YAAY,GAAGC,QAAQ5V,KAAI,SAAC1B,EAAQuX,GACrC,IACIxP,EACAwP,GAAOvT,EAAKwT,aACG,WAAfxT,EAAK+D,OACC,UACA,QACJ0P,EAAYhP,IAAW,aACzBzI,QAAQ,GACP+H,EAASwP,IAAQvT,EAAKwT,cAE3B,OACI,uBAEI7R,QAAS,kBAzCd,SAAC3B,EAAMuT,GAC9B7Z,EAAMiI,SAAWjI,EAAMiI,QAAQ3B,EAAMuT,GAyCLG,CAAmB1T,EAAMuT,IAE7B3Z,UAAW6Z,EALf,UAOI,wBAAM7Z,UAAU,MAAhB,UAlBiB,CAAC,IAAK,IAAK,IAAK,KAmBX2Z,GADtB,OAGA,uBACIpK,wBAAyB,CACrBC,OAAQpN,OAXXuX,QAkBzB,eAACI,GAAA,EAAD,CACI/Z,UAAU,YACV+H,QAxDQ,WACpBzE,QAAQC,IAAI,eAAMgW,GAClBC,GAAiB,IAuDLrS,MAAO,CAAE6R,SAAU,GAAI1W,MAAO,gBAGrCiX,GAAiB,eAAC,GAAD,CAAQnC,QAvDd,WAChBoC,GAAiB,U,2BCbRjH,IAAMD,SAqGR0H,OApGf,SAAsBla,GAClB,IAAQma,EAA2Bna,EAA3Bma,aAAc3S,EAAaxH,EAAbwH,SACtB,EAA4CjC,oBAAS,GAArD,mBAAOmF,EAAP,KAAuBC,EAAvB,KACA,EAA0BpF,mBAAS,IAAnC,mBAAOiE,EAAP,KAAc0K,EAAd,KACA,EAAkC3O,mBAAS,IAA3C,mBAAO6U,EAAP,KAAkBC,EAAlB,KACA,EAA4B9U,mBAAS,CACjC3G,IAAK,GACL6C,MAAO,KAFX,mBAAO6Y,EAAP,KAAeC,EAAf,KAgCMC,EAAqB,SAAC5S,EAAGhJ,GAC3B,IAAM6C,EAAQmG,EAAErJ,OAAOkD,MACvB8Y,EAAU,2BACHD,GADE,kBAEJ1b,EAAM6C,MAIf,OACI,uBAAKvB,UAAU,YAAf,UACI,eAACua,GAAA,EAAD,CACIxS,QA7BM,WACd0C,GAAkB,IA6BVtD,MAAO,CACH6R,SAAU,MAGlB,eAAC,IAAD,CACIpZ,MAAM,eACNsF,QAASsF,EACTrF,KAjCK,WACbmC,GACIA,EAAS,CACLgC,QACA4Q,YACAE,WAER3P,GAAkB,IA2BVrF,SAxBS,WACjBqF,GAAkB,IAmBd,SAMI,uBAAKzK,UAAU,WAAf,UACI,uBAAKA,UAAU,OAAf,UACI,qBAAIA,UAAU,QAAd,4CACA,gBAAC,KAAMwa,MAAP,CAAalT,SApDP,SAAAI,GACtB,IAAMnG,EAAQmG,EAAErJ,OAAOkD,MACvByS,EAASzS,IAkDiDA,MAAO+H,EAAjD,UACI,eAAC,KAAD,CAAO/H,MAAO,GAAd,sBACA,eAAC,KAAD,CAAOA,MAAO,GAAd,sBACA,eAAC,KAAD,CAAOA,MAAO,GAAd,sBACA,eAAC,KAAD,CAAOA,MAAO,GAAd,4BAGR,uBAAKvB,UAAU,OAAf,UACI,qBAAIA,UAAU,QAAd,4CACA,eAAC,IAAD,CACIuB,MAAO0Y,EACPtS,YAAY,yCACZL,SA5DD,SAAAI,GACnB,IAAMnG,EAAQmG,EAAErJ,OAAOkD,MACvB4Y,EAAa5Y,SA6DD,uBAAKvB,UAAU,OAAf,UACI,qBAAIA,UAAU,QAAd,4CACA,gBAAC,IAAMwa,MAAP,CAAaC,SAAO,EAApB,UACI,eAAC,IAAD,CACI/W,KAAK,SACLyD,MAAO,CAAEhH,MAAO,OAChBmH,SAAU,SAAAI,GAAC,OAAI4S,EAAmB5S,EAAG,QACrCC,YAAY,6BAEhB,eAAC,IAAD,CACIR,MAAO,CAAEhH,MAAO,OAChBmH,SAAU,SAAAI,GAAC,OAAI4S,EAAmB5S,EAAG,UACrCgT,aAAa,GACb/S,YAAY,gF,UCxF7BgT,OAZf,SAAsB7a,GAClB,IAAMwJ,EAAQxJ,EAAMwJ,MACdvD,EAAO,IAAI8O,MAAMvL,GAAO9I,KAAK,GACnC,OACI,sBAAKR,UAAU,gBAAf,SACK+F,EAAKjC,KAAI,SAACC,EAAMV,GACb,OAAO,eAAC,KAAD,CAAsBiS,QAAM,GAAbjS,SCYvBuX,OAjBf,SAAwBhS,EAAY4M,GAChC,MAAsCnQ,mBAAS,IAA/C,mBAAOwV,EAAP,KAAoBC,EAApB,KAWA,OAVAlV,qBAAU,WACN,GAAIgD,EAAWpK,QAAU,GAAKgX,EAAYhX,QAAU,EAChDsc,EAAelS,OACZ,CACH,IAAMxC,EAAOwC,EAAW3E,QAAO,SAAAF,GAC3B,OAAOyR,EAAYN,SAAS3H,OAAOxJ,EAAKzD,QAE5Cwa,EAAe1U,MAEpB,CAACwC,EAAY4M,IACT,CACHqF,gB,UCmEOE,OA9Ef,SAAqBjb,GACjB,IAAMkb,EAAYhP,iBAAO,MACjB9G,EAAmCpF,EAAnCoF,QAASC,EAA0BrF,EAA1BqF,KAAMC,EAAoBtF,EAApBsF,SAAU7D,EAAUzB,EAAVyB,MA0BjC,OAxBAqE,qBAAU,WACNoV,EAAUnN,SAAWmN,EAAUnN,QAAQ5B,WAAW1K,GAAS,MAC5D,CAACA,IAuBA,eAAC,IAAD,CACI0Z,aAAa,EACb9a,MAAO,IACPP,MAAM,2BACNsF,QAASA,EACTC,KA1BS,WACb,IAAMiD,EAAU4S,EAAUnN,QAAQqN,aAElC/V,GAAQA,EAAKiD,IAwBThD,SArBa,WACjBA,GAAYA,KAcZ,SAQI,eAAC,KAAD,CACIpF,UAAU,eACVmb,OAAQ,SAACC,EAAKC,GACVL,EAAUnN,QAAUwN,GAExBC,OAAO,mDACPjX,KAAM,CACFjE,OAAQ,IACRmb,SAAS,EACTC,QAAS,CACL,UACA,WACA,QACA,OACA,QACA,UACA,SACA,gBACA,eACA,OACA,aACA,iBACA,QACA,QACA,UACA,OACA,aAEJC,QACI,oJAIJC,cACI,wECvDTC,OAlBf,WACI,MAAsCtW,mBAAS,IAA/C,mBAAOmQ,EAAP,KAAoBoG,EAApB,KACMtR,EAASC,cAWf,OAVA3E,qBAAU,WACN,IAAMtF,EAAKgK,EAAO5F,SAClB,GAAIpE,GAAMA,EAAG4U,SAAS,KAAM,CACxB,IAAM2G,EAAOvb,EACRwb,MAAM,KACN7X,QAAO,SAAAF,GAAI,MAAY,IAARA,KACfD,KAAI,SAAAC,GAAI,OAAIgY,SAAShY,MAC1B6X,EAAeC,MAEpB,CAACvR,IACG,CACHkL,gB,OCUOwG,OAzBf,WACI,MAAoC3W,mBAAS,CACzC4W,UAAU,IADd,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OAhBAvW,qBAAU,WACN,IAAMwW,EAAW,WACb9Y,QAAQC,IAAI,4BAA6B5B,SAASoW,KAAKC,aACnDrW,SAASoW,KAAKC,YAAc,MAC5BmE,GAAc,SAAAE,GAAM,kCACbA,GADa,IAEhBJ,UAAU,QAMtB,OAFAG,IACAvV,OAAO2E,iBAAiB,SAAU4Q,GAC3B,WACHvV,OAAO4E,oBAAoB,SAAU2Q,MAE1C,IACI,CACHH,SAAUC,EAAWD,WC6BvBK,GAAqB,SAACvY,EAAM6V,GAC9B,IAAKA,GAA+B,IAAhBA,EAChB,OAAO,2BACA7V,GADP,IAEIwY,eAAe,EACfpS,OAAQ,GACRyP,YAAa,KAGrB,IACIzP,EAAS,GAMb,OAJIA,EAHWpG,EAAKgT,cAAcS,QAEpBoC,EACD,UAEA,QAEN,2BACA7V,GADP,IAEIwY,eAAe,EACfpS,SACAyP,iBA+OO4C,GA1OI,WACf,MAAkCnX,mBAAS,IAA3C,mBAAOoX,EAAP,KAAkBC,EAAlB,KACA,EAAoCrX,mBAAS,IAA7C,mBAAOuD,EAAP,KAAmBC,EAAnB,KACA,EAA0CxD,mBAAS,IAAnD,mBAAOsX,EAAP,KAAsBC,EAAtB,KAGA,EAA0BvX,mBAAS,CAC/B/E,GAAI,GACJ8H,QAAS,KAFb,mBAAO4N,EAAP,KAAc6G,EAAd,KAIA,EAAwCxX,oBAAS,GAAjD,mBAAOyX,EAAP,KAAqBC,EAArB,KACQd,EAAaD,KAAbC,SACApB,EAAgBD,GAAehS,EAAY+T,GAA3C9B,YACArF,EAAgBmG,KAAhBnG,YAEFwH,EAAiBjS,uBACnB,SAAAyK,GAEI,IADA,IAAMyH,EAAc,GACX3e,EAAI,EAAGA,EAAIkX,EAAYhX,OAAS,IAAMF,IAAK,CAChD,IAAM4e,EAAU7G,GAAYb,EAAiB,IAAJlX,GACzC2e,EAAYtZ,KAAKuZ,GAErBC,QAAQC,IAAIH,GACPpX,MAAK,SAAAC,GACF,IAAMM,EAAON,EACRhC,KAAI,SAAAC,GAAI,OArFR,SAAC6E,EAAYqT,GA+BlC,OA9BarT,EACR9E,KAAI,SAAAC,GAAI,OAAIA,EAAKyI,YAEjB6Q,MAAK,SAACrS,EAAGsS,GAAJ,OAAUA,EAAEpG,aAAaqG,WAAavS,EAAEkM,aAAaqG,cAE1DzZ,KAAI,SAAAC,GACD,IAAImD,EAAS,OAIPsW,EAAa,GACnBzZ,EAAK0V,YAAY,GAAGC,QAAQnT,SAAQ,SAAAxC,GAChCyZ,EAAW7Z,KAAKI,EAAKvF,WAEzB,IAAM4E,EAAMqa,KAAKC,IAAL,MAAAD,KAAYD,GAUxB,OATIpa,GAAO,GACP8D,EAAS,MACF9D,EAAM,KACb8D,EAAS,OAGT+U,IACA/U,EAAS,OAEN,2BACAnD,GADP,IAEImD,cA0DqByW,CAAiB5Z,EAAMkY,MACnC2B,OACL/U,EAAczC,MAEjBY,OAAM,SAAAkE,GACH5H,QAAQC,IAAI,MAAO2H,QAG/B,CAAC+Q,IAGLrW,qBAAU,WACN,IAAMQ,EAAOS,OAAOgX,aAAaC,QAAQ,cACrC1X,EACAyC,EAAczC,GAEd4W,EAAexH,KAEpB,CAACA,EAAawH,IAEjB,IAAMlD,EAAqB,SAAC/V,EAAMV,GAG9B,IAAM0a,EAAaha,EAAKzD,GAClB0d,EAAgBpV,EAAW9E,KAAI,SAAAC,GACjC,OAAIA,EAAKzD,KAAOyd,EACLzB,GAAmBvY,EAAMV,GAEzBU,KAGf8E,EAAcmV,IA+DZC,EAAY,SAACC,EAAMC,GACrB,IAAM/D,EAASxR,EAAW9E,KACtB,SAAAC,GAAI,OAAIgY,SAAShY,EAAKgT,cAAcS,QAAU,KAE9CmC,EAAM,EACNrQ,EAAQ,EACR8U,EAAQ,GACRvC,EAAO,GACPwC,EAAMF,EAAUrC,MAAM,IAAI7X,QAAO,SAAAF,GAAI,MAAY,KAARA,MAEzCsa,EAAInJ,SAAS,MACbmJ,EAAInJ,SAAS,MACbmJ,EAAInJ,SAAS,MACbmJ,EAAInJ,SAAS,QAEbmJ,EAAMA,EAAIva,KAAI,SAAAC,GAAI,OAAIA,EAAKua,aAAe,MAC1Chb,QAAQC,IAAI,MAAO8a,IAEvB,IAAK,IAAI/f,EAAI4f,EAAM5f,EAAI+f,EAAI7f,OAAS0f,EAAM5f,IAAK,CAC3C,IAAMyF,EAAOqW,EAAO9b,GACdigB,EAAIF,EAAI1E,GACdA,IACI5V,GAAQwa,EACRjV,KAEA8U,EAAMza,KAAKrF,EAAI,GACfud,EAAKlY,KAAKiF,EAAWtK,GAAGgC,KAGhC,IAAMke,EAAMzC,SAAkB,IAARzS,EAAe+U,EAAI7f,QACnCigB,EAAKL,EAAM5J,KAAK,MAChBkK,EAAOtE,EACR7B,MAAM2F,EAAMG,EAAI7f,OAAS0f,GACzBpa,KAAI,SAACC,EAAMV,GACR,OAAIA,EAAQ,IAAM,EACP,IAAMkK,OAAOC,aAAazJ,EAAO,IAEjCwJ,OAAOC,aAAazJ,EAAO,OAGzCyQ,KAAK,IACVxM,IAAMpB,QAAQ,CACVhH,MAAO,uCACPwI,QACI,iCACI,0DAAQoW,EAAR,OACA,oDAAOC,KACP,gEAASC,WAQzB,OAFA7X,OAAOoX,UAAYA,EAGf,uBAAKje,UAAU,YAAf,UACI,eAAC,GAAD,CAAcsH,SArEG,SAAAlB,GACrB,IAAQkD,EAA6BlD,EAA7BkD,MAAO4Q,EAAsB9T,EAAtB8T,UAAWE,EAAWhU,EAAXgU,OAC1BsC,EAAapT,GACb,IAAMuS,EAAO3B,EAAYA,EAAU4B,MAAM,KAAO,GAChDc,EAAiBf,GAGjB,IAAQnd,EAAe0b,EAAf1b,IAAK6C,EAAU6Y,EAAV7Y,MAEb0c,GADcvf,EAAM,GAAK4K,EACT/H,MA6DZ,sBAAKvB,UAAU,aAAf,SACK6a,EAAYrc,QAAU,EACnB,eAAC,GAAD,CAAc8K,MAAO,KAErB,sBAAKtJ,UAAU,OAAf,SACK6a,EAAY/W,KAAI,SAACC,EAAMV,GACpB,OACI,uBAAmBrD,UAAU,YAA7B,UACKqD,EAAQoZ,IAAc,GACnB,qDAEKV,SAAS1Y,EAAQoZ,GAAa,KAGvC,uBAAKzc,UAAU,OAAf,UACI,eAAC,GAAD,CACImK,OAAQpG,EAAKoG,OACb/D,KAAMrC,EACNV,MAAOA,EACP6D,OAAQnD,EAAKmD,OACba,QAAS+R,IAEZ/V,EAAKwY,eACF,eAAC,GAAD,CACIjV,SAAU,kBAxH5BlB,EAyHwCrC,EAxH9DT,QAAQC,IAAI,OAAQ6C,GACpByW,EAAS,CACLvc,GAAI8F,EAAK1B,SACT0D,QAAShC,EAAK4P,OAAS,UAE3B+G,GAAgB,GANM,IAAA3W,GA2HkBgR,QAAS,kBAjJjC,SAAArT,GAChB,IAAMga,EAAaha,EAAKzD,GAClB0d,EAAgBpV,EAAW9E,KAAI,SAAAC,GACjC,OAAIA,EAAKzD,KAAOyd,EACLzB,GAAmBvY,GAEnBA,KAGf8E,EAAcmV,GAyI8BlL,CAAY/O,IAEhBqC,KAAMrC,SAvBZA,EAAKzD,WAwCnC,eAAC,GAAD,CACIiB,MAAOyU,EAAM5N,QACblD,QAAS4X,EACT3X,KAzIU,SAAAiD,GAElB2N,GAAoBC,EAAM1V,GAAI8H,GACzBvC,MAAK,WACFmX,EAAexH,GACfuH,GAAgB,GAChBpW,IAAQC,QAAQ,+BAEnBI,OAAM,WACHL,IAAQM,MAAM,gCAiId7B,SA7Hc,WACtB2X,GAAgB,UC1KlB4B,I,cACF,WAAYre,GAAK,qBACbvB,KAAKuB,GAAKA,EACVvB,KAAK6f,IAAM,IAAIC,MAGjBtb,GAAMD,QAAQC,IAAIsI,KAAKvI,QAAS,cCXhCwb,GAAY,CACd,CAAEC,MAAO,EAAGhZ,KAAM,CAAC,qBAAO,eAAM,0BAChC,CAAEgZ,MAAO,EAAGhZ,KAAM,CAAC,qBAAO,qBAAO,0BACjC,CAAEgZ,MAAO,EAAGhZ,KAAM,CAAC,eAAM,eAAM,0BAC/B,CAAEgZ,MAAO,EAAGhZ,KAAM,CAAC,eAAM,eAAM,2BAC/B,CAAEgZ,MAAO,EAAGhZ,KAAM,CAAC,qBAAO,qBAAO,4BACjC,CAAEgZ,MAAO,EAAGhZ,KAAM,CAAC,qBAAO,qBAAO,0BACjC,CAAEgZ,MAAO,EAAGhZ,KAAM,CAAC,qBAAO,eAAM,4BAE9BiZ,GAAiB,CACnB,CACIpf,MAAO,2BACPlB,IAAK,OACLqH,KAAM,CAAC,qBAAO,eAAM,uBAExB,CACInG,MAAO,2BACPlB,IAAK,OACLqH,KAAM,CAAC,eAAM,qBAAO,uBAExB,CACInG,MAAO,iCACPlB,IAAK,MACLqH,KAAM,CAAC,wBAAU,yBAAW,8BAc1B,I,WDvBN,aAAiC,IAArBkZ,EAAoB,6EAC5BlgB,KAAKmgB,SAAW,GAChBngB,KAAKogB,QAAU,IAAIC,IACnBrgB,KAAKkgB,WAAaA,E,mDAGtB,SAAeD,EAAgBF,GAAY,IAAD,OAEvBE,EAAeK,QAAO,SAACC,EAAKC,GACvC,OAAOD,EAAIE,OAAOD,EAAIxZ,QACvB,IACIQ,SAAQ,SAAAjG,GACX,IAAMmf,EAAS,IAAId,GAAOre,GAC1B,EAAKof,UAAUD,MAInB,IAAK,IAAInhB,EAAI,EAAGA,EAAI0gB,EAAexgB,OAAQF,IAEvC,IADA,IAAMyF,EAAOib,EAAe1gB,GAAGyH,KACtB4Z,EAAI,EAAGA,EAAI5b,EAAKvF,OAAQmhB,IAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAI7b,EAAKvF,OAAQohB,IACzB7b,EAAK4b,KAAO5b,EAAK6b,IACjB7gB,KAAK8gB,QACD9b,EAAK4b,GACL5b,EAAK6b,GACL7D,SAAyB,IAAhB0B,KAAKqC,WAQlC,IAAK,IAAIxhB,EAAI,EAAGA,EAAIwgB,EAAUtgB,OAAQF,IAGlC,IAFA,IAAMyF,EAAO+a,EAAUxgB,GAAGyH,KACpBgZ,EAAQD,EAAUxgB,GAAGygB,MAClBY,EAAI,EAAGA,EAAI5b,EAAKvF,OAAQmhB,IAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAI7b,EAAKvF,OAAQohB,IACzB7b,EAAK4b,KAAO5b,EAAK6b,IACjB7gB,KAAK8gB,QAAQ9b,EAAK4b,GAAI5b,EAAK6b,GAAIb,K,2BAOnD,SAAcgB,GAEV,OADehhB,KAAKmgB,SAASpa,MAAK,SAAA2a,GAAM,OAAIA,EAAOnf,KAAOyf,O,uBAK9D,SAAUN,GAEN,OAAO1gB,KAAKmgB,SAAShK,SAASuK,K,qBAIlC,SAAQO,EAAGC,GAEP,OADelhB,KAAKogB,QAAQta,IAAImb,GAAG9K,SAAS+K,K,uBAKhD,SAAUR,GACF1gB,KAAKmhB,UAAUT,KACnB1gB,KAAKmgB,SAASvb,KAAK8b,GACnB1gB,KAAKogB,QAAQ3Y,IAAIiZ,EAAQ,O,qBAI7B,SAAQU,EAAKC,EAAKrB,GACd,IAAMsB,EAAKthB,KAAKuhB,cAAcH,GACxBI,EAAKxhB,KAAKuhB,cAAcF,GACzBC,GAAOE,EAIPxhB,KAAKyhB,QAAQH,EAAIE,KAClBF,EAAGzB,IAAI3c,IAAI8c,GACXwB,EAAG3B,IAAI3c,IAAI8c,GACXhgB,KAAKogB,QAAQta,IAAIwb,GAAI1c,KAAK4c,GAC1BxhB,KAAKogB,QAAQta,IAAI0b,GAAI5c,KAAK0c,IAP1B/c,QAAQC,IAAI,0F,yBAWpB,WACI,OAAOxE,KAAKmgB,W,8BAGhB,WACI,OAAOngB,KAAK0hB,gB,6BAGhB,SAAgBV,GACZ,GAAIA,EAAU,CACV,IAAMN,EAAS1gB,KAAKuhB,cAAcP,GAElC,OADmBhhB,KAAKogB,QAAQta,IAAI4a,GAClB3b,KAAI,SAAAC,GAAI,OAAIA,EAAKzD,MAEvC,OAAOvB,KAAKmgB,SAASpb,KAAI,SAAAC,GAAI,OAAIA,EAAKzD,Q,wBAG1C,WACI,OAAOvB,KAAKogB,U,4BAGhB,SAAeM,GACX,MAAM,IAAN,OAAWA,EAAOnf,GAAlB,0BAA6Bmf,EAAOb,KAApC,Q,sBAGJ,WAEI,IADA,IAAI8B,EAAI,GACCpiB,EAAI,EAAGA,EAAIS,KAAKmgB,SAAS1gB,OAAQF,IAAK,CAC3C,IAAMmhB,EAAS1gB,KAAKmgB,SAAS5gB,GAC7BoiB,GAAC,UAAO3hB,KAAK4hB,eAAelB,GAA3B,QAED,IADA,IAAMmB,EAAY7hB,KAAKogB,QAAQta,IAAI9F,KAAKmgB,SAAS5gB,IACxCqhB,EAAI,EAAGA,EAAIiB,EAAUpiB,OAAQmhB,IAClCe,GAAC,UAAO3hB,KAAK4hB,eAAeC,EAAUjB,IAArC,KAELe,GAAK,KAET,OAAOA,I,kBAIX,SAAKL,EAAIE,GACL,OAAOxhB,KAAKogB,QAAQta,IAAIwb,GAAInL,SAASqL,K,gCAGzC,SAAmBM,GAEf,IADA,IAAM/c,EAAM,IAAIsb,IACP9gB,EAAI,EAAGA,EAAIuiB,EAAQriB,OAAQF,IAAK,CAC5B,aAAOuiB,EAAQviB,IACpBiI,SAAQ,SAAAxC,GACJD,EAAIgd,IAAI/c,GACRD,EAAI0C,IAAIzC,EAAM,GAEdD,EAAI0C,IAAIzC,EAAM,MAO1B,OAHe,aAAID,GACdG,QAAO,oDAA0B,KACjCH,KAAI,mCAAEpF,EAAF,iBAAkBA,O,6BAK/B,SAAgBqiB,GAEZ,GADAla,OAAOma,IAAM,CAAC,EAAG,GACbD,EAAaviB,QAAU,EAAG,OAAOO,KAAKkiB,kBAC1C,GAA4B,IAAxBF,EAAaviB,OACb,OAAOO,KAAKkiB,gBAAgBF,EAAa,IAI7C,IAHA,IAAMjd,EAAM,IAAIsb,IACVf,EAAM,GAEH/f,EAAI,EAAGA,EAAIyiB,EAAaviB,OAAQF,IAAK,CAC1C,IAAMgC,EAAKygB,EAAaziB,GAClBmhB,EAAS1gB,KAAKuhB,cAAchgB,GAClC+d,EAAI1a,KAAK8b,EAAOb,KAEhB,IAAMO,EAAUpgB,KAAKogB,QAAQta,IAAI4a,GACjClc,GAAI,MAAO4b,GACXtY,OAAOma,IAAI1iB,GAAK6gB,EAChB,IAAK,IAAIQ,EAAI,EAAGA,EAAIR,EAAQ3gB,OAAQmhB,IAAK,CACrC,IAAM5b,EAAOob,EAAQQ,GAChB7b,EAAIgd,IAAI/c,GAGTD,EAAI0C,IAAIzC,EAAM,GAFdD,EAAI0C,IAAIzC,EAAM,IAM1BR,GACI,WADD,aAEKO,GACJ,aAAIA,GACCG,QAAO,oDAA0B,KACjCH,KAAI,mCAAEpF,EAAF,iBAAkBA,MAG/B,IAAM8H,EAAMzH,KAAKmiB,mBAAmB7C,GAUpC,OARe,aAAIva,GACdG,QAAO,oDAA0B,KACjCA,QAAO,YAAmB,IAAD,mBAAhBvF,EAAgB,KAChBkgB,GADgB,KACVlgB,EAAIkgB,KAEhB,OADepY,EAAI2a,OAAM,SAAApd,GAAI,OAAI6a,EAAIkC,IAAI/c,SAG5CD,KAAI,mCAAEpF,EAAF,iBAAkBA,EAAI4B,U,OCvKrC8gB,eAAepC,GAAgBF,IAoFlBuC,I,UCjIFC,GAAmB,SAAAC,GAE5B,IADA,IAAIC,EAAM/D,KAAKqC,SACR0B,EAAM/D,KAAKgE,IAAI,GAAIF,EAAe,IACrCC,GAAO,GAEX,OAAOzF,SAASyF,IAMPE,GAAqB,SAACC,EAAQve,GACvC,IAAIwe,EAAID,EAER,IADIC,EAAI,MAAKA,GAAK,IACXA,EAAInE,KAAKgE,IAAI,GAAIre,EAAM,IAC1Bwe,GAAK,GAET,OAAO7F,SAAS6F,ICAdC,I,OAAU,WAmOZ,IAnOuC,IAA1Bne,EAAyB,uDAAlB,EAAG4F,EAAe,uDAAP,GAEzBwY,EAAa,WACf,IAAM9W,EAAIsW,GAAiB,GACrBhE,EAAIgE,GAAiB,GAC3B,MAAO,CACHS,QACI,iCACK/W,EACD,sBAAKhL,UAAU,YACdsd,KAGT0E,aAAcN,GAAmB1W,EAAIsS,EAAG,GAExC2E,cAAe,SAACC,EAAO9H,GACnB,OACIqD,KAAK0E,IAAI,YAAKD,GAAL,YAAoB9H,IAA7B,YAA8CA,IAC9C,OAMVgI,EAAc,WAIhB,IAHA,IAAIpX,EAAIsW,GAAiB,GACrBhE,EAAIgE,GAAiB,GACrBU,EAAeN,GAAmB1W,EAAIsS,EAAG,GACtC0E,EAAe,GAAK,GAAKA,EAAe,GAAK,GAChDhX,EAAIsW,GAAiB,GACrBhE,EAAIgE,GAAiB,GACrBU,EAAeN,GAAmB1W,EAAIsS,EAAG,GAE7C,MAAO,CACHyE,QACI,iCACK/W,EACD,sBAAKhL,UAAU,YACdsd,KAGT0E,aAAcN,GAAmB1W,EAAIsS,EAAG,GAExC2E,cAAe,SAACC,EAAO9H,GAAR,OAAmBqD,KAAK0E,IAAID,EAAQ9H,IAAW,KAIhEiI,EAAW,WAEb,IAAMrX,EAAIsW,GAAiB,GAErBhE,EAAIgE,GAAiB,GAAK,GAChC,MAAO,CACHS,QACI,iCACI,kCACK/W,EADL,MACWsS,EADX,OAGA,sBAAKtd,UAAU,YACf,yCAAWsd,EAAX,UAGR0E,aAAcvE,KAAK6E,MAAOtX,GAAKsS,EAAI,MAAS,EAAIA,EAAI,MAEpD2E,cAAe,SAACC,EAAO9H,GAAR,OACXqD,KAAK0E,IAAID,EAAQ9H,GAAUA,GAAU,OAK3CmI,EAAQ,WACV,IAAMvX,EAAIsW,GAAiB,GACrBhE,EAAIgE,GAAiB,GAC3B,MAAO,CACHS,QACI,iCACK/W,EADL,IACSsS,KAGb0E,aAAchX,EAAIsS,EAElB2E,cAAe,SAACC,EAAO9H,GAAR,OAAmB8H,EAAQ9H,IAAW,KAIvDoI,EAAQ,WACV,IAAMxX,EAAIsW,GAAiB,GACrBhE,EAAIgE,GAAiB,GAC3B,MAAO,CACHS,QACI,iCACK/W,EADL,IACSsS,KAGb0E,aAAchX,EAAIsS,EAElB2E,cAAe,SAACC,EAAO9H,GAAR,OAAmB8H,EAAQ9H,IAAW,KAIvDqI,EAAQ,WACV,IAAMzX,EAAIsW,GAAiB,GACrBhE,EAAIgE,GAAiB,GAC3B,MAAO,CACHS,QACI,iCACK/W,EADL,MACWsS,KAGf0E,aAAchX,EAAIsS,EAElB2E,cAAe,SAACC,EAAO9H,GAAR,OACXqD,KAAK0E,IAAID,EAAQ9H,GAAUA,GAAU,OAI3CsI,EAAkB,WAGpB,IAFA,IAAI1X,EAAIsW,GAAiB,GACrBhE,EAAIgE,GAAiB,GAClBtW,EAAI,GAAK,GAAKsS,EAAI,GACrBtS,EAAIsW,GAAiB,GACrBhE,EAAIgE,GAAiB,GAEzB,MAAO,CACHS,QACI,iCACK/W,EADL,MACWsS,KAGf0E,aAAchX,EAAIsS,EAElB2E,cAAe,SAACC,EAAO9H,GAAR,OAAmB8H,EAAQ9H,IAAW,KAKvDuI,EAAgB,WAGlB,IAFA,IAAI3X,EAAIsW,GAAiB,GACrBhE,EAAIgE,GAAiB,GAClBtW,EAAI,IACPA,EAAIsW,GAAiB,GACrBhE,EAAIgE,GAAiB,GAEzB,MAAO,CACHS,QACI,iCACK/W,EADL,MACWsS,KAGf0E,aAAchX,EAAIsS,EAElB2E,cAAe,SAACC,EAAO9H,GAAR,OAAmB8H,EAAQ9H,IAAW,KAKvDwI,EAAa,WACf,IAAM5X,EAAIsW,GAAiB,GACrBhE,EAAIgE,GAAiB,GAC3B,MAAO,CACHS,QACI,iCACK/W,EADL,MACWsS,KAGf0E,aAAcN,GAAmB1W,EAAIsS,EAAG,GAExC2E,cAAe,SAACC,EAAO9H,GAAR,OACXqD,KAAK0E,IAAID,EAAQ9H,GAAUA,GAAU,OAI3CyI,EAAa,WACf,IAAM/e,EAAM,CACR,QAAS,EACT,MAAO,EACP,MAAO,EACP,QAAS,EACT,QAAS,EACT,QAAS,EACT,QAAS,EACT,MAAO,GACP,OAAQ,GACR,OAAQ,GACR,OAAQ,GACR,OAAQ,GACR,OAAQ,GACR,QAAS,GACT,OAAQ,GACR,OAAQ,GACR,OAAQ,GACR,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,KACP,MAAO,IACP,MAAO,IACP,MAAO,KAELua,EAAMlgB,OAAOgB,KAAK2E,GAAKuZ,MAAK,kBAAMI,KAAKqC,SAAW,MACpDzc,GAAS,EACb,OAAO,WAEH,OADAA,GAAS,EACF,CACH0e,QAAS,+BAAM1D,EAAIhb,KACnB2e,aAAcle,EAAIua,EAAIhb,IACtB4e,cAAe,SAACC,EAAO9H,GAAR,OAAmB8H,EAAQ9H,IAAW,MAM3D0I,EAAc,CAChBC,EAAGjB,EACHkB,EAAGX,EACHY,EAAGV,EACHW,EAAGV,EACHW,EAAGV,EACHW,EAAGR,EACHS,EAAGR,IACHS,EAAGlB,EACHmB,EAAGb,EACHc,GAAIb,GAEFtE,EAAM,GACH/f,EAAI,EAAGA,EAAIgL,EAAOhL,IAAK,CAC5B,IAAImlB,EAAYX,EAAYpf,KACtByF,EAAG,aACL+Y,MAAO,GACPwB,KAAM,IACHD,GAEPpF,EAAI1a,KAAKwF,GAEb,OAAOkV,IAGLsF,GAAgB,CAClB,CACIjgB,KAAM,OACNpC,MAAO,eACPI,KAAM,GAEV,CACIgC,KAAM,QACNpC,MAAO,eACPI,KAAM,GAEV,CACIgC,KAAM,QACNpC,MAAO,SACPI,KAAM,GAEV,CACIgC,KAAM,OACNpC,MAAO,OACPI,KAAM,IAsMCkiB,GAlMF,WACT,MAA4Bve,mBAASse,IAArC,mBAAOE,EAAP,KACA,GADA,KACoCxe,mBAAS,IAA7C,mBAAOye,EAAP,KAAmBC,EAAnB,KACA,EAA0C1e,oBAAS,GAAnD,mBAAOkX,EAAP,KAAsByH,EAAtB,KACA,EAAoC3e,mBAAS,GAA7C,mBAAO4e,EAAP,KAAmBC,EAAnB,KACA,EAAwB7e,oBAAS,kBAAMwc,QAAvC,mBAAOzb,EAAP,KAAa+d,EAAb,KACAtd,OAAOT,KAAOA,EACd,MAAwBf,mBAAS,CAC7B8H,MAAO,GACPC,IAAK,KAFT,mBAAOsW,EAAP,KAAaU,EAAb,KAIMzU,EAAS,YAwEf,OACI,uBAAK3P,UAAW2P,EAAhB,UACI,uBAAK3P,UAAS,UAAK2P,EAAL,WAAd,UACI,eAAC,IAAD,CAAQ5H,QAbA,WAChBoc,EAAQtC,GAAQiC,IAChBE,GAAiB,GACjBE,EAAc,GACdE,EAAQ,CACJjX,MAAO,GACPC,IAAK,MAOD,sCACA,gBAAC,KAAMoN,MAAP,CAAalT,SA3ER,SAAAI,GACb,IAAMnG,EAAQmG,EAAErJ,OAAOkD,MACjByQ,EAAU6P,GAAQtgB,GACxB4iB,EAAQnS,GACR+R,EAAcxiB,GACdyiB,GAAiB,IAsEwBziB,MAAOuiB,EAAxC,UACI,eAAC,KAAD,CAAOviB,MAAO,EAAd,0BACA,eAAC,KAAD,CAAOA,MAAO,EAAd,gCACA,eAAC,KAAD,CAAOA,MAAO,EAAd,0BACA,eAAC,KAAD,CAAOA,MAAO,EAAd,0BACA,eAAC,KAAD,CAAOA,MAAO,EAAd,4CACA,eAAC,KAAD,CAAOA,MAAO,EAAd,4CACA,eAAC,KAAD,CAAOA,MAAO,EAAd,sCACA,eAAC,KAAD,CAAOA,MAAO,EAAd,4CACA,eAAC,KAAD,CAAOA,MAAO,EAAd,6BACA,eAAC,KAAD,CAAOA,MAAO,GAAd,mCAGR,sBAAKvB,UAAS,UAAK2P,EAAL,YAAd,SACI,uBAAK3P,UAAU,OAAf,UACI,eAAC,IAAD,CAAKA,UAAU,YAAf,SACK6jB,EAAO/f,KAAI,SAACC,EAAMV,GACf,OACI,eAAC,IAAD,CAEIrD,UAAU,gBACV0B,KAAMqC,EAAKrC,KAHf,SAKKqC,EAAKzC,OAJD+B,QASrB,eAAC,IAAD,UACK+C,EAAKtC,KAAI,SAACC,EAAMV,GACb,IACI0e,EAIAhe,EAJAge,QACAG,EAGAne,EAHAme,MACAF,EAEAje,EAFAie,aACAC,EACAle,EADAke,cAEAoC,EAActgB,EAAK2f,KAAOA,EAAKvW,MACnC,GAAI9J,EAAQ,EAAG,CACX,IAAMihB,EAAUle,EAAK/C,EAAQ,GAC7BghB,EAActgB,EAAK2f,KAAOY,EAAQZ,KAEtC,OACI,gBAAC,IAAD,CAAK1jB,UAAU,YAAf,UACI,eAAC,IAAD,CACI0B,KAAM,EACN1B,UAAU,4BAFd,SAIK+hB,IAEL,eAAC,IAAD,CACIrgB,KAAM,EACN1B,UAAU,4BAFd,SAII,eAAC,IAAD,CACI0D,KAAK,MACLqE,QAAS,kBA7FxB,SAAA1E,GACP,IAAVA,IACAC,QAAQC,IAAI,YACZ6gB,EAAQ,2BACDV,GADA,IAEHvW,MAAOuH,KAAKC,UAyFoB4P,CAAiBlhB,IAErBiE,SAAU,SAAAI,GAAC,OA7HzB,SAACA,EAAGrE,GAC1B,IAAM2O,EAAU5L,EAAKtC,KAAI,SAACC,EAAM4b,GAC5B,OAAItc,IAAUsc,EACH,2BACA5b,GADP,IAEIme,MAAOxa,EAAErJ,OAAOkD,QAGjBwC,KAEXogB,EAAQnS,GAoHgCwS,CAAkB9c,EAAGrE,IAEzBohB,OAAQ,kBAzF7B,SAAAphB,GACf,IAAM2O,EAAU5L,EAAKtC,KAAI,SAACC,EAAM4b,GAC5B,OAAItc,IAAUsc,EACH,2BACA5b,GADP,IAEI2f,KAAMhP,KAAKC,QAGR5Q,KAGfogB,EAAQnS,GA8E0C0S,CAAWrhB,IACzB9B,MAAO2gB,MAGd3F,GACG,eAAC,IAAD,CACI7a,KAAM,EACN1B,UAAU,4BAFd,SAII,eAAC,KAAD,CACI2G,QAASqb,EACTte,KACIue,EACIC,EACAF,GAEE,UACA,QAEV2C,UAAQ,MAInBpI,GACG,eAAC,IAAD,CACI7a,KAAM,EACN1B,UAAU,4BAFd,SAIK+b,SAASsI,EAAc,SA/CJhhB,QAsD5C,eAAC,IAAD,CAAQ0E,QAtJE,WACtBic,GAAiB,GACjB,IAAI1a,EAAQ,EACZlD,EAAKG,SAAQ,SAAAxC,GACT,IAAQme,EAAuCne,EAAvCme,MAAOF,EAAgCje,EAAhCie,cACXC,EAD2Cle,EAAlBke,eACXC,EAAOF,IACrB1Y,OAGR4a,EAAc5a,GACd8a,EAAQ,2BACDV,GADA,IAEHtW,IAAKsW,EAAKvW,MAAQ4O,UAAUrH,KAAKC,MAAQ+O,EAAKvW,OAAS,KAAQ,MA0IvD,sCACA,kDACS8W,EADT,IACsB7d,EAAK5H,UAE3B,kDAAUklB,EAAKtW,IAAf,gBClbLwX,I,OA7BF,WAoBT,OAnBAhf,qBAAU,WACN,SAASif,IACL,IAAIC,EAAQnjB,SAASojB,qBAAqB,QAAQ,GAC9CC,EAASrjB,SAASsjB,gBAAgBjN,YAGlCkN,GADJF,EAASA,EAAS,KAAO,KAAOA,GADX,IAGrBF,EAAM3d,MAAM6R,SAAWkM,EAAe,KAE1CL,IACAhe,OAAO2E,iBAAiB,SAAUqZ,GAAa,GAE/C,IAAMM,EAAMxjB,SAASyjB,cAAc,QAC7BC,EAAM1jB,SAASyjB,cAAc,UAC7BE,EAAM3jB,SAASyjB,cAAc,WACnC,EAA0BD,EAAII,wBAAtBplB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACfilB,EAAIzY,UAAJ,sBAAqBzM,GACrBmlB,EAAI1Y,UAAJ,sBAAqBxM,KACtB,IAEC,uBAAKJ,UAAU,OAAf,UACI,sBAAKA,UAAU,QACf,sBAAKA,UAAU,QAAf,0BACA,sBAAKA,UAAU,SAAf,+B,oBCjBJwlB,GAAYC,KAAZD,QAiKOE,GA/JO,WAClB,MAAgCrgB,mBAAS,IAAzC,mBAAOsgB,EAAP,KAAiBC,EAAjB,KACA,EAAkCvgB,oBAAS,GAA3C,mBAAOwgB,EAAP,KACA,GADA,KACoCxgB,mBAAS,KAA7C,mBAAOuD,EAAP,KAAmBC,EAAnB,KACM/I,EAAQ,CACV+C,KAAM,OACNijB,UAAU,EACV3iB,OAAQ,GACRmE,SAJU,SAIDye,GACL,IAAQ5b,EAAW4b,EAAKC,KAAhB7b,OACRtD,OAAOmf,KAAOD,EAAKC,KACJ,cAAX7b,GACA7G,QAAQC,IAAIwiB,EAAKC,KAAMD,EAAKJ,UAEjB,SAAXxb,EACAxD,IAAQC,QAAR,UAAmBmf,EAAKC,KAAKnjB,KAA7B,iCACkB,UAAXsH,GACPxD,IAAQM,MAAR,UAAiB8e,EAAKC,KAAKnjB,KAA3B,0BAGRojB,OAhBU,SAgBHve,GACHpE,QAAQC,IAAI,gBAAiBmE,EAAEwe,aAAaC,QAEhDC,aAAc,SAAAJ,GACVJ,EAAY,GAAD,oBAAKD,GAAL,CAAeK,KAC1B,IAAMK,EAAS,IAAIC,WAOnB,OALAD,EAAOE,OAAS,SAAA7e,GACZpE,QAAQC,IAAI,iCAASijB,KAAKC,MAAM/e,EAAErJ,OAAOqoB,SACzC7d,EAAc2d,KAAKC,MAAM/e,EAAErJ,OAAOqoB,UAEtCL,EAAOM,WAAWX,IACX,IAITY,EAAoB,uCAAG,WAAM/Q,GAAN,mBAAA7K,EAAA,sDACrB0b,EAAS,CAAC,GACVG,EAAKhR,EAFgB,IAAA7K,EAAA,oCAAAA,EAAA,6DAIf8b,EAAMD,EAAG/iB,KAAI,SAAAC,GAAI,OAAIA,EAAKzD,MAJX,SAKNoV,GAAcoR,GALR,OAKrBJ,EALqB,OAMflgB,EAAM,IAAIqY,IAChB6H,EAAOngB,SAAQ,SAAAxC,GACXyC,EAAIvE,IAAI8B,EAAKyI,SAASlM,OAG1BumB,EAAKA,EACA5iB,QAAO,SAAAF,GAAI,OAAKyC,EAAIsa,IAAI/c,EAAKzD,OAC7BwD,KAAI,SAAAC,GACD,OAAO,2BACAA,GADP,IAEIgjB,YAAa,UAhBJ,sDAGlBL,EAAOloB,OAAS,GAHE,yGAoBlBqoB,GApBkB,2CAAH,sDAuBpBG,EAAY,uCAAG,gCAAAhc,EAAA,6DACTxH,EAAuBoF,EAAvBpF,SAAUqS,EAAajN,EAAbiN,SADD,SAEI+Q,EAAqB/Q,GAFzB,QAEX6Q,EAFW,QAGNloB,OAAS,GAChByX,GAAoB,CAChB7N,QAAS5E,IACVqC,MACC,SAAAC,GACIa,IAAQC,QAAQ,2CAEpB,SAAAsE,GACIvE,IAAQM,MAAMiE,EAAIjE,OAAS,2CAInC2O,GAAY8Q,GAAQ7gB,MAChB,SAAAC,GACIa,IAAQC,QAAQ,2CAEpB,SAAAsE,GACIvE,IAAQM,MAAM,4CAItBN,IAAQM,MAAM,wCAxBD,2CAAH,qDA6BZggB,EAAiB,uCAAG,kCAAAjc,EAAA,6DACtB1H,QAAQC,IAAI,aAAcqF,GACpBiN,EAAWjN,EAFK,SAGDwN,KAHC,OAGhBsQ,EAHgB,OAIhBlgB,EAAM,IAAIqY,IAChB6H,EAAOngB,SAAQ,SAAAxC,GACXyC,EAAIvE,IAAI8B,EAAKyI,SAASlM,OAGpB4mB,EAAerR,EAChB5R,QAAO,SAAAF,GAAI,OAAKyC,EAAIsa,IAAI/c,EAAKzD,OAC7BwD,KAAI,SAAAC,GACD,OAAO,2BACAA,GADP,IAEIgjB,YAAa,UAGzBpgB,IAAQC,QAAR,wCAAwBiP,EAASrX,OAAS0oB,EAAa1oB,SACnD0oB,EAAa1oB,OAAS,EACtB+X,GAAQ2Q,GAAcrhB,MAClB,SAAAC,GACIa,IAAQC,QAAQ,2CAEpB,SAAAsE,GACIvE,IAAQM,MAAM,2CAItBN,IAAQM,MAAM,wCA5BI,4CAAH,qDAgCvB,OACI,sBAAKjH,UAAU,QAAf,SACI,uBAAKA,UAAU,SAAf,UACI,gBAACwlB,GAAD,2BAAa1lB,GAAb,cACI,oBAAGE,UAAU,uBAAb,SACI,eAACmnB,GAAA,EAAD,MAEJ,oBAAGnnB,UAAU,kBAAb,uDAGA,oBAAGA,UAAU,kBAAb,wHAKJ,uBAAKA,UAAU,aAAf,UACI,eAAC,IAAD,CACI0D,KAAK,UACLqE,QAASif,EACT1hB,QAASugB,EACT1e,MAAO,CAAEI,UAAW,IAJxB,sCAQA,eAAC,KAAD,IACA,eAAC,IAAD,CACI7D,KAAK,UACLqE,QAASkf,EACT3hB,QAASugB,EACT1e,MAAO,CAAEI,UAAW,IAJxB,qDC5FLiP,I,OArDA,WACX,MAAwCnR,mBAAS,IAAjD,mBAAOtC,EAAP,KAAqB2Q,EAArB,KACMtJ,EAAUC,cAChBzE,qBAAU,WACNsQ,KAAsBrQ,MAAK,SAAAC,GACvB,IAAMM,EAAON,EAAI0G,SAASpE,QAC1BqO,EAAoBrQ,GACpB9C,QAAQC,IAAI,MAAO6C,GACnBsN,EAAgBtN,QAErB,IAGH,IAIMqQ,EAAsB,SAAtBA,EAAsBrQ,GAExBA,EAAKG,SAAQ,SAAAxC,GACTA,EAAKnE,MACD,uBAAKI,UAAU,gBAAf,UACI,sBAAKA,UAAU,OAAf,SAAuB+D,EAAKlB,OAC5B,uBAAK7C,UAAU,MAAf,UAAsB+D,EAAKyR,YAAYhX,OAAvC,YACA,sBAAKwB,UAAU,WAAf,SACI,eAAC,IAAD,CACI+H,QAAS,kBACehE,EAAKyR,YAdXlV,EAcwByD,EAAKzD,QAbnE8J,EAAQzG,KAAR,kBAAwBrD,IADA,IAAcA,GAgBlBqW,MAAM,QAJV,2CAWZ5S,EAAKrF,IAAMqF,EAAKzD,GACZyD,EAAK6S,UACLH,EAAoB1S,EAAK6S,cAKrC,OACI,uBAAK5W,UAAU,UAAf,yBAEI,sBAAKA,UAAU,WAAf,SACI,eAAC,KAAD,CAAMA,UAAU,eAAe6W,SAAU9T,WCxC1CqkB,I,OAfK,SAAAtnB,GAChB,IACMqP,EADcrP,EAAZunB,QAEF,sGACA,oGAIN,OACI,uBAAMtf,QAJU,WAChBjI,EAAMiI,SAAWjI,EAAMiI,WAGK/H,UAAU,eAAtC,SACI,sBAAKsnB,IAAKnY,EAAKoY,IAAI,SCZlBC,GAAiB,SAAAhS,GAC1B,IAAM7Q,EAAQ,IAAIP,GAAGQ,MAAM,cAM3B,OAJAD,EAAM8D,MAAM,KACR+M,GACA7Q,EAAM8Q,YAAY,KAAMD,GAErB7Q,EAAMG,QC4aF0X,GA/ZI,WACf,IAAMxB,EAAYhP,iBAAO,MACnB1B,EAASC,cACf,EAAsClF,mBAAS,IAA/C,mBAAOoiB,EAAP,KAAoBC,EAApB,KACA,EAA8BriB,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4CF,oBAAS,GAArD,mBAAOmF,EAAP,KAAuBC,EAAvB,KACA,EAAwCpF,mBAAS,IAAjD,mBAAOtC,EAAP,KAAqB2Q,EAArB,KACA,EAAoCrO,mBAAS,IAA7C,mBAAOsiB,EAAP,KAAmBC,EAAnB,KACA,EAAoCviB,mBAAS,IAA7C,mBAAOuD,EAAP,KAAmBC,EAAnB,KACAjD,qBAAU,WACNsQ,KAAsBrQ,MAAK,SAAAC,GACvB,IAAMM,EAAON,EAAI0G,SAASpE,QAC1BsL,EAAgBtN,MAGpByhB,MACD,IAEHjiB,qBAAU,WACN,IAYMtF,EAAKgK,EAAO5F,SAClB,GAAIpE,EAAG4U,SAAS,KACZ4S,SAEA,GAAI/kB,EAAavE,OAAS,EAAG,CACzB,IAAIgX,EAAc,IAjBH,SAAjBuS,EAAkB3hB,EAAM9F,EAAI0nB,GAC9B,IAAK,IAAI1pB,EAAI,EAAGA,EAAI8H,EAAK5H,OAAQF,IAAK,CAClC,IAAMyF,EAAOqC,EAAK9H,GAClB,GAAIyF,EAAKzD,IAAMA,EAEX,YADA0nB,EAASjkB,EAAKyR,aAGdzR,EAAK6S,UACLmR,EAAehkB,EAAK6S,SAAUtW,EAAI0nB,IAUtCD,CAAehlB,EAAczC,GAAI,SAAAwF,GAC7B0P,EAAc1P,KAEd0P,EACAD,GAAgBC,GAAa3P,MAAK,SAAAC,GAC9B,IAAMM,EAAON,EAAIhC,KAAI,SAAAC,GAAI,OAAIA,EAAKyI,YAClC3D,EAAczC,MAGlBO,IAAQM,MAAM,qCAI3B,IAEH,IAAM6gB,EAAe,WACjB,IAAMG,EAAU,uCAAG,WAAMzS,GAAN,uBAAAxK,EAAA,sEACQoL,GAAYZ,GADpB,cACT0S,EADS,gBAEY3S,GAAgBC,GAF5B,cAET0R,EAFS,gBAGQ7Q,GAAYb,GAHpB,cAGT2S,EAHS,OAIT/hB,EAJS,uBAKR8hB,EAASpkB,KAAI,SAAAC,GAAI,OAAIA,EAAKyI,aALlB,aAMR0a,EAAapjB,KAAI,SAAAC,GAAI,OAAIA,EAAKyI,aANtB,aAOR2b,EAASrkB,KAAI,SAAAC,GAAI,OAAIA,EAAKyI,cAE3Bka,EAAS,GACflR,EAAYjP,SAAQ,SAAA6hB,GAChB,IAAMvS,EAAWzP,EAAKtB,MAAK,SAAAf,GAAI,OAAIA,EAAKzD,KAAO8nB,KAC3CvS,GACA6Q,EAAO/iB,KAAKkS,MAbL,kBAgBR6Q,GAhBQ,4CAAH,sDAmBVlR,EADKlL,EAAO5F,SAEboX,MAAM,KACN7X,QAAO,SAAAF,GAAI,MAAY,IAARA,KACfD,KAAI,SAAAC,GAAI,OAAIgY,SAAShY,MAE1BwB,GAAW,GACX0iB,EAAWzS,GACN3P,MAAK,SAAAC,GACF+C,EAAc/C,GACdP,GAAW,MAEdyB,OAAM,SAAAkE,GACH3F,GAAW,OAIjBsiB,EAAa,WACfL,KAAiB3hB,MAAK,SAAAC,GAClB,IAAMM,EAAON,EAAIhC,KAAI,SAAAC,GAAI,OAAIA,EAAKyI,YAC5B6b,EAAS,GACfjiB,EAAKG,SAAQ,SAAAxC,GACTskB,EAAOtkB,EAAKzD,IAAMyD,EAAKW,YAE3BkjB,EAAcS,OA6ChBC,EAAgB,SAACvkB,EAAMsjB,GACzB,GAAIA,EAAS,CAET,IAAM3iB,EAAWijB,EAAW5jB,EAAKzD,IACjCgD,QAAQC,IAAI,WAAYmB,GD5IP,SAAAA,GAEzB,OADiBN,GAAGjG,OAAOmI,kBAAkB,aAAc5B,GAC3CoN,UC2IRyW,CAAc7jB,GACTmB,MAAK,WACFc,IAAQC,QAAQ,4BAChBihB,OAEH7gB,OAAM,SAAAkE,GACHvE,IAAQM,MAAM,oCDjKR,SAAAb,GACtB,IAAML,EAAO,GASb,OARAK,EAAKG,SAAQ,SAAAxC,GACT,IACM8R,EAAW,IADAzR,GAAGjG,OAAO+U,OAAO,eAElC/U,OAAOgB,KAAK4E,GAAMwC,SAAQ,SAAA7H,GACtBmX,EAASrP,IAAI9H,EAAKqF,EAAKrF,OAE3BqH,EAAKpC,KAAKkS,MAEPzR,GAAGjG,OAAO2X,QAAQ/P,IC2JjByiB,CAAW,CAAC,CAAEloB,GAAIyD,EAAKzD,MAClBuF,MAAK,WAEFc,IAAQC,QAAQ,4BAChBihB,OAEH7gB,OAAM,SAAAkE,GACHvE,IAAQM,MAAM,gCA4BxBwhB,EAAoB,SAAAriB,GACtB,IAAQ4P,EAAwB5P,EAAxB4P,MAAOtR,EAAiB0B,EAAjB1B,SAAiB0B,EAAP9F,GACzBonB,EAAe,CACXpnB,GAAIoE,EACJsR,UAEJ1S,QAAQC,IAAI,OAAQ6C,GACpBqE,GAAkB,GAClBuQ,EAAUnN,QAAQ5B,WAAW+J,GAAS,KAsC1C,OAFAnP,OAAOoX,UAlCW,SAACC,EAAMC,GACrB,IAAM/D,EAASxR,EAAW9E,KACtB,SAAAC,GAAI,OAAIgY,SAAShY,EAAKgT,cAAcS,QAAU,KAG9CmC,EAAM,EACNrQ,EAAQ,EACR8U,EAAQ,GACRvC,EAAO,GACPwC,EAAMF,EAAUrC,MAAM,IAAI7X,QAAO,SAAAF,GAAI,MAAY,KAARA,MAEzCsa,EAAInJ,SAAS,MACbmJ,EAAInJ,SAAS,MACbmJ,EAAInJ,SAAS,MACbmJ,EAAInJ,SAAS,QAEbmJ,EAAMA,EAAIva,KAAI,SAAAC,GAAI,OAAIA,EAAKua,aAAe,MAC1Chb,QAAQC,IAAI,MAAO8a,IAEvB,IAAK,IAAI/f,EAAI4f,EAAM5f,EAAI+f,EAAI7f,OAAS0f,EAAM5f,IAAK,CAC3C,IAAMyF,EAAOqW,EAAO9b,GACdigB,EAAIF,EAAI1E,GACdA,IACI5V,GAAQwa,EACRjV,KAEA8U,EAAMza,KAAKrF,EAAI,GACfud,EAAKlY,KAAKiF,EAAWtK,GAAGgC,KAGhCgD,QAAQC,IAAI,2BAAQwY,SAAkB,IAARzS,EAAe+U,EAAI7f,SACjD8E,QAAQC,IAAI,qBAAO6a,EAAM5J,KAAK,OAC9BlR,QAAQC,IAAI,qBAAOsY,EAAKrH,KAAK,QAK7B,uBAAKxU,UAAU,OAAf,UACI,2DACA,sBAAKA,UAAU,aAAf,SACKsF,EACG,eAAC,KAAD,IAEA,sBAAKtF,UAAU,OAAf,SACK4I,EAAW9E,KAAI,SAACC,EAAMV,GACnB,IAAI6D,EAAS,OAIPsW,EAAa,GACnBzZ,EAAK0V,YAAY,GAAGC,QAAQnT,SAAQ,SAAAxC,GAChCyZ,EAAW7Z,KAAKI,EAAKvF,WAEzB,IAAM4E,EAAMqa,KAAKC,IAAL,MAAAD,KAAYD,GACpBpa,GAAO,GACP8D,EAAS,MACF9D,EAAM,KACb8D,EAAS,OAEb,IAAM0D,EAAMC,IAAW,aACnBgL,UAAU,GACT9R,EAAKoG,OAASpG,EAAKoG,SAExB,OACI,uBAAmBnK,UAAU,OAA7B,UACI,uBAAKA,UAAW4K,EAAhB,UACI,kCAAOvH,EAAQ,EAAf,OACA,uBAAKrD,UAAU,UAAf,UACI,uBAAKA,UAAU,QAAf,UACI,uBACIuP,wBAAyB,CACrBC,OAAQzL,EAAKqE,WAGpBrE,EAAKwY,eACF,eAAC,GAAD,CACI8K,QACIM,EAAW5jB,EAAKzD,IAEpByH,QAAS,kBACLugB,EACIvkB,EACA4jB,EACI5jB,EAAKzD,WAQ7B,sBACIN,UAAS,kBAAakH,GAD1B,SAGKnD,EAAK0V,YAAY,IACd1V,EAAK0V,YAAY,GAAGC,QAAQ5V,KACxB,SAAC1B,EAAQuX,GACL,IAOIxP,EACAwP,GACI5V,EAAK6V,aAEL,WADJ7V,EAAKoG,OAEC,UACA,QACJ0P,EACFhP,IAAW,aACPzI,QAAQ,GACP+H,EACGwP,IACA5V,EAAK6V,cAEjB,OACI,uBAEI7R,QAAS,kBA9N9C,SAAChE,EAAMV,GAC9B,IAAMmU,EAASzT,EAAKgT,cAAcS,OAC5BuG,EAAaha,EAAKzD,GACpB6J,EAAS,GAETA,EADAqN,GAAUnU,EACD,UAEA,QAEb,IAAM2a,EAAgBpV,EAAW9E,KAAI,SAAAC,GACjC,OAAIA,EAAKzD,KAAOyd,EACL,2BACAha,GADP,IAEIwY,eAAe,EACfpS,SACAyP,YAAavW,IAGVU,KAGf8E,EAAcmV,GA0MkDlE,CACI/V,EACA4V,IAGR3Z,UACI6Z,EATR,UAYI,wBAAM7Z,UAAU,MAAhB,UAjCJ,CACI,IACA,IACA,IACA,KAgCY2Z,GAHZ,OAQA,uBACIpK,wBAAyB,CACrBC,OAAQpN,OArBXuX,cA+BpC5V,EAAKwY,eACF,eAAC,GAAD,CACIjV,SAAUmhB,EACVrR,QAAS,kBAvO7B,SAAArT,GAChB,IAAMga,EAAaha,EAAKzD,GAClB0d,EAAgBpV,EAAW9E,KAAI,SAAAC,GACjC,OAAIA,EAAKzD,KAAOyd,EACL,2BACAha,GADP,IAEIwY,eAAe,EACfpS,OAAQ,GACRyP,YAAa,KAGV7V,KAGf8E,EAAcmV,GAyNqClL,CAAY/O,IAC3BqC,KAAMrC,MA3FRA,EAAKzD,WAoGnC,eAAC,IAAD,CACI2a,aAAa,EACb9a,MAAO,IACPP,MAAM,2BACNsF,QAASsF,EACTrF,KAtMK,WACb,IAAMiD,EAAU4S,EAAUnN,QAAQqN,aAElC5X,QAAQC,IAAI,uBAAwBkkB,EAAYnnB,IAChDyV,GAAoB0R,EAAYnnB,GAAI8H,GAC/BvC,MAAK,SAAAC,GACFa,IAAQC,QAAQ,4BAChBkhB,IACArd,GAAkB,MAErBzD,OAAM,SAAAkE,GACHvE,IAAQC,QAAQ,gCA4LhBxB,SAxLS,WACjBqF,GAAkB,IAiLd,SAQI,eAAC,KAAD,CACIzK,UAAU,eACVmb,OAAQ,SAACC,EAAKC,GACV9V,GAAW,GACXyV,EAAUnN,QAAUwN,GAExBC,OAAO,mDACPjX,KAAM,CACFjE,OAAQ,IACRmb,SAAS,EACTC,QAAS,CACL,UACA,WACA,QACA,OACA,QACA,UACA,SACA,gBACA,eACA,OACA,aACA,iBACA,QACA,QACA,UACA,OACA,aAEJC,QACI,oJAIJC,cACI,2E,wCCzZpBpJ,GAAaC,IAAbD,SACArK,GAAYD,IAAZC,QAocOygB,GAjcM,SAAA5oB,GACjB,IAAMsK,EAAUC,cAChB,EAAe8F,IAAKC,UAAbC,EAAP,oBACA,EAAgChL,mBAAS,IAAzC,mBAAOwR,EAAP,KAAiB8R,EAAjB,KACA,EAAgCtjB,mBAAS,IAAzC,mBAAOujB,EAAP,KAAiBC,EAAjB,KACA,EAA8CxjB,mBAAS,IAAvD,mBAAOyjB,EAAP,KAAwBC,EAAxB,KACA,EAAoC1jB,qBAApC,mBAAO2jB,EAAP,KAAmBC,EAAnB,KACA,EAAgD5jB,qBAAhD,mBAAO6jB,EAAP,KAAyBC,EAAzB,KACA,EAA4C9jB,oBAAS,GAArD,mBAAOmF,EAAP,KAAuBC,EAAvB,KACA,EAA8CpF,oBAAS,GAAvD,mBAAO+jB,EAAP,KAAwBC,EAAxB,KACA,EAAoDhkB,oBAAS,GAA7D,mBAAOikB,EAAP,KAA2BC,EAA3B,KACA,EAAoDlkB,mBAAS,IAA7D,mBAAOmkB,EAAP,KAA2BC,EAA3B,KAgBA7jB,qBAAU,WACN8jB,MACD,IAEH9jB,qBAAU,WACNqjB,EAAczC,KAAKmD,UAAU9S,EAAU,KAAM,IAG7C,IAAM+S,EAAqB,SAArBA,EAAqBC,GACvB,IAAKA,EAAU,OAAO,EACtB,IAAIvgB,EAAQ,EAOZ,OANAugB,EAAStjB,SAAQ,SAAAxC,GACbuF,GAASvF,EAAKyR,YAAYhX,OACtBuF,EAAK6S,WACLtN,GAASsgB,EAAmB7lB,EAAK6S,cAGlCtN,GAoCLwgB,EAjCM,SAANC,EAAM3jB,GAER,IADA,IAAMsgB,EAAS,GACNpoB,EAAI,EAAGA,EAAI8H,EAAK5H,OAAQF,IAAK,CAClC,IAAI6K,EAAM,GACJpF,EAAOqC,EAAK9H,GACZgL,EACFvF,EAAKyR,YAAYhX,OAASorB,EAAmB7lB,EAAK6S,UACtDzN,EAAIvJ,MACA,uBAAKuH,MAAO,CAAES,QAAS,QAAU5H,UAAU,aAA3C,UACI,sBAAKA,UAAU,OAAf,SAAuB+D,EAAKnE,QAC5B,sBACIuH,MAAO,CACHwE,WAAY,OACZqN,SAAU,OACV1W,MAAO,WAEXtC,UAAU,MANd,mBAQQsJ,EARR,eAYRH,EAAIzK,IAAMqF,EAAKrF,IACXqF,EAAKyR,cACLrM,EAAIqM,YAAczR,EAAKyR,aAEvBzR,EAAK6S,WACLzN,EAAIyN,SAAWmT,EAAIhmB,EAAK6S,WAE5B8P,EAAO/iB,KAAKwF,GAEhB,OAAOud,EAESqD,CAAIlT,GACxBgS,EAAYiB,KACb,CAACjT,IAEJ,IAAM6S,EAAoB,WACtB,IAAMM,EAAkB,SAAlBA,EAAkB5jB,GAEpB,IADA,IAAMsgB,EAAS,GACNpoB,EAAI,EAAGA,EAAI8H,EAAK5H,OAAQF,IAAK,CAClC,IAAI6K,EAAM,GACJpF,EAAOqC,EAAK9H,GAClB6K,EAAI7H,MAAQyC,EAAKnE,MACjBuJ,EAAI5H,MAAQwC,EAAKrF,IACbqF,EAAK6S,WACLzN,EAAIyN,SAAWoT,EAAgBjmB,EAAK6S,WAExC8P,EAAO/iB,KAAKwF,GAEhB,OAAOud,GxBzCD,IAAItiB,GAAGQ,MAAM,YACdC,IAAI,4BwB0CoBgB,MAAK,SAAAC,GAClC,IAAMM,EAAON,EAAI0G,SAASpE,QAC1BugB,EAAYviB,GACZ,IAAMsgB,EAASsD,EAAgB5jB,GAC/B9C,QAAQC,IAAI,MAAOmjB,GACnBqC,EAAmBrC,OAYrB5b,EAAW,SAAApH,GACb,GAAa,aAATA,EACA,IACI,IAAM0C,EAAOogB,KAAKC,MAAMuC,GACxB7S,GAA+B,CAAE/N,QAAShC,IACrCP,MAAK,WACF4E,GAAkB,GAClBif,IACA/iB,IAAQC,QAAQ,qCAEnBI,OAAM,WACHL,IAAQM,MAAM,qCAExB,MAAOA,GACLN,IAAQM,MAAM,sCAEF,aAATvD,EACPumB,IACgB,WAATvmB,GACPwmB,KAIFC,EAAe,SAAAzmB,GACJ,aAATA,EACA+G,GAAkB,IAElB4F,EAAK+Z,cACLf,GAAmB,KAwBrBY,EAAiB,WACnB3mB,QAAQC,IAAI,OAAQ8M,EAAKga,kBACzBha,EAAKia,iBACAzkB,MAAK,SAAAC,GACF,MAA+BuK,EAAKga,iBAA5BxU,EAAR,EAAQA,SAAUrS,EAAlB,EAAkBA,SACZqY,EAAOhG,EAASiG,MAAM,KAEtBxb,EAAKkD,EAASA,EAAShF,OAAS,GA0ChCwT,EAzCM,SAAN+X,EAAO3jB,EAAM1B,GAEf,IADA,IAAMgiB,EAAS,GACNpoB,EAAI,EAAGA,EAAI8H,EAAK5H,OAAQF,IAAK,CAClC,IAAI6K,EAAM,GACJpF,EAAOqC,EAAK9H,GASlB,GARA6K,EAAIvJ,MAAQmE,EAAKnE,MACjBuJ,EAAIzK,IAAMqF,EAAKrF,IACXqF,EAAKyR,cACLrM,EAAIqM,YAAczR,EAAKyR,aAEvBzR,EAAK6S,WACLzN,EAAIyN,SAAWmT,EAAIhmB,EAAK6S,SAAUlS,IAElCX,EAAKrF,KAAOgG,EAAU,CAEtB,IAAM6lB,EAAWC,KAAOC,aACpBthB,EAAIqM,YACJqG,GAOJ,GALAvY,QAAQC,IACJ,mBACA4F,EAAIqM,YACJqG,GAEA0O,EAAS/rB,OAAS,EAClBmI,IAAQM,MAAR,mFACoBsjB,EAAS7T,iBAE1B,CAEH,IAAMgU,EACFvhB,EAAIqM,YAAYgK,OAAO3D,GAC3B1S,EAAIqM,YAAckV,EAEtBpnB,QAAQC,IAAI,iDAAeQ,GAE/B2iB,EAAO/iB,KAAKwF,GAEhB,OAAOud,EAGKqD,CAAIlT,EAAUvW,GAEzBkqB,KAAOG,QAAQ3Y,EAAS6E,IACzBV,GAA+B,CAAE/N,QAAS4J,IACrCnM,MAAK,WACF4E,GAAkB,GAClBif,IACA/iB,IAAQC,QAAR,0DAEQiV,EAAKrd,OAFb,6BAGUqd,EAAKnF,gBAGlB1P,OAAM,WACHL,IAAQM,MAAM,wCAI7BD,OAAM,SAAAkE,GACH5H,QAAQC,IAAI,MAAO2H,OAIzBgf,EAAiB,WACnB,IAAMU,EAAY1B,EAAiBpN,MAAM,KACzC,GAAI8O,EAAUpsB,QAAU,EACpBmI,IAAQM,MAAM,kDADlB,CAIA,IAgCIoX,EAAM,GACJrM,EAjCM,SAAN+X,EAAO3jB,EAAMwkB,EAAWvM,GAE1B,IADA,IAAMqI,EAAS,GACNpoB,EAAI,EAAGA,EAAI8H,EAAK5H,OAAQF,IAAK,CAClC,IAAI6K,EAAM,GACJpF,EAAOqC,EAAK9H,GAGlB,GAFA6K,EAAIvJ,MAAQmE,EAAKnE,MACjBuJ,EAAIzK,IAAMqF,EAAKrF,IACXqF,EAAKyR,YAAa,CAElB,IAAMqV,EAASL,KAAOM,QAAP,MAAAN,KAAM,CACjBzmB,EAAKyR,aADY,oBAEdoV,KAEP,GAAIC,EAAOrsB,SAAWuF,EAAKyR,YAAYhX,OAAQ,CAE3C,IAAMusB,EAASP,KAAOQ,IAAIjnB,EAAKyR,YAAaqV,GAE5CxM,EAAI1a,KAAK,CACL/D,MAAOuJ,EAAIvJ,MACXknB,IAAKiE,IAGb5hB,EAAIqM,YAAcqV,EAElB9mB,EAAK6S,WACLzN,EAAIyN,SAAWmT,EAAIhmB,EAAK6S,SAAUgU,EAAWvM,IAEjDqI,EAAO/iB,KAAKwF,GAEhB,OAAOud,EAIKqD,CAAIlT,EAAU+T,EAAWvM,GACzC/a,QAAQC,IAAI,UAAWyO,GACvB1O,QAAQC,IAAI,WAAYsT,GACpBwH,EAAI7f,OAAS,EACbyJ,GAAQ,CACJrI,MAAO,sEACPsI,KAAM,eAACC,EAAA,EAAD,IACNC,QACI,+BACKiW,EAAIva,KAAI,SAACC,EAAMV,GACZ,OACI,iCACKU,EAAKnE,MADV,KACmBmE,EAAK+iB,IAAIpQ,aADlBrT,QAO1B8B,KAdI,WAeAgR,GAA+B,CAAE/N,QAAS4J,IACrCnM,MAAK,WACF0jB,GAAsB,GACtBG,IACA/iB,IAAQC,QAAR,qCAEHI,OAAM,WACHL,IAAQM,MAAM,sCAG1B7B,SAzBI,WA0BA9B,QAAQC,IAAI,aAIpBoD,IAAQskB,KAAK,gDAyBrB,OACI,uBAAKjrB,UAAU,gBAAf,UACK4oB,EAASpqB,OAAS,EACf,eAAC,KAAD,CACI0sB,kBAAgB,EAChBC,WAAS,EACTC,SAxUC,SAACC,EAActF,GAC5B,IAAMuF,EAAcD,EAAaA,EAAa7sB,OAAS,GACvD8E,QAAQC,IAAI,WAAY+nB,EAAavF,GACrC,IAAMlK,EAAO,GACbkK,EAAKwF,aAAahlB,SAAQ,SAAAxC,GACtB8X,EAAKlY,KAAL,MAAAkY,EAAI,aAAS9X,EAAKyR,iBAEtBiU,EAAsB5N,GACtBvY,QAAQC,IAAI,OAAQsY,IAiUR2P,QA7OA,SAACH,EAActF,GAC3B,IAAMlK,EAAO,GACbkK,EAAKwF,aAAahlB,SAAQ,SAAAxC,GACtB8X,EAAKlY,KAAL,MAAAkY,EAAI,aAAS9X,EAAKyR,iBAEtBiU,EAAsB5N,IAyOVhF,SAAU+R,IAGd,eAAC,KAAD,IAGJ,eAAC,KAAD,IACA,uDAAUY,EAAmBhrB,OAA7B,YACA,eAAC,KAAD,CAASkF,KAAK,aACd,eAAC,IAAD,CAAQqE,QA3MY,WACxBqC,EAAQzG,KAAR,gBAAsB6lB,EAAmB9S,WAAzC,OA0MI,sCACA,eAAC,KAAD,IACA,eAAC,IAAD,CAAQ3O,QAzMY,WACxB0C,GAAkB,IAwMd,sCACA,eAAC,KAAD,CAAS/G,KAAK,aACd,eAAC,IAAD,CAAQqE,QAvMU,WACtBshB,GAAmB,IAsMf,sCACA,eAAC,KAAD,CAAS3lB,KAAK,aACd,eAAC,IAAD,CAAQmO,QAAM,EAAC9J,QArMM,WACzBwhB,GAAsB,IAoMlB,0BAIA,eAAC,IAAD,CACIppB,MAAO,IACPP,MAAM,2BACNsF,QAASsF,EACTrF,KAAM,kBAAM2F,EAAS,aACrB1F,SAAU,kBAAM+kB,EAAa,aALjC,SAOI,eAAC,GAAD,CACI7W,KAAM,GACN/R,MAAOynB,EACP1hB,SAnOU,SAAAI,GACtBuhB,EAAcvhB,EAAErJ,OAAOkD,YAqOnB,eAAC,IAAD,CACIpB,MAAO,IACPP,MAAM,2BACNsF,QAASkkB,EACTnjB,OAAO,eACPwlB,SAAS,eACTtmB,KAAM,kBAAM2F,EAAS,aACrB1F,SAAU,kBAAM+kB,EAAa,aAPjC,SASI,gBAAC,IAAD,CACI9Z,KAAMA,EACNxN,KAAK,QACL6oB,cAAe,CAAEC,UAAU,GAC3Bnb,SA1EC,SAAAC,GACbnN,QAAQC,IAAI,SAAUkN,IA0EVC,aAAa,MALjB,UAOI,eAAC,IAAKrJ,KAAN,CACI/F,MAAM,eACNuB,KAAK,WACLuQ,MAAO,CACH,CACIC,UAAU,EACV1M,QAAS,mCANrB,SAUI,eAAC,KAAD,CACI+S,QAASoP,EACTnhB,YAAY,oBAIpB,eAAC,IAAKN,KAAN,CACI/F,MAAM,eACNuB,KAAK,WACLuQ,MAAO,CACH,CACIC,UAAU,EACV1M,QAAS,mCANrB,SAUI,eAAC,IAAD,MAGJ,eAAC,IAAKU,KAAN,UACI,eAAC,IAAD,CAAQU,QAvGD,WACvB,IAAQ8N,EAAaxF,EAAKga,iBAAlBxU,SACRhP,OAAO+kB,KAAP,yDACsD/V,EADtD,KAEI,GACA,0BAkGY,iCAKZ,gBAAC,IAAD,CACI1V,MAAO,IACPP,MAAM,2BACNsF,QAASokB,EACTrjB,OAAO,eACPwlB,SAAS,eACTtmB,KAAM,kBAAM2F,EAAS,WACrB1F,SAAU,kBAAMmkB,GAAsB,IAP1C,UASI,eAAC,IAAD,CACIhoB,MAAO2nB,EACP5hB,SAAU,SAAAI,GAAC,OAAIyhB,EAAoBzhB,EAAErJ,OAAOkD,UAEhD,eAAC,KAAD,IACA,eAAC,IAAD,CAAQwG,QAjHQ,WACxBlB,OAAO+kB,KAAP,yDACsD1C,EADtD,KAEI,GACA,0BA6GI,iCCxTD2C,IAjJI7mB,IAAXD,OAEK,WACT,MAA4CM,oBAAS,GAArD,mBACA,GADA,UACoCA,mBAAS,KAA7C,mBAAmBwD,GAAnB,WACA,EAAsCxD,mBAAS,GAA/C,mBACA,GADA,UACgCA,mBAAS,KAAzC,mBAAiBymB,GAAjB,WACA,EAAsCzmB,mBAAS,IAA/C,mBAAoB0mB,GAApB,WACgB1hB,cAChBzE,qBAAU,WACNwQ,KAAcvQ,MAAK,SAAAC,GACf,IAAMM,EAAON,EAAIhC,KAAI,SAAAC,GAAI,OAAIA,EAAKyI,YAClC3D,EAAczC,GAGd,IADA,IAAM4lB,EAAc,GACX1tB,EAAI,EAAGA,EAAI8H,EAAK5H,OAAQF,GAAK,GAAI,CACtC,IAAMyF,EAAOqC,EAAKmS,MAAMja,EAAGA,EAAI,IAC/B0tB,EAAYroB,KAAKI,GAErB+nB,EAAYE,QAEjB,IAEHpmB,qBAAU,WACN4hB,KACK3hB,MAAK,SAAAC,GACF,IACMghB,EADOhhB,EAAIhC,KAAI,SAAAC,GAAI,OAAIA,EAAKyI,YACjB1I,KAAI,SAAAC,GAAI,OAAIA,EAAKzD,MAClCyrB,EAAejF,MAElB9f,OAAM,SAAAkE,GACHvE,IAAQM,MAAM,6CAEvB,IA6EH,OACI,sBAAKjH,UAAU,OAAf,SACI,sBAAKA,UAAU,WAAf,SAwBI,uBAAKA,UAAU,iBAAf,UACI,2DACA,eAAC,GAAD,aC9Hd6hB,I,OAAU,WA+BZ,IA/B6B,IAAhBvY,EAAe,uDAAP,GAEfwY,EAAa,WACf,IAAM9W,EAAIsW,GAAiB,GACrBhE,EAAIgE,GAAiB,GAC3B,MAAO,CAACtW,EAAGsS,EAAGoE,GAAmB1W,EAAIsS,EAAG,KAItC2O,EAAc,WAChB,IAAMjhB,EAAIsW,GAAiB,GACrBhE,EAAIgE,GAAiB,GAC3B,MAAO,CAACtW,EAAGsS,EAAGtS,EAAIsS,EAAGtS,EAAIsS,IAIvBmF,EAAQ,WAGV,IAFA,IAAMzX,EAAIsW,GAAiB,GACvBhE,EAAIgE,GAAiB,GAClBhE,EAAI,GACPA,EAAIgE,GAAiB,GAEzB,MAAO,CAACtW,EAAGsS,EAAGtS,EAAIsS,IAGhBwF,EAAc,CAChBC,EAAGkJ,EACHjJ,EAAGP,EACHQ,EAAGnB,GAEDzD,EAAM,GACH/f,EAAI,EAAGA,EAAIgL,EAAOhL,IAAK,CAC5B,IAAI0M,EAAI8X,EAAY,KAChBxF,EAAIwF,EAAY,KAChBoJ,EAAIpJ,EAAY,KACpBzE,EAAI1a,KAAJ,CAAUrF,EAAI,GAAd,oBAAoB0M,GAApB,aAA0BsS,GAA1B,aAAgC4O,KAEpC,OAAO7N,IAGLsF,GAAgB,CAClB,CACIjgB,KAAM,OACNpC,MAAO,GACPI,KAAM,GAEV,CACIgC,KAAM,OACNpC,MAAO,IACPI,KAAM,GAEV,CACIgC,KAAM,OACNpC,MAAO,IACPI,KAAM,GAEV,CACIgC,KAAM,OACNpC,MAAO,MACPI,KAAM,GAEV,CACIgC,KAAM,OACNpC,MAAO,MACPI,KAAM,GAEV,CACIgC,KAAM,OACNpC,MAAO,IACPI,KAAM,GAEV,CACIgC,KAAM,OACNpC,MAAO,IACPI,KAAM,GAEV,CACIgC,KAAM,OACNpC,MAAO,MACPI,KAAM,GAEV,CACIgC,KAAM,OACNpC,MAAO,IACPI,KAAM,GAEV,CACIgC,KAAM,OACNpC,MAAO,IACPI,KAAM,GAEV,CACIgC,KAAM,OACNpC,MAAO,SACPI,KAAM,IA+GCyqB,GA3GC,WACZ,MAA4B9mB,mBAASse,IAArC,mBAAOE,EAAP,KACA,GADA,KACwBxe,oBAAS,kBAAMwc,SAAvC,mBAAOzb,EAAP,KAAa+d,EAAb,KACMxU,EAAS,qBAWf,OATA/J,qBAAU,WACNjE,SAAS/B,MAAQ,2BACjB,IAAMoS,EAAU6P,KAEhBve,QAAQC,IAAI,MAAOyO,GACnBmS,EAAQnS,KACT,IAIC,uBAAKhS,UAAW2P,EAAhB,UACI,uBAAK3P,UAAU,OAAf,UACI,uEACA,sBAAKA,UAAS,UAAK2P,EAAL,YAAd,SACI,uBAAK3P,UAAU,OAAf,UACI,eAAC,IAAD,CAAKA,UAAU,mBAAf,SACK6jB,EAAO/f,KAAI,SAACC,EAAMV,GACf,OACI,sBAAiBrD,UAAU,gBAA3B,SACK+D,EAAKzC,OADA+B,QAMtB,sBAAKrD,UAAU,OAAf,SACKoG,EAAKtC,KAAI,SAACua,EAAKhb,GAEZ,OADAC,QAAQC,IAAI,MAAO8a,EAAI7f,QAEnB,eAAC,IAAD,CACIwB,UAAU,YADd,SAIKqe,EAAIva,KAAI,SAACC,EAAM4b,GAGZ,OACI,sBACI3f,UAAU,gBADd,SAFU,CAAC,EAAG,EAAG,EAAG,IAMTkV,SAASyK,GACV,GACA5b,GAJD4b,OAVrB,eAEiBtc,iBAwBzC,uBAAKrD,UAAU,cAAf,UACI,uEACA,sBAAKA,UAAS,UAAK2P,EAAL,YAAd,SACI,uBAAK3P,UAAU,OAAf,UACI,eAAC,IAAD,CAAKA,UAAU,mBAAf,SACK6jB,EAAO/f,KAAI,SAACC,EAAMV,GACf,OACI,sBAAiBrD,UAAU,gBAA3B,SACK+D,EAAKzC,OADA+B,QAMtB,sBAAKrD,UAAU,OAAf,SACKoG,EAAKtC,KAAI,SAACua,EAAKhb,GAEZ,OADAC,QAAQC,IAAI,MAAO8a,EAAI7f,QAEnB,eAAC,IAAD,CACIwB,UAAU,YADd,SAIKqe,EAAIva,KAAI,SAACC,EAAM4b,GAGZ,OACI,sBACI3f,UAAS,wBAHH,CAAC,EAAG,EAAG,EAAG,IAINkV,SAASyK,GACT,OACA,IAJd,SAQK5b,GAFI4b,OAdrB,eAEiBtc,qBCjL/C+oB,GAAO,WACT,IAAM9hB,EAASC,cACf,EAAsClF,mBAClC,IAAI4I,KAAY,CACZoe,gBAAiB,CAAC,qBAF1B,mBAAOvgB,EAAP,KAAoBwgB,EAApB,KAgBA,OAXA1mB,qBAAU,WACN,IAAMmI,EAAI,IAAIE,KAAY,CACtBoe,gBAAiB,CAAC,oBAItB,OAFAC,EAAeve,GAER,WACHA,EAAEwe,aAEP,CAACjiB,IAGA,uBAAKtK,UAAU,YAAf,UACI,eAAC,GAAD,IACA,uBAAKA,UAAU,OAAf,UACI,eAAC,GAAD,CAA8B8L,YAAaA,GAA1BA,GACjB,eAAC,GAAD,CAA2BA,YAAaA,GAA1BA,UAgCf0gB,GA1BH,WACR,OACI,eAAC,IAAD,UACI,gBAAC,IAAD,WACI,eAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpZ,KACjC,eAAC,IAAD,CAAOkZ,OAAK,EAACC,KAAK,SAASC,UAAWpZ,KACtC,eAAC,IAAD,CAAOkZ,OAAK,EAACC,KAAK,WAAWC,UAAW/X,KACxC,eAAC,IAAD,CAAO6X,OAAK,EAACC,KAAK,kBAAkBC,UAAWP,KAG/C,eAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,QAAQC,UAAWC,KACrC,eAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,WAAWC,UAAWR,KACxC,eAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,QAAQC,UAAW/H,KACrC,eAAC,IAAD,CAAO6H,OAAK,EAACC,KAAK,QAAQC,UAAWE,KACrC,eAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,kBAAkBC,UAAWG,KAC/C,eAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,YAAYC,UAAWjH,KAEzC,eAAC,IAAD,CAAO+G,OAAK,EAACC,KAAK,UAAUC,UAAWnW,KACvC,eAAC,IAAD,CAAOiW,OAAK,EAACC,KAAK,oBAAoBC,UAAWnQ,KAEjD,eAAC,IAAD,CAAOiQ,OAAK,EAACC,KAAK,QAAQC,UAAWd,WClExCkB,I,OAAQC,YAAe,CAChCC,QAAS,CACLlkB,WAAYmkB,GACZvnB,OAAQwnB,OCChBC,IAASlkB,OACL,eAAC,IAAD,CAAU6jB,MAAOA,GAAjB,SACI,eAAC,GAAD,MAEJprB,SAAS0rB,eAAe,W","file":"static/js/main.c3ceaf9f.chunk.js","sourcesContent":["var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    t: 1624887109928,\n    className: \"icon\",\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"p-id\": 3819,\n    width: 32,\n    height: 32,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M187.2 341.7L77.9 232.4c-45.8-45.8-45.8-120.8 0-166.6s120.8-45.8 166.6 0l109.3 109.3c45.8 45.8 45.8 120.8 0 166.6s-120.8 45.8-166.6 0zM838.8 341.7l109.3-109.3c45.8-45.8 45.8-120.8 0-166.6s-120.7-45.8-166.6 0L672.2 175.2c-45.8 45.8-45.8 120.8 0 166.6 45.8 45.7 120.8 45.7 166.6-0.1z\",\n    fill: \"\",\n    \"p-id\": 3820\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M743.9 905.4l-140.7 15.9c-59.9 6.8-120.4 6.8-180.3 0l-140.7-15.9c-151.6 0-268.3-159.9-247.5-310.1l15.9-115c29.4-213.9 212.2-373.2 428-373.2h68.7c215.9 0 398.6 159.3 428.2 373.1l15.9 115c20.8 150.3-95.9 310.2-247.5 310.2z\",\n    fill: \"#FCFCFC\",\n    \"p-id\": 3821\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M513 936.3c-30.5 0-61-1.7-91.3-5.1l-140.2-15.8c-35.3-0.1-69.7-8.4-102.3-24.6-30.8-15.4-58.6-37.2-82.6-64.7-56.2-64.6-83.2-151.3-72-232.1l15.9-115c14.7-106 67.1-202.9 147.6-273 80.5-70.2 183.7-108.8 290.5-108.8h68.7c106.8 0 210 38.6 290.5 108.8a442.92 442.92 0 0 1 147.6 272.9l15.9 115c11.2 80.8-15.8 167.5-72 232.1-24 27.6-51.8 49.4-82.6 64.7-32.6 16.3-67 24.6-102.3 24.6l-140.2 15.8c-30.2 3.5-60.7 5.2-91.2 5.2z m-34.4-819.2c-102 0-200.5 36.9-277.4 103.9-76.8 67-126.9 159.6-140.8 260.6l-15.9 115c-10.4 75.1 14.8 156 67.3 216.2 46.4 53.2 106.9 82.5 170.4 82.5h0.6l0.6 0.1 140.7 15.9c59.1 6.7 119 6.7 178.1 0l141.3-15.9h0.6c63.5 0 124-29.3 170.4-82.5 52.5-60.3 77.7-141.1 67.3-216.2l-15.9-115c-14-101-64-193.6-140.9-260.6-76.9-67-175.4-103.9-277.4-103.9h-69z\",\n    fill: \"#020202\",\n    \"p-id\": 3822\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M433.4 495.1c19.4 75.4-54.2 166.4-129.6 185.8S179.7 669 160.3 593.6s26-222.8 101.4-242.2S414 419.7 433.4 495.1z\",\n    fill: \"\",\n    \"p-id\": 3823\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M298.6 513.9m-79.3 0a79.3 79.3 0 1 0 158.6 0 79.3 79.3 0 1 0-158.6 0Z\",\n    fill: \"#FFFFFF\",\n    \"p-id\": 3824\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M298.6 513.9m-50.9 0a50.9 50.9 0 1 0 101.8 0 50.9 50.9 0 1 0-101.8 0Z\",\n    fill: \"\",\n    \"p-id\": 3825\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M315.2 500.6m-20.3 0a20.3 20.3 0 1 0 40.6 0 20.3 20.3 0 1 0-40.6 0Z\",\n    fill: \"#FFFFFF\",\n    \"p-id\": 3826\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M592.6 495.1c-19.4 75.4 54.2 166.4 129.6 185.8s124.1-11.9 143.5-87.3c19.4-75.4-26-222.8-101.4-242.2S612 419.7 592.6 495.1z\",\n    fill: \"\",\n    \"p-id\": 3827\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M727.4 513.9m-79.3 0a79.3 79.3 0 1 0 158.6 0 79.3 79.3 0 1 0-158.6 0Z\",\n    fill: \"#FFFFFF\",\n    \"p-id\": 3828\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M727.4 513.9m-50.9 0a50.9 50.9 0 1 0 101.8 0 50.9 50.9 0 1 0-101.8 0Z\",\n    fill: \"\",\n    \"p-id\": 3829\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M710.8 500.6m-20.3 0a20.3 20.3 0 1 0 40.6 0 20.3 20.3 0 1 0-40.6 0Z\",\n    fill: \"#FFFFFF\",\n    \"p-id\": 3830\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M466.3 695.3a46.7 34.5 0 1 0 93.4 0 46.7 34.5 0 1 0-93.4 0Z\",\n    fill: \"\",\n    \"p-id\": 3831\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M485.9 823.1c0 9.5-12.1 17.1-27.1 17.1-15 0-27.1-7.7-27.1-17.1\",\n    fill: \"#FCFCFC\",\n    \"p-id\": 3832\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M458.8 850.3c-20.8 0-37.1-11.9-37.1-27.1 0-5.5 4.5-10 10-10s10 4.5 10 10c0 2.2 6.5 7.1 17.1 7.1 10.6 0 17.1-5 17.1-7.1 0-5.5 4.5-10 10-10s10 4.5 10 10c0 15.1-16.3 27.1-37.1 27.1z\",\n    fill: \"\",\n    \"p-id\": 3833\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M594.3 823.1c0 9.5-12.1 17.1-27.1 17.1-15 0-27.1-7.7-27.1-17.1\",\n    fill: \"#FCFCFC\",\n    \"p-id\": 3834\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M567.2 850.3c-20.8 0-37.1-11.9-37.1-27.1 0-5.5 4.5-10 10-10s10 4.5 10 10c0 2.2 6.5 7.1 17.1 7.1s17.1-5 17.1-7.1c0-5.5 4.5-10 10-10s10 4.5 10 10c0 15.1-16.3 27.1-37.1 27.1z\",\n    fill: \"\",\n    \"p-id\": 3835\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M485.9 823.1c0-9.5 12.1-17.1 27.1-17.1 15 0 27.1 7.7 27.1 17.1\",\n    fill: \"#FCFCFC\",\n    \"p-id\": 3836\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M550.1 823.1h-20c0-2.2-6.5-7.1-17.1-7.1-10.6 0-17.1 5-17.1 7.1h-20c0-15.2 16.3-27.1 37.1-27.1s37.1 11.9 37.1 27.1z\",\n    fill: \"\",\n    \"p-id\": 3837\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.a88277f7.svg\";\nexport { ForwardRef as ReactComponent };","/**\r\n * 数据格式设计\r\n *\r\n *\r\n * [{\r\n *   code: '',\r\n *   nationality: '',\r\n *   sex: '',\r\n *   time: '',\r\n *   title: '', 1. 标题\r\n *   score: '', 2. 水平（中级和高级）\r\n *   certificate: '', 3. 体裁 4. 国籍 5. 文章内容 6. 来源 7. 自定义\r\n *   content: {\r\n *     info: '',\r\n *     txt: ''\r\n *   }\r\n *   formatContent: {\r\n *     info: '',\r\n *     txt: ''\r\n *   },\r\n *   annotation: {\r\n *     123:''\r\n *   }\r\n * }]\r\n */\r\n// var data = new FormData()\r\n// data.append('zwm', '199312123523100103')\r\n\r\n// const queryData = () => {}\r\n\r\n// const getContent = zwm => {\r\n//     fetch('http://hsk.blcu.edu.cn/Index/get_zwm_txt', {\r\n//         method: 'POST',\r\n//         body: `zwm=${zwm}`,\r\n//         headers: {\r\n//             Cookie: 'PHPSESSID=3t94eftd5s7n3n9a06euflqv6d; PHPSESSID_NS_Sig=oenCV6mfmnop-1Pu; VGOTCN_OnLineCount=U2',\r\n//             'User-Agent':\r\n//                 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.101 Safari/537.36',\r\n//             'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n//         },\r\n//     })\r\n//         .then(response => response.json())\r\n//         .then(json => {\r\n//             console.log('json')\r\n//         })\r\n//         .catch(err => console.log('Request Failed', err))\r\n// }\r\n\r\n// // 替换文本\r\n// const main = () => {}\r\n\r\n// '{CP做为[C]清官来[F來]讲[C]，法律应该[F該]是无情的。P}'.replace(\r\n//     /\\{CP(.*?)P\\}/g,\r\n//     '$1'\r\n// )\r\n// // \\{CP(.*?)P\\}\r\n// var str = ''\r\n// str\r\n//     .replace(/\\[.*?\\]/g, '')\r\n//     // 忽略CP标注\r\n//     .replace(/\\{CP(.*?)P\\}/g, '$1')\r\n//     .replace(/\\{CQ(.*?)Q\\}/g, '$1')\r\n//     .replace(/\\{.*?\\}/g, '')`\r\n// 199508香港.0000705436341504\r\n//   “安乐死”是一件[C]不平凡的事情。从不同的角度看这[F這]个问题会有不[C]同的见解和结论。争论的主要焦点在于如何处理好法律与[C]人之常情{CC人事常情}{CQ的}关系。\r\n//     根据严格的法律，我相信法院判的对。既然故意杀人，就有罪。{CP做为[C]清官来[F來]讲[C]，法律应该[F該]是无情的。P}法官会认[C]为如果法律随[F隨]时变动，可妥[C]协的话[F話]，一个国家如何用{CJ+sy执行}法制来[F來]治[B制]理{CJ+by国家}呢？\r\n//     {CP可是不幸的是世界上的千变万[C]化，另外人民的人情关系，宗[B崇]教信仰及风俗习惯都具有悠[B攸]久的历史。P}我们[F們]的法律制度不仅不可能提供足够[F夠]的条例[C]来[F來]概括人们[F們]生活中多种多样{CJ+dy发生}的事情，另外在很多方面[L]将与人们[F們]的风俗习惯，崇教信仰发生冲突。\r\n//     {CP因此虽然从法律的观[C]点{CQ来看}似乎[B呼]法院的判决是{CD有}符合法律的，可是根据人情的道理，由于他的杀人目[C]的是好意，即为了使他的妻子不再痛苦，法院的判决，说[F說]他故意杀人罪是没有道理{CJsd}[BQ。]P}\r\n//     从以上的两[F兩]个[F個]不同观[C]点{CQ来看}，我觉[C]得评[F評]论[C]“安乐死”事件不能一边倒[C]。我们[F們]不能简单的说[F說]丈夫有罪或无罪，因为我[C]们[F們]既[B即]要讲[C]法律也要讲[C]人情。{CP我觉[C]得最好的方法是调[F調]查当地人们[F們]的意见[F見]，慎重考虑是否在人情的分上，我们[F們]是否应该[F該]这[F這]件做一个明智的决定，即不削[B消]弱法律的作用，又可以照[C]顾[C]人情的道理。P}\r\n//     另外，我[C]们还可以提出，根据“安乐死”事件，修正或更改我们[F們]的法律条例[C]，为以后发生的类似事件提供既{CC又}符合法律又{CC及}符合人情的解[C]决方法。\r\n// `\r\n\r\nexport const mapColorToHex = {\r\n    blue: '#0d6efd',\r\n    indigo: '#6610f2',\r\n    purple: '#6f42c1',\r\n    pink: '#d63384',\r\n    red: '#dc3545',\r\n    orange: '#fd7e14',\r\n    yellow: '#ffc107',\r\n    green: '#198754',\r\n    teal: '#20c997',\r\n    cyan: '#0dcaf0',\r\n}\r\n\r\nexport const presetColor = [\r\n    {\r\n        key: 'blue',\r\n        label: '蓝色',\r\n        value: '#0d6efd',\r\n    },\r\n    {\r\n        key: 'indigo',\r\n        label: '靛蓝色',\r\n        value: '#6610f2',\r\n    },\r\n    {\r\n        key: 'purple',\r\n        label: '紫色',\r\n        value: '#6f42c1',\r\n    },\r\n    {\r\n        key: 'pink',\r\n        label: '粉色',\r\n        value: '#d63384',\r\n    },\r\n    {\r\n        key: 'red',\r\n        label: '红色',\r\n        value: '#dc3545',\r\n    },\r\n    {\r\n        key: 'orange',\r\n        label: '橙色',\r\n        value: '#fd7e14',\r\n    },\r\n    {\r\n        key: 'yellow',\r\n        label: '黄色',\r\n        value: '#ffc107',\r\n    },\r\n    {\r\n        key: 'green',\r\n        label: '绿色',\r\n        value: '#198754',\r\n    },\r\n    {\r\n        key: 'teal',\r\n        label: '蓝绿色',\r\n        value: '#20c997',\r\n    },\r\n    {\r\n        key: 'cyan',\r\n        label: '青色',\r\n        value: '#0dcaf0',\r\n    },\r\n]\r\n\r\n// 通过属性选择器，获取对应的\r\nexport const getDomByDataId = highlightId => {\r\n    let span = document.querySelectorAll(\r\n        `span[data-highlight-id=\"${highlightId}\"]`\r\n    )\r\n    if (span.length <= 0)\r\n        span = document.querySelectorAll(\r\n            `span[data-highlight-id-extra=\"${highlightId}\"]`\r\n        )\r\n    return span\r\n}\r\n\r\n// 清除高亮区域下所有的i标签\r\nexport const clearHightLight = el => {\r\n    const list = el.querySelectorAll('i')\r\n    for (let i = 0; i < list.length; i++) {\r\n        const parentElement = list[i].parentElement\r\n        parentElement.removeChild(list[i])\r\n    }\r\n}\r\n\r\nexport const addClass = (el, className) => {\r\n    if (!el.classList.contains(className)) {\r\n        el.classList.add(className)\r\n    }\r\n}\r\n\r\n// 对高亮的span元素进行设置\r\nexport const setHightlightSpanEl = (els, option) => {\r\n    const { text, color } = option\r\n    for (let i = 0; i < els.length; i++) {\r\n        let el = els[i]\r\n        addClass(el, `color-${color}`)\r\n        let highlightId = el.dataset.highlightIdExtra || el.dataset.highlightId\r\n        const spans = getDomByDataId(highlightId)\r\n        if (el === spans[0]) {\r\n            if (!el.dataset.text || el.dataset.text === 'null') {\r\n                // console.log('el被设置为', text, highlightId)\r\n                el.dataset.text = text\r\n            }\r\n        } else {\r\n            // console.log('el被设置为', null, highlightId)\r\n            el.dataset.text = 'null'\r\n            if (el.dataset.highlightSplitType === 'tail') {\r\n                if (spans[0].dataset.text === 'null') {\r\n                    spans[0].dataset.text = text\r\n                }\r\n            }\r\n        }\r\n        // 再添加新的\r\n    }\r\n}\r\n","import { createSlice, nanoid } from '@reduxjs/toolkit'\r\nimport { presetColor } from '../../../utils'\r\n// 预设的颜色\r\n\r\nconst initialState = {\r\n    categoryList: [\r\n        // {\r\n        //     id: '', // 唯一id\r\n        //     text: '', // 文案\r\n        //     color: '', // 颜色\r\n        //     type: '', // 标注类型 accpet | wrong\r\n        // },\r\n    ],\r\n}\r\n\r\nexport const Header = createSlice({\r\n    name: 'header',\r\n    initialState,\r\n    reducers: {\r\n        createCategory: (state, action) => {\r\n            const len = state.categoryList.length\r\n            const index =\r\n                len < presetColor.length ? len : presetColor.length - 1\r\n            console.log(\r\n                'presetColor[index].key',\r\n                presetColor[index],\r\n                presetColor[index].key\r\n            )\r\n            const category = {\r\n                id: nanoid(),\r\n                text: '',\r\n                color: presetColor[index].key,\r\n                type: 'accept',\r\n            }\r\n            state.categoryList.push(category)\r\n        },\r\n        changeCategory: (state, action) => {\r\n            const { id, name, value } = action.payload\r\n            console.log('action.payload', action.payload)\r\n            state.categoryList = state.categoryList.map(item => {\r\n                if (id === item.id) {\r\n                    return {\r\n                        ...item,\r\n                        [name]: value,\r\n                    }\r\n                } else {\r\n                    return item\r\n                }\r\n            })\r\n        },\r\n        deleteCategory: (state, action) => {\r\n            const id = action.payload\r\n            state.categoryList = state.categoryList.filter(\r\n                item => item.id !== id\r\n            )\r\n        },\r\n        updateCategory: (state, action) => {\r\n            state.categoryList = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    createCategory,\r\n    changeCategory,\r\n    updateCategory,\r\n    deleteCategory,\r\n} = Header.actions\r\n\r\nexport default Header.reducer\r\n","import LC from 'leancloud-storage'\r\n\r\n// leanCloud 初始化\r\nLC.init({\r\n    appId: 'zhG78X78KsJ4MuyLquDrtexj-gzGzoHsz',\r\n    appKey: 'QhcOlKH32P32CCaEUbzJJWbo',\r\n    serverURL: 'https://zhg78x78.lc-cn-n1-shared.com',\r\n})\r\n\r\n// 封装增删改查的函数\r\n\r\nclass Util {\r\n    // get查询\r\n    get(options) {\r\n        const { tableName, objectId } = options\r\n        const query = new LC.Query(tableName)\r\n        if (objectId) return query.get(objectId)\r\n        else {\r\n            query.limit(1000)\r\n            return query.find()\r\n        }\r\n    }\r\n}\r\n\r\nexport default LC\r\n","// 服务提供.\r\nimport LC from './index'\r\n\r\n// 登录接口\r\nexport const Login = (username, password) => {\r\n    return LC.User.logIn(username, password)\r\n}\r\n\r\n// 新增配置到leanCloud\r\nexport const addConfigToLeanCloud = data => {\r\n    const Configs = LC.Object.extend('Configs')\r\n    const configs = new Configs()\r\n    Object.keys(data).forEach(key => {\r\n        configs.set(key, data[key])\r\n    })\r\n    return configs.save()\r\n}\r\n\r\n// 从leanCloud获取数据\r\nexport const getConfigFromLeanCloud = objectId => {\r\n    const query = new LC.Query('Configs')\r\n    if (objectId) return query.get(objectId)\r\n    else return query.find()\r\n}\r\n\r\n// update\r\nexport const updateConfigToLeanCloud = (objectId, data) => {\r\n    const config = LC.Object.createWithoutData('Configs', objectId)\r\n    Object.keys(data).forEach(key => {\r\n        config.set(key, data[key])\r\n    })\r\n    return config.save()\r\n}\r\n\r\n// delete\r\nexport const deleteConfigToLeanCloud = objectId => {\r\n    const todo = LC.Object.createWithoutData('Configs', objectId)\r\n    return todo.destroy()\r\n}\r\n\r\n// test\r\nexport const testConfigFromLeanCloud = () => {\r\n    const query = new LC.Query('Configs')\r\n    query.find().then(configs => {\r\n        console.log('configs', configs)\r\n    })\r\n}\r\n\r\nexport const queryListFromLeanCloud = data => {\r\n    const query = new LC.Query('Configs')\r\n    Object.keys(data).forEach(key => {\r\n        data[key] && query.equalTo(key, data[key])\r\n    })\r\n    return query.find()\r\n}\r\n\r\n// export const updateConfig = createAsyncThunk(\r\n//     'category/updateConfig',\r\n//     async (option, { getState}) => {\r\n\r\n//     }\r\n// )\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, Modal, Input, Row, Col, Select, message } from 'antd'\r\nimport {\r\n    MinusCircleOutlined,\r\n    PlusOutlined,\r\n    ExclamationCircleOutlined,\r\n} from '@ant-design/icons'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    changeCategory,\r\n    createCategory,\r\n    updateCategory,\r\n    deleteCategory,\r\n} from './HeaderSlice'\r\nimport { mapColorToHex, presetColor } from '../../../utils'\r\nimport { useEffect } from 'react'\r\nimport {\r\n    getConfigFromLeanCloud,\r\n    updateConfigToLeanCloud,\r\n} from '../../../service/service'\r\nimport './Header.scss'\r\n\r\nconst { Option } = Select\r\nconst objectId = '610291721de21d3e072c5432'\r\nconst EditCategoryModal = props => {\r\n    const { visible, onOk, onCancel } = props\r\n    const [loading, setLoading] = useState(false)\r\n    const dispatch = useDispatch()\r\n    //\r\n    const categoryList = useSelector(state => state.header.categoryList)\r\n    const header = useSelector(state => state.header)\r\n    const handleEdit = () => {\r\n        setLoading(true)\r\n        updateConfigToLeanCloud(objectId, {\r\n            categoryList: categoryList,\r\n        })\r\n            .then(res => {\r\n                setLoading(false)\r\n                message.success('上传成功')\r\n                window.location.reload()\r\n                onOk && onOk()\r\n            })\r\n            .catch(() => {\r\n                setLoading(false)\r\n                message.error('上传失败')\r\n            })\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        onCancel && onCancel()\r\n    }\r\n\r\n    useEffect(() => {\r\n        getConfigFromLeanCloud(objectId).then(res => {\r\n            const list = res.get('categoryList')\r\n            // 更新到redux中\r\n            dispatch(updateCategory(list))\r\n        })\r\n    }, [])\r\n\r\n    const handleAdd = () => {\r\n        dispatch(createCategory())\r\n    }\r\n\r\n    const handleChange = ({ id, value, name }) => {\r\n        dispatch(\r\n            changeCategory({\r\n                id,\r\n                value,\r\n                name,\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleDelete = id => {\r\n        Modal.confirm({\r\n            title: '删除',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: '删除该标注后，曾经使用过该标注的数据无法正确显示',\r\n            okText: '确认',\r\n            cancelText: '取消',\r\n            onCancel: () => {\r\n                console.log('取消')\r\n            },\r\n            onOk: () => {\r\n                dispatch(deleteCategory(id))\r\n                console.log('删除', id)\r\n            },\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title='编辑配置'\r\n            okText='确定'\r\n            cancelText='取消'\r\n            confirmLoading={loading}\r\n            visible={visible}\r\n            onOk={handleEdit}\r\n            width={800}\r\n            onCancel={handleCancel}\r\n        >\r\n            <Form layout={'inline'}>\r\n                {categoryList.map((item, index) => {\r\n                    const { id, text, color, type } = item\r\n                    return (\r\n                        <Row style={{ marginBottom: 30 }} key={id}>\r\n                            <Col>\r\n                                <Form.Item label='标注颜色'>\r\n                                    <Select\r\n                                        value={color}\r\n                                        style={{ width: 120 }}\r\n                                        onChange={value =>\r\n                                            handleChange({\r\n                                                id,\r\n                                                value,\r\n                                                name: 'color',\r\n                                            })\r\n                                        }\r\n                                    >\r\n                                        {presetColor.map((item, index) => {\r\n                                            const { key, label } = item\r\n                                            return (\r\n                                                <Option key={index} value={key}>\r\n                                                    {label}\r\n                                                </Option>\r\n                                            )\r\n                                        })}\r\n                                    </Select>\r\n                                    <div\r\n                                        style={{\r\n                                            marginTop: 5,\r\n                                            borderRadius: 3,\r\n                                            height: 20,\r\n                                            backgroundColor:\r\n                                                mapColorToHex[color],\r\n                                        }}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Item label='标注文案'>\r\n                                    <Input\r\n                                        value={text}\r\n                                        onChange={e =>\r\n                                            handleChange({\r\n                                                id,\r\n                                                value: e.target.value,\r\n                                                name: 'text',\r\n                                            })\r\n                                        }\r\n                                        placeholder='请输入标注的文案'\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Item label='批注类型'>\r\n                                    <Select\r\n                                        value={type}\r\n                                        style={{ width: 120 }}\r\n                                        onChange={value =>\r\n                                            handleChange({\r\n                                                id,\r\n                                                value,\r\n                                                name: 'type',\r\n                                            })\r\n                                        }\r\n                                    >\r\n                                        <Option value='accept'>正确类型</Option>\r\n                                        <Option value='wrong'>错误类型</Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <div\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                }}\r\n                                className='delete'\r\n                            >\r\n                                <MinusCircleOutlined\r\n                                    onClick={() => handleDelete(item.id)}\r\n                                />\r\n                            </div>\r\n                        </Row>\r\n                    )\r\n                })}\r\n                <Button\r\n                    type='dashed'\r\n                    onClick={() => handleAdd()}\r\n                    style={{ marginTop: 30 }}\r\n                    icon={<PlusOutlined />}\r\n                >\r\n                    添加标注\r\n                </Button>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditCategoryModal\r\n","import LC from './index'\r\n\r\n/**\r\n * 添加文章\r\n * @param {*} data\r\n * @returns\r\n */\r\nexport const createArticle = data => {\r\n    // 文章表里添加文章相关数据\r\n    const Configs = LC.Object.extend('Article')\r\n    const configs = new Configs()\r\n    Object.keys(data).forEach(key => {\r\n        configs.set(key, data[key])\r\n    })\r\n    return configs.save()\r\n}\r\n\r\n/**\r\n * 添加文章内容\r\n * @param {*} data\r\n * @returns\r\n */\r\n// export const createArticle = data => {\r\n//     const Configs = LC.Object.extend('Article')\r\n//     const configs = new Configs()\r\n//     Object.keys(data).forEach(key => {\r\n//         configs.set(key, data[key])\r\n//     })\r\n//     return configs.save()\r\n// }\r\n\r\n// 从leanCloud获取数据\r\nexport const getArticleFromLeanCloud = objectId => {\r\n    const query = new LC.Query('Article')\r\n    query.descending('createdAt')\r\n    if (objectId) return query.get(objectId)\r\n    else {\r\n        query.limit(500)\r\n        return query.find()\r\n    }\r\n}\r\n\r\n// update\r\nexport const updateArticleToLeanCloud = (objectId, data) => {\r\n    const config = LC.Object.createWithoutData('Article', objectId)\r\n    Object.keys(data).forEach(key => {\r\n        config.set(key, data[key])\r\n    })\r\n    return config.save()\r\n}\r\n\r\n// delete\r\nexport const deleteArticleToLeanCloud = objectId => {\r\n    const todo = LC.Object.createWithoutData('Article', objectId)\r\n    return todo.destroy()\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Form, Modal, Table, Select, message } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './Header.scss'\r\n\r\nconst { Option } = Select\r\nconst objectId = '610291721de21d3e072c5432'\r\nconst StatisticsModal = props => {\r\n    const { visible, onOk, onCancel } = props\r\n    const [loading, setLoading] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const [dataSource, setDataSource] = useState([])\r\n    //\r\n    const config = useSelector(state => state.annotation.config)\r\n    const annotationList = useSelector(state => state.annotation.annotationList)\r\n    const categoryList = useSelector(state => state.header.categoryList)\r\n\r\n    const handleEdit = () => {\r\n        onCancel && onCancel()\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        console.log('？？？调用一下啊')\r\n        onCancel && onCancel()\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'No.',\r\n            dataIndex: 'No',\r\n            key: 'No',\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Count',\r\n            dataIndex: 'count',\r\n            key: 'count',\r\n        },\r\n        {\r\n            title: 'Text',\r\n            dataIndex: 'text',\r\n            key: 'text',\r\n            render: text => (\r\n                <div>\r\n                    {text.map((item, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                {index + 1}. {item}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            ),\r\n        },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        if (visible && annotationList && annotationList.length > 0) {\r\n            const obj = {}\r\n            let No = 0\r\n            annotationList.forEach((item, index) => {\r\n                const { categoryId, text } = item\r\n                if (obj[categoryId]) {\r\n                    obj[categoryId].count = obj[categoryId].count + 1\r\n                    obj[categoryId].text.push(text)\r\n                } else {\r\n                    const config = categoryList.find(i => i.id === categoryId)\r\n                    const categoryName = config.text\r\n                    obj[categoryId] = {\r\n                        key: No,\r\n                        No: No++,\r\n                        name: categoryName,\r\n                        text: [text],\r\n                        count: 1,\r\n                    }\r\n                }\r\n            })\r\n            const statisticsData = Object.keys(obj).map(key => {\r\n                const item = obj[key]\r\n                return item\r\n            })\r\n            setDataSource(statisticsData)\r\n        }\r\n    }, [annotationList, visible, categoryList])\r\n\r\n    return (\r\n        <Modal\r\n            title='统计分析'\r\n            okText='确定'\r\n            cancelText='取消'\r\n            confirmLoading={loading}\r\n            visible={visible}\r\n            onOk={handleEdit}\r\n            width={800}\r\n            onCancel={handleCancel}\r\n        >\r\n            <Table dataSource={dataSource} columns={columns} />\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default StatisticsModal\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    annotationList: [], // {id, text, }\r\n    config: {}, // 文章的配置信息, 等级，来源，国籍\r\n    isSave: false, // 是否保存\r\n}\r\n\r\nexport const Annotation = createSlice({\r\n    name: 'annotation',\r\n    initialState,\r\n    reducers: {\r\n        initAnnotation: (state, action) => {\r\n            const obj = action.payload\r\n            const { annotation, score, nationality, source } = obj\r\n            state.annotationList = annotation || []\r\n            state.config = {\r\n                score,\r\n                nationality,\r\n                source,\r\n            }\r\n        },\r\n        createAnnotation: (state, action) => {\r\n            const mark = action.payload\r\n            // 如果mark已经存在在annotationList中，则不被添加\r\n            const repeat = state.annotationList.some(\r\n                item => item.id === mark.id\r\n            )\r\n            if (!repeat) {\r\n                state.annotationList.push(mark)\r\n            }\r\n        },\r\n        deleteAnnotation: (state, action) => {\r\n            const id = action.payload\r\n            state.annotationList = state.annotationList.filter(\r\n                item => item.id !== id\r\n            )\r\n        },\r\n        updateSavaStatus: (state, action) => {\r\n            const status = action.payload\r\n            state.isSave = status\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    initAnnotation,\r\n    createAnnotation,\r\n    deleteAnnotation,\r\n    updateSavaStatus,\r\n} = Annotation.actions\r\n\r\nexport default Annotation.reducer\r\n","import React, { useCallback, useEffect } from 'react'\r\nimport classNames from 'classnames'\r\nimport { ReactComponent as Logo } from '../../../static/logo.svg'\r\nimport { Button, message } from 'antd'\r\nimport './Header.scss'\r\nimport { useState } from 'react'\r\nimport EditCategoryModal from './EditCategoryModal'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { updateArticleToLeanCloud } from '../../../service/article'\r\nimport StatisticsModal from './StatisticsModal'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateSavaStatus } from '../Annotation/AnnotationSlice'\r\n\r\nconst Header = props => {\r\n    const { className, type = 'edit' } = props\r\n    const history = useHistory()\r\n    const params = useParams()\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false)\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n    const [isStatisticsVisible, setIsStatisticsVisible] = useState(false)\r\n    const annotationList = useSelector(state => state.annotation.annotationList)\r\n    const prefix = 'zz-header'\r\n    const cls = classNames({\r\n        [prefix]: true,\r\n        [className]: className,\r\n    })\r\n    const handleOk = useCallback(async () => {\r\n        const { objectId } = params\r\n        console.log('annotationList', annotationList, objectId)\r\n        setLoading(true)\r\n        updateArticleToLeanCloud(objectId, {\r\n            annotation: annotationList,\r\n            annotationCount: annotationList.length || 0,\r\n        })\r\n            .then(res => {\r\n                message.success('保存成功！')\r\n                dispatch(updateSavaStatus(false))\r\n                setLoading(false)\r\n            })\r\n            .catch(err => {\r\n                message.success('保存失败，请检查网络设置！')\r\n                setLoading(false)\r\n            })\r\n    }, [annotationList])\r\n\r\n    useEffect(() => {\r\n        const keyDownFn = event => {\r\n            const keyCode = event.keyCode\r\n\r\n            if (keyCode == 83 && window.event.ctrlKey) {\r\n                window.event.preventDefault()\r\n                handleOk()\r\n            }\r\n        }\r\n        window.addEventListener('keydown', keyDownFn)\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', keyDownFn)\r\n        }\r\n    }, [handleOk])\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false)\r\n    }\r\n\r\n    const handleNavigate = () => {\r\n        history.push({\r\n            pathname: `/admin`,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={cls}>\r\n            <div className='left'>\r\n                <div className='logo' onClick={handleNavigate}>\r\n                    <Logo />\r\n                </div>\r\n                <div className='title'>语料标注与统计系统</div>\r\n            </div>\r\n            {type === 'edit' && (\r\n                <div className='right'>\r\n                    <Button\r\n                        loading={loading}\r\n                        type='outline-secondary'\r\n                        onClick={handleOk}\r\n                    >\r\n                        保存记录\r\n                    </Button>\r\n\r\n                    <Button\r\n                        style={{ marginLeft: 30 }}\r\n                        onClick={() => setIsModalVisible(true)}\r\n                        type='outline-secondary'\r\n                    >\r\n                        编辑配置\r\n                    </Button>\r\n                    <Button\r\n                        style={{ marginLeft: 30 }}\r\n                        type='outline-secondary'\r\n                        onClick={() => setIsStatisticsVisible(true)}\r\n                    >\r\n                        统计分析\r\n                    </Button>\r\n                </div>\r\n            )}\r\n            {/* 配置编辑 */}\r\n            <EditCategoryModal\r\n                visible={isModalVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n            />\r\n            {/* 统计分析 */}\r\n            <StatisticsModal\r\n                visible={isStatisticsVisible}\r\n                onCancel={() => setIsStatisticsVisible(false)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * 技术方案构想：\r\n * 每次编辑后，将html传给服务器即可。\r\n *\r\n * UI设计。\r\n * - 高亮\r\n * - 标签\r\n */\r\nimport React, { useState } from 'react'\r\nimport classNames from 'classnames'\r\nimport { useEffect } from 'react'\r\nimport { useRef } from 'react'\r\nimport Highlighter from 'web-highlighter'\r\nimport './Annotation.scss'\r\nimport { Button, message } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    setHightlightSpanEl,\r\n    getDomByDataId,\r\n    clearHightLight,\r\n} from '../../../utils/index'\r\nimport {\r\n    initAnnotation,\r\n    createAnnotation,\r\n    updateSavaStatus,\r\n} from './AnnotationSlice'\r\nimport { Prompt, useHistory, useParams } from 'react-router'\r\nimport { getArticleFromLeanCloud } from '../../../service/article'\r\n\r\nconst log = console.log.bind(console, '[annota]')\r\n// 自定义颜色。\r\nconst keyCodeList = '123456789ABCDEFGHIJKLMNOPQRSTVWXYZ'\r\nconst processText = str => {\r\n    // 已经处理过的不再处理\r\n    // if (str.includes('<br/>')) return str\r\n    return str\r\n        .replace(/\\[.*?\\]/g, '')\r\n        .replace(/\\{CP(.*?)P\\}/g, '$1')\r\n        .replace(/\\{CQ(.*?)\\}/g, '$1')\r\n        .replace(/\\{.*?\\}/g, '')\r\n        .replaceAll('。', '。</p><p>')\r\n        .replaceAll('\\n', '')\r\n        .replaceAll(' ', '')\r\n    // .replaceAll('<br/>', '</p><p>')\r\n}\r\n\r\n// 处理中山大学\r\nconst processText2 = str => {\r\n    const el = document.createElement('div')\r\n    el.innerHTML = str\r\n    return (\r\n        el.textContent\r\n            .replace(/\\n/g, '')\r\n            .replace(/&/g, '')\r\n            .replace(/@/g, '')\r\n            // .replace(/([a-zA-Z])\\w+/g, '')\r\n            .replace(/<.>/g, '')\r\n            .replace(/CZ|BZ|SBZ|BGFZ/g, '')\r\n            .replace(/<>/g, '')\r\n            .replace(/(【(.*?)】)/g, match => {\r\n                return match[1]\r\n            })\r\n            .replaceAll('。', '。</p><p>')\r\n    )\r\n}\r\n\r\n// 侧边栏\r\nconst Annotation = props => {\r\n    const params = useParams()\r\n    const { className, highlighter } = props\r\n    const contentRef = useRef(null)\r\n    const dispatch = useDispatch()\r\n    const [content, setContent] = useState('')\r\n    const [articleList, setArticleList] = useState([])\r\n    const [pager, setPager] = useState({})\r\n    const categoryList = useSelector(state => state.header.categoryList)\r\n    const annotationList = useSelector(state => state.annotation.annotationList)\r\n    const isSave = useSelector(state => state.annotation.isSave)\r\n\r\n    const prefix = 'zz-annotation'\r\n    const cls = classNames({\r\n        [prefix]: true,\r\n        [className]: className,\r\n    })\r\n\r\n    useEffect(() => {\r\n        const { objectId } = params\r\n        getArticleFromLeanCloud(objectId).then(article => {\r\n            const articleObj = article.toJSON()\r\n            const list = articleObj.annotation\r\n            let con = ''\r\n            if (articleObj.source === 'SYSU') {\r\n                con = processText2(articleObj.article)\r\n            } else {\r\n                con = processText(articleObj.article)\r\n            }\r\n            setContent(con)\r\n            // 初始化标注状态\r\n            dispatch(initAnnotation(articleObj))\r\n            if (list) {\r\n                // 还原DOM\r\n                list.forEach(item => {\r\n                    highlighter.fromStore(\r\n                        item.start,\r\n                        item.end,\r\n                        item.text,\r\n                        item.id\r\n                    )\r\n                })\r\n            }\r\n        })\r\n    }, [params, highlighter])\r\n\r\n    useEffect(() => {\r\n        const { objectId } = params\r\n        getArticleFromLeanCloud().then(\r\n            res => {\r\n                const data = res.map((item, index) => {\r\n                    return {\r\n                        objectId: item.id,\r\n                        No: index + 1,\r\n                        ...item.toJSON(),\r\n                    }\r\n                })\r\n                setArticleList(data)\r\n                const index = data.findIndex(item => item.objectId === objectId)\r\n                setPager({\r\n                    index: index + 1,\r\n                    length: data.length,\r\n                })\r\n            },\r\n            () => {\r\n                message.error('获取文章失败')\r\n            }\r\n        )\r\n    }, [params])\r\n\r\n    useEffect(() => {\r\n        const keyDownFn = event => {\r\n            const keyCode = event.keyCode\r\n            if (keyCode && !window.event.ctrlKey) {\r\n                const char = String.fromCharCode(keyCode)\r\n                const index = keyCodeList.indexOf(char)\r\n                if (index != -1 && index < categoryList.length) {\r\n                    const category = categoryList[index]\r\n                    handleClickBtn(category)\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener('keydown', keyDownFn)\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', keyDownFn)\r\n        }\r\n    }, [categoryList])\r\n\r\n    useEffect(() => {\r\n        // 往里面添加\r\n        if (annotationList.length < 0) return\r\n\r\n        // 清空画布\r\n        clearHightLight(contentRef.current)\r\n        // 通过配置项id去找配置项\r\n        const getCategoryConfigById = categoryId => {\r\n            return categoryList.find(item => item.id === categoryId)\r\n        }\r\n\r\n        for (let i = 0; i < annotationList.length; i++) {\r\n            const { id, categoryId } = annotationList[i]\r\n            const els = getDomByDataId(id)\r\n            // 拿出config的配置\r\n            const config = getCategoryConfigById(categoryId)\r\n            if (config) {\r\n                const { text, color } = config\r\n                setHightlightSpanEl(els, {\r\n                    text,\r\n                    color,\r\n                })\r\n            }\r\n        }\r\n    }, [annotationList, categoryList])\r\n\r\n    useEffect(() => {\r\n        if (!highlighter) return\r\n        const h = highlighter\r\n\r\n        h.on(Highlighter.event.CREATE, function (option) {\r\n            const { sources } = option\r\n            // log('这是被创建成功之后data', sources, sources.id)\r\n            sources.map(hs => {\r\n                const obj = {\r\n                    start: hs.start || hs.startMeta,\r\n                    end: hs.end || hs.endMeta,\r\n                    text: hs.text,\r\n                    id: hs.id,\r\n                    categoryId: hs.categoryId || window.categoryId,\r\n                    config: Object.assign(hs.config || {}, window.config),\r\n                }\r\n                dispatch(createAnnotation(obj))\r\n            })\r\n        })\r\n            // .on(Highlighter.event.CLICK, ({ id }) => {})\r\n            .on(Highlighter.event.HOVER, ({ id }) => {\r\n                h.addClass('highlight-wrap-hover', id)\r\n            })\r\n            .on(Highlighter.event.HOVER_OUT, ({ id }) => {\r\n                h.removeClass('highlight-wrap-hover', id)\r\n            })\r\n    }, [highlighter])\r\n\r\n    useEffect(() => {\r\n        contentRef.current.addEventListener('click', e => {\r\n            const target = e.target\r\n            if (target.tagName === 'span') {\r\n                // 这里做一些操作。\r\n            }\r\n        })\r\n        // return () => {\r\n\r\n        // }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const listener = e => {\r\n            e.preventDefault()\r\n            if (isSave) {\r\n                e.returnValue = '您的数据尚未保存，离开后会丢失'\r\n            } else {\r\n                e.returnValue = ''\r\n            }\r\n        }\r\n        isSave && window.addEventListener('beforeunload', listener)\r\n        return () => {\r\n            window.removeEventListener('beforeunload', listener)\r\n        }\r\n    }, [isSave])\r\n\r\n    const handleClickBtn = config => {\r\n        const { id, color } = config\r\n\r\n        // 将配置id存在window对象中\r\n        window.categoryId = id\r\n        const h = highlighter\r\n        const className = `color-${color}`\r\n        const selection = window.getSelection()\r\n        h.setOption({\r\n            style: {\r\n                className,\r\n            },\r\n        })\r\n        h.fromRange(selection.getRangeAt(0))\r\n\r\n        dispatch(updateSavaStatus(true))\r\n    }\r\n\r\n    const handleNavigate = type => {\r\n        const { objectId } = params\r\n        let index = articleList.findIndex(item => item.objectId === objectId)\r\n        if (type === 'pre') {\r\n            index -= 1\r\n        } else if (type === 'next') {\r\n            index += 1\r\n        }\r\n        if (index >= 0 && index < articleList.length) {\r\n            if (!isSave) {\r\n                const data = articleList[index]\r\n                const url = new URL(window.location.href)\r\n                url.hash = `#/edit/${data.objectId}`\r\n                window.location.href = url.href\r\n            } else {\r\n                message.error('文章忘记保存了，保存一下')\r\n            }\r\n        } else {\r\n            message.error('已经是第一篇文章或最后一篇文章了，不能再跳转了')\r\n        }\r\n    }\r\n\r\n    console.log('isSave', isSave)\r\n    return (\r\n        <div className={cls}>\r\n            <div className='action'>\r\n                {categoryList.map((item, index) => {\r\n                    const { color, text } = item\r\n                    return (\r\n                        <Button\r\n                            key={index}\r\n                            onClick={() => handleClickBtn(item)}\r\n                        >\r\n                            {keyCodeList[index]}：{text}\r\n                        </Button>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div\r\n                id='iloveyryr'\r\n                ref={contentRef}\r\n                // key={Date.now()}\r\n                className='content'\r\n                dangerouslySetInnerHTML={{ __html: content }}\r\n            />\r\n\r\n            <Prompt when={isSave} message='您的内容尚未保存确定要离开吗?' />\r\n\r\n            <div className='action'>\r\n                <Button onClick={() => handleNavigate('pre')}>上一篇</Button>\r\n                <Button onClick={() => handleNavigate('next')}>下一篇</Button>\r\n\r\n                <span>{`${pager.index} / ${pager.length}`}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Annotation\r\n","/**\r\n * 技术方案构想：\r\n * 每次编辑后，将html传给服务器即可。\r\n *\r\n * UI设计。\r\n * - 高亮\r\n * - 标签\r\n */\r\nimport React from 'react'\r\nimport classNames from 'classnames'\r\nimport './Comment.scss'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { List, Modal } from 'antd'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport {\r\n    deleteAnnotation,\r\n    updateSavaStatus,\r\n} from '../Annotation/AnnotationSlice'\r\n// import { Button } from 'react-bootstrap'\r\n\r\nconst log = console.log.bind(console, '[comment]')\r\n// 自定义颜色。\r\n\r\n// 侧边栏\r\nconst Comment = props => {\r\n    const { className, highlighter } = props\r\n    const prefix = 'zz-comment'\r\n    const cls = classNames({\r\n        [prefix]: true,\r\n        [className]: className,\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const annotationList = useSelector(state => state.annotation.annotationList)\r\n    const categoryList = useSelector(state => state.header.categoryList)\r\n\r\n    const handleDelete = annotationId => {\r\n        Modal.confirm({\r\n            title: '删除',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: '确认删除吗？',\r\n            okText: '确认',\r\n            cancelText: '取消',\r\n            onCancel: () => {\r\n                console.log('取消')\r\n            },\r\n            onOk: () => {\r\n                // 删除状态\r\n                dispatch(deleteAnnotation(annotationId))\r\n                dispatch(updateSavaStatus(true))\r\n                // 删除dom结构\r\n                highlighter.remove(annotationId)\r\n            },\r\n        })\r\n    }\r\n\r\n    const addClass = id => {\r\n        highlighter.addClass('highlight-wrap-hover', id)\r\n    }\r\n\r\n    const removeClass = id => {\r\n        highlighter.removeClass('highlight-wrap-hover', id)\r\n    }\r\n\r\n    return (\r\n        <div className={cls}>\r\n            <header>我的标注列表</header>\r\n            <List\r\n                itemLayout='horizontal'\r\n                className={`${prefix}-list`}\r\n                dataSource={annotationList}\r\n                renderItem={item => {\r\n                    const config = categoryList.find(\r\n                        i => i.id === item.categoryId\r\n                    )\r\n\r\n                    return (\r\n                        <List.Item className={`${prefix}-list-item`}>\r\n                            {config && item && `${config.text}: ${item.text}`}\r\n                            <div className='action'>\r\n                                <a\r\n                                    onClick={() => handleDelete(item.id)}\r\n                                    onMouseEnter={() => addClass(item.id)}\r\n                                    onMouseLeave={() => removeClass(item.id)}\r\n                                    key='list-loadmore-edit'\r\n                                >\r\n                                    delete\r\n                                </a>\r\n                            </div>\r\n                        </List.Item>\r\n                    )\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Form, Input, Select } from 'antd'\r\n\r\nconst { Option } = Select\r\nimport './SearchForm.scss'\r\n\r\nconst SearchForm = props => {\r\n    const [form] = Form.useForm()\r\n\r\n    const handleSelectChange = (type, value) => {\r\n        form.setFieldsValue({\r\n            [type]: value,\r\n        })\r\n    }\r\n    const onFinish = values => {\r\n        props.onChange && props.onChange(values)\r\n    }\r\n    return (\r\n        <div className='yryr-form-wrap'>\r\n            <Form\r\n                // {...formItemLayout}\r\n                // labelAlign={'right'}\r\n                className='search-form'\r\n                layout='inline'\r\n                form={form}\r\n                // name='dynamic_form_nest_item'\r\n                onFinish={onFinish}\r\n                autoComplete='off'\r\n            >\r\n                <Form.Item name='title' label='文章标题'>\r\n                    <Input />\r\n                </Form.Item>\r\n                {/* \r\n                <Form.Item name='source' label='语料来源'>\r\n                    <Select onChange={handleSelectChange} allowClear>\r\n                        <Option value='BLCU'>hsk动态作文语料库</Option>\r\n                        <Option value='SYSU'>\r\n                            中山大学汉字偏误中介语语料库\r\n                        </Option>\r\n                    </Select>\r\n                </Form.Item> */}\r\n                <Form.Item name='score' label='汉语水平'>\r\n                    <Select onChange={handleSelectChange} allowClear>\r\n                        <Option value='mid'>中级</Option>\r\n                        <Option value='high'>高级</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name='nationality' label='母语'>\r\n                    <Select onChange={handleSelectChange} allowClear>\r\n                        <Option value='korea'>韩语</Option>\r\n                        <Option value='britain'>英语</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type='primary' htmlType='submit'>\r\n                        搜索\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Table, Space, message, Button, Popconfirm } from 'antd'\r\nimport {\r\n    deleteArticleToLeanCloud,\r\n    getArticleFromLeanCloud,\r\n    updateArticleToLeanCloud,\r\n} from '../../../service/article'\r\nimport { useHistory } from 'react-router'\r\nimport SearchForm from './SearchForm'\r\n\r\nconst mapKeyToText = {\r\n    BLCU: 'hsk动态作文语料库',\r\n    SYSU: '中山大学汉字偏误中介语语料库',\r\n    mid: '中级',\r\n    high: '高级',\r\n    korea: '韩语',\r\n    britain: '英语',\r\n}\r\n\r\nconst ArticleTable = props => {\r\n    const { loading, dataSource, onUpdate } = props\r\n    const [searchList, setSearchList] = useState(dataSource || [])\r\n    const history = useHistory()\r\n    const columns = [\r\n        {\r\n            title: 'No.',\r\n            dataIndex: 'No',\r\n            key: 'No',\r\n        },\r\n        {\r\n            title: '标题',\r\n            dataIndex: 'title',\r\n            key: 'title',\r\n        },\r\n        {\r\n            title: '语料来源',\r\n            dataIndex: 'source',\r\n            key: 'source',\r\n            render: key => mapKeyToText[key] || key,\r\n        },\r\n        {\r\n            title: '母语',\r\n            dataIndex: 'nationality',\r\n            key: 'nationality',\r\n            render: key => mapKeyToText[key] || key,\r\n        },\r\n        {\r\n            title: '汉语水平',\r\n            dataIndex: 'score',\r\n            key: 'score',\r\n            render: key => mapKeyToText[key] || key,\r\n        },\r\n        {\r\n            title: '标注数量',\r\n            dataIndex: 'annotationCount',\r\n            key: 'annotationCount',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <Space size='middle'>\r\n                    <a\r\n                        onClick={() => handleEdit(record.objectId)}\r\n                        type='primary'\r\n                    >\r\n                        标注\r\n                    </a>\r\n                    <a onClick={() => handleUpdate(record.objectId)}>编辑</a>\r\n                    <Popconfirm\r\n                        title='删除后无法恢复，请谨慎操作'\r\n                        onConfirm={() => handleDelete(record.objectId)}\r\n                    >\r\n                        <a type='primary' danger>\r\n                            删除\r\n                        </a>\r\n                    </Popconfirm>\r\n                </Space>\r\n            ),\r\n        },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        setSearchList(dataSource)\r\n    }, [dataSource])\r\n    // const getArticle = () => {\r\n    //     let count = 0\r\n    //     getArticleFromLeanCloud().then(\r\n    //         res => {\r\n    //             const data = res.map((item, index) => {\r\n    //                 return {\r\n    //                     objectId: item.id,\r\n    //                     No: index + 1,\r\n    //                     ...item.toJSON(),\r\n    //                 }\r\n    //             })\r\n    //             data.forEach(item => {\r\n    //                 count += item.article.length\r\n    //             })\r\n    //             onChange && onChange(count)\r\n    //             console.log('dataList', data)\r\n    //             setDataList(data)\r\n    //             setSearchList(data)\r\n    //         },\r\n    //         () => {\r\n    //             message.error('获取文章失败')\r\n    //         }\r\n    //     )\r\n    // }\r\n    // useEffect(() => {\r\n    //     getArticle()\r\n    // }, [update])\r\n\r\n    const handleEdit = id => {\r\n        history.push({\r\n            pathname: `/edit/${id}`,\r\n        })\r\n    }\r\n    const handleDelete = id => {\r\n        console.log('删除功能', id)\r\n        deleteArticleToLeanCloud(id)\r\n            .then(() => {\r\n                message.success('删除成功')\r\n                onUpdate && onUpdate()\r\n            })\r\n            .catch(() => {\r\n                message.success('删除失败')\r\n            })\r\n    }\r\n\r\n    const processText = str => {\r\n        const el = document.createElement('div')\r\n        el.innerHTML = str\r\n        return el.textContent\r\n            .replace(/\\n/g, '')\r\n            .replace(/&/g, '')\r\n            .replace(/@/g, '')\r\n            .replace(/([a-zA-Z])\\w+/g, '')\r\n            .replace(/<.>/g, '')\r\n            .replace(/<>/g, '')\r\n            .replace(/(\\【(.*?)\\】)/g, match => {\r\n                return match[1]\r\n            })\r\n    }\r\n\r\n    const handleUpdate = id => {\r\n        props.onUpdate && props.onUpdate(id)\r\n    }\r\n\r\n    const handleUpp = async () => {\r\n        const dataList = dataSource\r\n        for (let i = 1; i < dataList.length; i++) {\r\n            const article = dataList[i]\r\n            console.log('article', article)\r\n            const dd = {\r\n                article: processText(article.article),\r\n            }\r\n            console.log('dd', dd)\r\n\r\n            await updateArticleToLeanCloud(article.objectId, dd)\r\n                .then(() => {\r\n                    console.log('处理i', i, '成功')\r\n                })\r\n                .catch(() => {\r\n                    console.log('处理i', i, '失败')\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleSearch = formValues => {\r\n        console.log('调用', formValues)\r\n        const dataList = dataSource\r\n        const newData = dataList.filter(item => {\r\n            let flag = true\r\n            Object.keys(formValues).forEach(key => {\r\n                if (formValues[key] && formValues[key] !== item[key]) {\r\n                    flag = false\r\n                }\r\n            })\r\n            return flag\r\n        })\r\n        console.log('调用', newData)\r\n        setSearchList(newData)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <Button onClick={handleUpp}> 批量更新</Button> */}\r\n            <SearchForm onChange={handleSearch} />\r\n            <Table\r\n                loading={loading}\r\n                bordered={true}\r\n                columns={columns}\r\n                dataSource={searchList}\r\n                pagination={{\r\n                    showTotal: total => `当前共有${total}条数据`,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArticleTable\r\n","import React, { useEffect } from 'react'\r\nimport { Form, Modal, Input, Select, Tooltip, message } from 'antd'\r\nimport {\r\n    createArticle,\r\n    getArticleFromLeanCloud,\r\n    updateArticleToLeanCloud,\r\n} from '../../../service/article'\r\n\r\nconst { Option } = Select\r\nconst { TextArea } = Input\r\n\r\nconst formItemLayout = {\r\n    labelCol: { span: 4 },\r\n    wrapperCol: { span: 20 },\r\n}\r\n\r\nconst AddModal = props => {\r\n    const { visible, articleId, onOk, onFail } = props\r\n    const [form] = Form.useForm()\r\n\r\n    useEffect(() => {\r\n        if (visible && articleId) {\r\n            getArticleFromLeanCloud(articleId).then(article => {\r\n                const articleObj = article.toJSON()\r\n                console.log('articleObj', articleObj)\r\n                form.setFieldsValue({\r\n                    ...articleObj,\r\n                })\r\n            })\r\n        }\r\n    }, [visible, articleId])\r\n\r\n    const handleSelectChange = (type, value) => {\r\n        form.setFieldsValue({\r\n            [type]: value,\r\n        })\r\n    }\r\n\r\n    const handleConfirm = () => {\r\n        form.submit()\r\n        props.onOk && props.onOk()\r\n    }\r\n\r\n    const handleClose = () => {\r\n        props.onCancel && props.onCancel()\r\n    }\r\n\r\n    const onFinish = values => {\r\n        if (articleId) {\r\n            updateArticleToLeanCloud(articleId, values).then(\r\n                res => {\r\n                    // handleClose()\r\n                    message.success('修改成功')\r\n                    onOk && onOk()\r\n                },\r\n                err => {\r\n                    message.error('修改失败')\r\n                    onFail && onFail()\r\n                }\r\n            )\r\n        } else {\r\n            createArticle(values).then(\r\n                res => {\r\n                    handleClose()\r\n                    message.success('添加成功')\r\n                    onOk && onOk()\r\n                },\r\n                err => {\r\n                    message.error('添加失败')\r\n                    onFail && onFail()\r\n                }\r\n            )\r\n        }\r\n        console.log('values', values)\r\n    }\r\n    return (\r\n        <Modal\r\n            title={articleId ? '编辑文章' : '添加文章'}\r\n            visible={visible}\r\n            onOk={handleConfirm}\r\n            onCancel={handleClose}\r\n            okText={articleId ? '确定' : '添加'}\r\n            cancelText='取消'\r\n        >\r\n            <Form\r\n                {...formItemLayout}\r\n                labelAlign={'right'}\r\n                form={form}\r\n                name='dynamic_form_nest_item'\r\n                onFinish={onFinish}\r\n                autoComplete='off'\r\n            >\r\n                <Form.Item\r\n                    name='title'\r\n                    label='文章标题'\r\n                    rules={[{ required: true }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name='source'\r\n                    label='语料来源'\r\n                    rules={[{ required: true }]}\r\n                >\r\n                    <Select onChange={handleSelectChange} allowClear>\r\n                        <Option value='BLCU'>hsk动态作文语料库</Option>\r\n                        <Option value='SYSU'>\r\n                            中山大学汉字偏误中介语语料库\r\n                        </Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='score'\r\n                    label='汉语水平'\r\n                    rules={[{ required: true }]}\r\n                >\r\n                    <Select onChange={handleSelectChange} allowClear>\r\n                        <Option value='mid'>中级</Option>\r\n                        <Option value='high'>高级</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='nationality'\r\n                    label='国籍'\r\n                    rules={[{ required: true }]}\r\n                >\r\n                    <Select onChange={handleSelectChange} allowClear>\r\n                        <Option value='korea'>韩国</Option>\r\n                        <Option value='britain'>英国</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='article'\r\n                    label={\r\n                        <Tooltip title='可以填入已标注的内容'>\r\n                            <span>文章内容</span>\r\n                        </Tooltip>\r\n                    }\r\n                    rules={[{ required: true }]}\r\n                >\r\n                    <TextArea rows={5} />\r\n                </Form.Item>\r\n                {/* <Form.Item>\r\n                    <Button type='primary' htmlType='submit'>\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item> */}\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddModal\r\n","import React from 'react'\r\nimport { Modal } from 'antd'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst StatisticsModal = props => {\r\n    const { visible, count, onOk, onCancel } = props\r\n    //\r\n    const config = useSelector(state => state.annotation.config)\r\n\r\n    const handleEdit = () => {\r\n        onCancel && onCancel()\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        console.log('？？？调用一下啊')\r\n        onCancel && onCancel()\r\n    }\r\n    return (\r\n        <Modal\r\n            title='统计分析'\r\n            okText='确定'\r\n            cancelText='取消'\r\n            visible={visible}\r\n            onOk={handleEdit}\r\n            width={800}\r\n            onCancel={handleCancel}\r\n        >\r\n            <div>字数统计：{count}字</div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default StatisticsModal\r\n","import Header from '../edit/Header/Header'\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport ArticleTable from './ArticleTable/ArticleTable'\r\nimport { CSVLink } from 'react-csv'\r\nimport { Button, Divider, message } from 'antd'\r\nimport AddModal from '../edit/SideBar/AddModal'\r\nimport './Admin.scss'\r\nimport StatisticsModal from './StatisticsModal'\r\nimport { getArticleFromLeanCloud } from '../../service/article'\r\nimport { getConfigFromLeanCloud } from '../../service/service'\r\nimport { createArticle, updateArticleToLeanCloud } from '../../service/article'\r\n\r\n// 处理中山大学\r\nconst processText2 = str => {\r\n    const el = document.createElement('div')\r\n    el.innerHTML = str\r\n    return (\r\n        el.textContent\r\n            .replace(/\\n/g, '')\r\n            .replace(/&/g, '')\r\n            .replace(/@/g, '')\r\n            // .replace(/([a-zA-Z])\\w+/g, '')\r\n            .replace(/<.>/g, '')\r\n            .replace(/CZ|BZ|SBZ|BGFZ/g, '')\r\n            .replace(/<>/g, '')\r\n            .replace(/(【(.*?)】)/g, match => {\r\n                return match[1]\r\n            })\r\n        // .replaceAll('。', '。</p><p>')\r\n    )\r\n}\r\n\r\nconst Admin = () => {\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n    const [isStaticVisible, setIsStaticVisible] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [articleList, setArticleList] = useState([])\r\n    const [categoryList, setCategoryList] = useState([])\r\n    const [CSVData, setCSVData] = useState([])\r\n    const [CSVDataText, setCSVDataText] = useState([])\r\n    const [articleId, setArticleId] = useState('')\r\n    const [count, setCount] = useState(0)\r\n\r\n    // const [text, setText] = useState('')\r\n    const getArticle = useCallback(() => {\r\n        let count = 0\r\n        setLoading(true)\r\n        getArticleFromLeanCloud().then(\r\n            res => {\r\n                const data = res.map((item, index) => {\r\n                    return {\r\n                        objectId: item.id,\r\n                        No: index + 1,\r\n                        ...item.toJSON(),\r\n                    }\r\n                })\r\n                data.forEach(item => {\r\n                    count += item.article.length\r\n                })\r\n                setCount(count)\r\n                setArticleList(data)\r\n                setLoading(false)\r\n            },\r\n            () => {\r\n                setLoading(false)\r\n                message.error('获取文章失败')\r\n            }\r\n        )\r\n    }, [])\r\n\r\n    const getCategory = useCallback(() => {\r\n        getConfigFromLeanCloud('610291721de21d3e072c5432').then(res => {\r\n            const list = res.get('categoryList')\r\n            // 更新到redux中\r\n            setCategoryList(list)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getArticle()\r\n        getCategory()\r\n    }, [getArticle, getCategory])\r\n\r\n    useEffect(() => {\r\n        const createCsvData = () => {\r\n            const csv = articleList.map(article => {\r\n                const anaphora = {}\r\n                let count = 0\r\n                if (article.annotation && article.annotation.length > 0) {\r\n                    // 呵呵\r\n                    article.annotation.forEach(anno => {\r\n                        const category = categoryList.find(\r\n                            item => item.id === anno.categoryId\r\n                        )\r\n                        if (anaphora[category.text]) {\r\n                            anaphora[category.text] += 1\r\n                        } else {\r\n                            anaphora[category.text] = 1\r\n                        }\r\n                    })\r\n                    count = article.annotation.length\r\n                }\r\n                const words = processText2(article.article)\r\n                return {\r\n                    No: article.No,\r\n                    title: article.title,\r\n                    nationality: article.nationality,\r\n                    score: article.score,\r\n                    source: article.source,\r\n                    count: count,\r\n                    words: words.length,\r\n                    ...anaphora,\r\n                }\r\n            })\r\n            return csv\r\n        }\r\n        const createCsvDataText = () => {\r\n            const csv = articleList.map(article => {\r\n                const anaphora = {}\r\n                let count = 0\r\n                if (article.annotation && article.annotation.length > 0) {\r\n                    // 呵呵\r\n                    article.annotation.forEach(anno => {\r\n                        const category = categoryList.find(\r\n                            item => item.id === anno.categoryId\r\n                        )\r\n                        if (anaphora[category.text]) {\r\n                            const len = anaphora[category.text].length + 1\r\n                            const text = `${len}.${anno.text}`\r\n                            anaphora[category.text].push(text)\r\n                        } else {\r\n                            anaphora[category.text] = [`1.${anno.text}`]\r\n                        }\r\n                    })\r\n                    count = article.annotation.length\r\n                }\r\n                Object.keys(anaphora).forEach(\r\n                    key => (anaphora[key] = anaphora[key].join('\\n'))\r\n                )\r\n                return {\r\n                    No: article.No,\r\n                    title: article.title,\r\n                    nationality: article.nationality,\r\n                    score: article.score,\r\n                    source: article.source,\r\n                    count: count,\r\n                    ...anaphora,\r\n                }\r\n            })\r\n            return csv\r\n        }\r\n        if (categoryList.length > 0 && articleList.length > 0) {\r\n            const csv = createCsvData()\r\n            const csvText = createCsvDataText()\r\n            setCSVData(csv)\r\n            setCSVDataText(csvText)\r\n        }\r\n    }, [categoryList, articleList])\r\n\r\n    const handleUpload = () => {\r\n        setIsModalVisible(true)\r\n        setArticleId('')\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false)\r\n    }\r\n\r\n    const handleOK = () => {\r\n        setIsModalVisible(false)\r\n        getArticle()\r\n    }\r\n\r\n    // const handleChange = cc => {\r\n    //     setCount(cc)\r\n    // }\r\n\r\n    // 修改文章数据\r\n    const handleUpdate = id => {\r\n        //\r\n        setIsModalVisible(true)\r\n        setArticleId(id)\r\n    }\r\n\r\n    // const processText = str => {\r\n    //     const el = document.createElement('div')\r\n    //     el.innerHTML = str\r\n    //     return el.textContent\r\n    //         .replace(/\\n/g, '')\r\n    //         .replace(/&/g, '')\r\n    //         .replace(/@/g, '')\r\n    //         .replace(/([a-zA-Z])\\w+/g, '')\r\n    //         .replace(/<.>/g, '')\r\n    //         .replace(/<>/g, '')\r\n    //         .replace(/(\\【(.*?)\\】)/g, match => {\r\n    //             return match[1]\r\n    //         })\r\n    // }\r\n\r\n    // const handleUploadAll = async () => {\r\n    //     const data = JSON.parse(text)\r\n    //     const articles = data.articleLs\r\n    //     const result = articles.map(article => {\r\n    //         return {\r\n    //             title: article.title,\r\n    //             nationality: 'korea',\r\n    //             article: article.content,\r\n    //             source: 'SYSU',\r\n    //             score: 'high',\r\n    //         }\r\n    //     })\r\n    //     for (let i = 0; i < result.length; i++) {\r\n    //         const el = result[i]\r\n    //         await createArticle(el).then(\r\n    //             res => {\r\n    //                 message.success('添加成功')\r\n    //             },\r\n    //             err => {\r\n    //                 message.error('添加失败')\r\n    //             }\r\n    //         )\r\n    //         console.log('添加i', i, '成功')\r\n    //     }\r\n    // }\r\n\r\n    // const handleChangeAll = e => {\r\n    //     setText(e.target.value)\r\n    // }\r\n    const handleUpp = async () => {\r\n        const dataList = articleList\r\n        for (let i = 1; i < dataList.length; i++) {\r\n            const article = dataList[i]\r\n            console.log('article', article)\r\n            const dd = {\r\n                article: processText(article.article),\r\n            }\r\n            console.log('dd', dd)\r\n\r\n            await updateArticleToLeanCloud(article.objectId, dd)\r\n                .then(() => {\r\n                    console.log('处理i', i, '成功')\r\n                })\r\n                .catch(() => {\r\n                    console.log('处理i', i, '失败')\r\n                })\r\n        }\r\n    }\r\n\r\n    // const handleClickData = async () => {\r\n    //     console.log('data', articleList, categoryList)\r\n    //     for (let i = 0; i < articleList.length; i++) {\r\n    //         const annotation = articleList[i].annotation\r\n    //         if (annotation) {\r\n    //             const newAnnotation = annotation.map(item => {\r\n    //                 if (item.text.includes('这') || item.text.includes('那')) {\r\n    //                     return {\r\n    //                         ...item,\r\n    //                         categoryId: 'IK65Puo0Tb1_7_LCBritI',\r\n    //                     }\r\n    //                 } else {\r\n    //                     return item\r\n    //                 }\r\n    //             })\r\n    //             console.log('newAnnotation', newAnnotation, annotation)\r\n    //             await updateArticleToLeanCloud(articleList[i].objectId, {\r\n    //                 annotation: newAnnotation,\r\n    //             })\r\n    //                 .then(() => {\r\n    //                     console.log('处理i', i, '成功')\r\n    //                 })\r\n    //                 .catch(() => {\r\n    //                     console.log('处理i', i, '失败')\r\n    //                 })\r\n    //         } else {\r\n    //             console.log('articleList[i]', articleList[i])\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <div className='yryr-admin'>\r\n            <Header type='admin' />\r\n            {/* <div style={{ margin: 50 }} className='test'>\r\n                <TextArea value={text} onChange={handleChangeAll} />\r\n\r\n                <Button type='secondary' onClick={handleUploadAll}>\r\n                    批量上传\r\n                </Button>\r\n            </div> */}\r\n            <div className='main'>\r\n                <div className='action'>\r\n                    <Button type='secondary' onClick={handleUpload}>\r\n                        上传文章\r\n                    </Button>\r\n                    {/* <Button type='secondary' onClick={handleClickData}>\r\n                        处理回指数据\r\n                    </Button> */}\r\n                    <Divider type='vertical' />\r\n                    <Button\r\n                        type='secondary'\r\n                        onClick={() => setIsStaticVisible(true)}\r\n                    >\r\n                        整体统计\r\n                    </Button>\r\n                    <Divider type='vertical' />\r\n\r\n                    <Button type='primary'>\r\n                        <CSVLink filename={'anaphoric-data.csv'} data={CSVData}>\r\n                            导出数据\r\n                        </CSVLink>\r\n                    </Button>\r\n                    <Divider type='vertical' />\r\n\r\n                    <Button type='primary'>\r\n                        <CSVLink\r\n                            filename={'anaphoric-data-text.csv'}\r\n                            data={CSVDataText}\r\n                        >\r\n                            导出文本\r\n                        </CSVLink>\r\n                    </Button>\r\n                </div>\r\n                <ArticleTable\r\n                    dataSource={articleList}\r\n                    loading={loading}\r\n                    onUpdate={handleUpdate}\r\n                />\r\n            </div>\r\n\r\n            <AddModal\r\n                key={Date.now()}\r\n                articleId={articleId}\r\n                visible={isModalVisible}\r\n                onOk={handleOK}\r\n                onCancel={handleCancel}\r\n            />\r\n            <StatisticsModal\r\n                visible={isStaticVisible}\r\n                count={count}\r\n                onCancel={() => setIsStaticVisible(false)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Admin\r\n","import { Input } from 'antd'\r\nimport classNames from 'classnames'\r\nimport React, { useState } from 'react'\r\nimport './index.scss'\r\n\r\nconst ShenLun = () => {\r\n    const [textList, setTextList] = useState(new Array(1400).fill(''))\r\n    const [activeIndex, setActiveIndex] = useState(0)\r\n\r\n    const handleInputChange = e => {\r\n        let value = e.target.value\r\n        while (value.includes('\\n')) {\r\n            const pos = value.indexOf('\\n')\r\n            const suffix = 25 - (pos % 25)\r\n            if (suffix < 25) {\r\n                value = value.replace(\r\n                    '\\n',\r\n                    new Array(suffix).fill(' ').join('')\r\n                )\r\n            } else {\r\n                value = value.replace('\\n', '')\r\n            }\r\n        }\r\n        // setInputValue(value)\r\n        const newTextList = new Array(1400).fill('')\r\n        Array.from(value).forEach((item, index) => {\r\n            newTextList[index] = item\r\n        })\r\n        setTextList(newTextList)\r\n        setActiveIndex(value.length)\r\n    }\r\n    return (\r\n        <div className='shenlun-wrap'>\r\n            <Input.TextArea\r\n                className='input'\r\n                type='text'\r\n                onChange={handleInputChange}\r\n            />\r\n\r\n            <div className='list'>\r\n                {textList.map((item, index) => {\r\n                    const cls = classNames({\r\n                        item: true,\r\n                        active: activeIndex === index,\r\n                    })\r\n                    return (\r\n                        <div key={index} className={cls}>\r\n                            {item}\r\n                            {(index + 1) % 100 === 0 && (\r\n                                <div className='count'>{index + 1}</div>\r\n                            )}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShenLun\r\n","import LC from './index'\r\n\r\nexport const getQuestionList = questionIds => {\r\n    const query = new LC.Query('Question')\r\n    // query.descending('createdAt')\r\n    query.limit(1000)\r\n    if (questionIds) {\r\n        query.containedIn('id', questionIds)\r\n    }\r\n    return query.find()\r\n}\r\n\r\nexport const existQuestion = objectId => {\r\n    const query = new LC.Query('Question')\r\n    if (typeof objectId === 'object') {\r\n        query.containedIn('id', objectId)\r\n    } else {\r\n        query.equalTo('id', objectId)\r\n    }\r\n    query.limit(1000)\r\n    return query.find()\r\n}\r\n\r\n// 新增题目到leanCloud\r\nexport const addQuestion = data => {\r\n    const list = []\r\n    data.forEach(item => {\r\n        const Question = LC.Object.extend('Question')\r\n        const question = new Question()\r\n        Object.keys(item).forEach(key => {\r\n            question.set(key, item[key])\r\n        })\r\n        list.push(question)\r\n    })\r\n    return LC.Object.saveAll(list)\r\n}\r\n\r\nexport const updateQuestionNotes = (objectId, notes) => {\r\n    const q = LC.Object.createWithoutData('QuestionBook', objectId)\r\n    // 更新笔记\r\n    return q.save({ notes })\r\n}\r\n\r\n// delete\r\nexport const deleteQuestion = objectId => {\r\n    const question = LC.Object.createWithoutData('Question', objectId)\r\n    return question.destroy()\r\n}\r\n\r\n// 这是粉笔错题分类表\r\n// 种类表添加种类\r\nexport const addCategoryQuestion = data => {\r\n    let question = LC.Object.createWithoutData(\r\n        'Category',\r\n        '62031ff0a10bf856ff93cf99'\r\n    )\r\n    Object.keys(data).forEach(key => {\r\n        question.set(key, data[key])\r\n    })\r\n    return question.save()\r\n}\r\n\r\nexport const getCategoryQuestion = objectId => {\r\n    const query = new LC.Query('Category')\r\n    return query.get(objectId || '62031ff0a10bf856ff93cf99')\r\n}\r\n\r\n// 自定义错题分类表\r\nexport const addCustomWrongQuestionCategory = data => {\r\n    let question = LC.Object.createWithoutData(\r\n        'Category',\r\n        '6253f0461122b910ec5dfd1e'\r\n    )\r\n    Object.keys(data).forEach(key => {\r\n        question.set(key, data[key])\r\n    })\r\n    return question.save()\r\n}\r\n\r\nexport const getCustomWrongQuestionCategory = () => {\r\n    const query = new LC.Query('Category')\r\n    return query.get('6253f0461122b910ec5dfd1e')\r\n}\r\n","import LC from './index'\r\n\r\nexport const getExamList = questionIds => {\r\n    const query = new LC.Query('FbQuestion')\r\n    // query.descending('createdAt')\r\n    query.limit(1000)\r\n    if (questionIds) {\r\n        query.containedIn('id', questionIds)\r\n    }\r\n    return query.find()\r\n}\r\n\r\nexport const getBookList = (questionIds, skip) => {\r\n    const query = new LC.Query('QuestionBook')\r\n    // query.descending('createdAt')\r\n    query.limit(1000)\r\n    if (skip) {\r\n        query.skip(skip)\r\n    }\r\n    if (questionIds) {\r\n        query.containedIn('id', questionIds)\r\n    }\r\n    return query.find()\r\n}\r\n\r\nexport const addExam = data => {\r\n    const list = []\r\n    data.forEach(item => {\r\n        const Question = LC.Object.extend('FbQuestion')\r\n        const question = new Question()\r\n        Object.keys(item).forEach(key => {\r\n            question.set(key, item[key])\r\n        })\r\n        list.push(question)\r\n    })\r\n    return LC.Object.saveAll(list)\r\n}\r\n\r\n// delete\r\nexport const deleteExam = objectId => {\r\n    const question = LC.Object.createWithoutData('FbQuestion', objectId)\r\n    return question.destroy()\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Upload, Tree, Button } from 'antd'\r\nimport { getCategoryQuestion } from '../../service/question'\r\nimport '../xingce/XingCe.scss'\r\nimport { useHistory } from 'react-router'\r\nimport { getBookList } from '../../service/exam'\r\n\r\nconst XingCe = () => {\r\n    const [categoryList, setCategoryList] = useState([])\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        getCategoryQuestion('625d56e11122b910ec683964').then(res => {\r\n            const data = res.toJSON().content\r\n            processCategoryList(data)\r\n            console.log('res', data)\r\n            setCategoryList(data)\r\n        })\r\n    }, [])\r\n\r\n    // 开始练习\r\n    const handleClickPractice = (questionIds, id) => {\r\n        history.push({\r\n            pathname: `/book/${questionIds.toString()}`,\r\n        })\r\n\r\n        // getBookList(questionIds).then(res => {\r\n        //     console.log('res', res.length, questionIds.length)\r\n        //     const data = res\r\n        //         .map(item => item.toJSON())\r\n        //         .sort(\r\n        //             (a, b) =>\r\n        //                 b.questionMeta.totalCount - a.questionMeta.totalCount\r\n        //         )\r\n        //     window.localStorage.setItem('dataSource', JSON.stringify(data))\r\n        // })\r\n    }\r\n\r\n    /**\r\n     * 17:36\r\n     * [ 335, 337, 351, 357 ]\r\n     * 337：\r\n     * 351：拓展才能体现将范围扩大，而推广并没有这个意思\r\n     * 357：前文说到不仅是无视，因此填空处要比无视的力度要强，因此抹杀比漠视更好\r\n     */\r\n    const processCategoryList = data => {\r\n        // 处理数据\r\n        data.forEach(item => {\r\n            item.title = (\r\n                <div className='category-item'>\r\n                    <div className='name'>{item.name}</div>\r\n                    <div className='num'>{item.questionIds.length}题</div>\r\n                    <div className='practice'>\r\n                        <Button\r\n                            onClick={() =>\r\n                                handleClickPractice(item.questionIds, item.id)\r\n                            }\r\n                            shape='round'\r\n                        >\r\n                            练习\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            )\r\n            item.key = item.id\r\n            if (item.children) {\r\n                processCategoryList(item.children)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='xing-ce-book'>\r\n            <div className='category'>\r\n                <Tree className='xing-ce-tree' treeData={categoryList} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default XingCe\r\n","// 答案组件\r\nimport React, { useEffect } from 'react'\r\nimport { Button, Divider, Tag } from 'antd'\r\nimport './Answer.scss'\r\n\r\nconst Answer = props => {\r\n    const {\r\n        correctAnswer,\r\n        solution,\r\n        keypoints,\r\n        questionMeta,\r\n        source,\r\n        id,\r\n        notes,\r\n    } = props.data\r\n\r\n    const mapIndexToLetter = ['A', 'B', 'C', 'D']\r\n\r\n    const handleClick = () => {\r\n        props.onClose()\r\n    }\r\n\r\n    useEffect(() => {}, [])\r\n\r\n    const handleClickNotes = () => {\r\n        props.onChange && props.onChange(props.data)\r\n    }\r\n\r\n    return (\r\n        <div className='answer'>\r\n            <div className='correct'>\r\n                <p>\r\n                    正确答案是：\r\n                    <span>{mapIndexToLetter[correctAnswer['choice']]}</span>\r\n                </p>\r\n\r\n                <Button onClick={handleClick}>收起</Button>\r\n            </div>\r\n            <Divider />\r\n            <ul>\r\n                <li>\r\n                    <span>解析：</span>\r\n                    <div\r\n                        className='content'\r\n                        dangerouslySetInnerHTML={{ __html: solution }}\r\n                    ></div>\r\n                </li>\r\n                <li>\r\n                    <span>考点：</span>\r\n                    <div className='content'>\r\n                        {keypoints.map((item, index) => {\r\n                            return (\r\n                                <Tag key={index} color='#108ee9'>\r\n                                    {item.name}\r\n                                </Tag>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <span>来源：</span>\r\n                    <div className='content'>{source}</div>\r\n                </li>\r\n                <li>\r\n                    <span>统计：</span>\r\n                    <div className='content'>\r\n                        <Tag color='green'>\r\n                            正确率：{questionMeta.correctRatio.toFixed(2)}%\r\n                        </Tag>\r\n                        <Tag color='magenta'>\r\n                            易错项：\r\n                            {\r\n                                mapIndexToLetter[\r\n                                    questionMeta.mostWrongAnswer.choice\r\n                                ]\r\n                            }\r\n                        </Tag>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <span>题号：</span>\r\n                    <div className='content'>{id}</div>\r\n                </li>\r\n                <li>\r\n                    <span>笔记：</span>\r\n                    <div onClick={handleClickNotes} className='question-notes'>\r\n                        <div\r\n                            className='html'\r\n                            dangerouslySetInnerHTML={{ __html: notes }}\r\n                        />\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Answer\r\n","import { fabric } from 'fabric'\r\n\r\nclass GuaFabric {\r\n    constructor(canvasDom) {\r\n        const canvas = new fabric.Canvas(canvasDom, {\r\n            isDrawingMode: true,\r\n            width: document.body.clientWidth,\r\n            height: document.body.clientHeight,\r\n        })\r\n        // 历史队列\r\n        this.past = []\r\n        // 未来队列\r\n        this.future = []\r\n        this.canvas = canvas\r\n        this.canvas.freeDrawingBrush.width = 3\r\n        this.canvas.freeDrawingBrush.color = '#ff4d4f'\r\n        canvas.on('mouse:up', () => {\r\n            const state = canvas.toDatalessJSON()\r\n            this.past.push(state)\r\n            this.future = []\r\n        })\r\n    }\r\n\r\n    // 撤销\r\n    undo() {\r\n        const { past, future } = this\r\n        if (past.length <= 0) return\r\n        const previous = past[past.length - 1]\r\n        // 历史队列-1\r\n        this.past = past.slice(0, past.length - 1)\r\n        // 未来队列+1\r\n        this.future = [previous, ...future]\r\n        if (this.past.length === 0) {\r\n            this.canvas.loadFromJSON({})\r\n        } else {\r\n            this.canvas.loadFromJSON(this.past[this.past.length - 1])\r\n        }\r\n    }\r\n\r\n    // 重做\r\n    redo() {\r\n        if (this.future.length <= 0) return\r\n        const current = this.future[0]\r\n        // 历史队列 + 1\r\n        this.past = [...this.past, current]\r\n        // 未来队列+1\r\n        this.future = this.future.slice(1)\r\n        this.canvas.loadFromJSON(current)\r\n    }\r\n\r\n    clear() {\r\n        this.canvas.clear()\r\n        this.canvas.remove(this.canvas.getObjects())\r\n        this.past = []\r\n        this.future = []\r\n    }\r\n}\r\n\r\nexport default GuaFabric\r\n","// 画板库\r\n\r\nimport React, { useEffect, useRef } from 'react'\r\nimport {\r\n    DeleteOutlined,\r\n    CloseOutlined,\r\n    UndoOutlined,\r\n    RedoOutlined,\r\n} from '@ant-design/icons'\r\n// import SketchMain from './SketchMain'\r\nimport GuaFabric from './GuaFabric'\r\nimport './Sketch.scss'\r\n\r\nfunction Sketch(props) {\r\n    const canvasRef = useRef(null)\r\n    const fabricObj = useRef(null)\r\n\r\n    useEffect(() => {\r\n        const f = new GuaFabric(canvasRef.current)\r\n        fabricObj.current = f\r\n    }, [])\r\n\r\n    const handleClear = () => {\r\n        const f = fabricObj.current\r\n        f.clear()\r\n    }\r\n\r\n    const handleClose = () => {\r\n        props.onClose && props.onClose()\r\n    }\r\n    const handleUndo = () => {\r\n        const f = fabricObj.current\r\n        f.undo()\r\n    }\r\n    const handleRedo = () => {\r\n        const f = fabricObj.current\r\n        f.redo()\r\n    }\r\n\r\n    return (\r\n        <div className='mj-sketch'>\r\n            <div className='control-panel'>\r\n                <CloseOutlined\r\n                    onClick={handleClose}\r\n                    className='icon'\r\n                    style={{\r\n                        color: '#fff',\r\n                        fontSize: 24,\r\n                    }}\r\n                />\r\n                <UndoOutlined\r\n                    onClick={handleUndo}\r\n                    className='icon'\r\n                    style={{\r\n                        color: '#fff',\r\n                        fontSize: 24,\r\n                    }}\r\n                />\r\n                <RedoOutlined\r\n                    onClick={handleRedo}\r\n                    className='icon'\r\n                    style={{\r\n                        color: '#fff',\r\n                        fontSize: 24,\r\n                    }}\r\n                />\r\n                <DeleteOutlined\r\n                    onClick={handleClear}\r\n                    className='icon'\r\n                    style={{\r\n                        color: '#fff',\r\n                        fontSize: 24,\r\n                    }}\r\n                />\r\n                {/* <button onClick={handleClear}>清空画布</button>\r\n                <button onClick={handleUndo}>撤销</button>\r\n                <button onClick={handleRedo}>重做</button>\r\n                <button onClick={handleClose}>关闭</button> */}\r\n            </div>\r\n            <canvas ref={canvasRef}></canvas>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sketch\r\n","import classNames from 'classnames'\r\nimport React, { useState } from 'react'\r\nimport { EditOutlined } from '@ant-design/icons'\r\nimport Sketch from '../../../components/Sketch/Sketch'\r\nimport './QuestionItem.scss'\r\n\r\nfunction QuestionItem(props) {\r\n    const { data, index, layout, className, status } = props\r\n    const [sketchVisible, setSketchVisible] = useState(false)\r\n\r\n    const cls = classNames({\r\n        question: true,\r\n        [className]: className,\r\n        [status]: status,\r\n    })\r\n    const handleSelectOption = (data, pos) => {\r\n        props.onClick && props.onClick(data, pos)\r\n    }\r\n\r\n    const handleClickEdit = () => {\r\n        console.log('点击', sketchVisible)\r\n        setSketchVisible(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setSketchVisible(false)\r\n    }\r\n\r\n    return (\r\n        <div className={cls}>\r\n            <span>{index + 1}.</span>\r\n            <div className='content'>\r\n                <div className='title'>\r\n                    <span\r\n                        dangerouslySetInnerHTML={{\r\n                            __html: data.content,\r\n                        }}\r\n                    ></span>\r\n                </div>\r\n\r\n                <div className={`options ${layout}`}>\r\n                    {data.accessories[0] &&\r\n                        data.accessories[0].options.map((option, pos) => {\r\n                            const mapIndexToLetter = ['A', 'B', 'C', 'D']\r\n                            let status =\r\n                                pos == data.selectIndex &&\r\n                                data.status == 'correct'\r\n                                    ? 'correct'\r\n                                    : 'wrong'\r\n                            const optionCls = classNames({\r\n                                option: true,\r\n                                [status]: pos === data.selectIndex,\r\n                            })\r\n                            return (\r\n                                <div\r\n                                    key={pos}\r\n                                    onClick={() =>\r\n                                        handleSelectOption(data, pos)\r\n                                    }\r\n                                    className={optionCls}\r\n                                >\r\n                                    <span className='num'>\r\n                                        {mapIndexToLetter[pos]}.\r\n                                    </span>\r\n                                    <span\r\n                                        dangerouslySetInnerHTML={{\r\n                                            __html: option,\r\n                                        }}\r\n                                    ></span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                </div>\r\n                <EditOutlined\r\n                    className='edit-icon'\r\n                    onClick={handleClickEdit}\r\n                    style={{ fontSize: 22, color: '#a2a9be' }}\r\n                />\r\n            </div>\r\n            {sketchVisible && <Sketch onClose={handleClose} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionItem\r\n","/**\r\n * 操作列表\r\n * 功能：\r\n * 1. 选择习题题量\r\n * 2. 过滤题目\r\n * 3. 答案验证\r\n */\r\nimport { Radio, Input, Modal } from 'antd'\r\nimport { SettingOutlined } from '@ant-design/icons'\r\nimport React, { useState } from 'react'\r\nimport './BookListOper.scss'\r\n\r\nconst TextArea = Input.TextArea\r\nfunction BookListOper(props) {\r\n    const { filterIdList, onChange } = props\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n    const [count, setCount] = useState(40)\r\n    const [filterIds, setFilterIds] = useState('')\r\n    const [answer, setAnswer] = useState({\r\n        key: '',\r\n        value: '',\r\n    })\r\n\r\n    const handleChangeCount = e => {\r\n        const value = e.target.value\r\n        setCount(value)\r\n    }\r\n    const handleChangeId = e => {\r\n        const value = e.target.value\r\n        setFilterIds(value)\r\n    }\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true)\r\n    }\r\n\r\n    const handleOk = () => {\r\n        onChange &&\r\n            onChange({\r\n                count,\r\n                filterIds,\r\n                answer,\r\n            })\r\n        setIsModalVisible(false)\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false)\r\n    }\r\n\r\n    const handleChangeAnswer = (e, key) => {\r\n        const value = e.target.value\r\n        setAnswer({\r\n            ...answer,\r\n            [key]: value,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='book-oper'>\r\n            <SettingOutlined\r\n                onClick={showModal}\r\n                style={{\r\n                    fontSize: 24,\r\n                }}\r\n            />\r\n            <Modal\r\n                title='操作'\r\n                visible={isModalVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n            >\r\n                <div className='btn-list'>\r\n                    <div className='item'>\r\n                        <h3 className='label'>选择题量：</h3>\r\n                        <Radio.Group onChange={handleChangeCount} value={count}>\r\n                            <Radio value={10}>10题</Radio>\r\n                            <Radio value={20}>20题</Radio>\r\n                            <Radio value={30}>30题</Radio>\r\n                            <Radio value={40}>40题</Radio>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className='item'>\r\n                        <h3 className='label'>筛选题目：</h3>\r\n                        <Input\r\n                            value={filterIdList}\r\n                            placeholder='请筛选题目的id'\r\n                            onChange={handleChangeId}\r\n                        />\r\n                    </div>\r\n                    <div className='item'>\r\n                        <h3 className='label'>验证答案：</h3>\r\n                        <Input.Group compact>\r\n                            <Input\r\n                                type='number'\r\n                                style={{ width: '20%' }}\r\n                                onChange={e => handleChangeAnswer(e, 'key')}\r\n                                placeholder='练习几？'\r\n                            />\r\n                            <Input\r\n                                style={{ width: '80%' }}\r\n                                onChange={e => handleChangeAnswer(e, 'value')}\r\n                                defaultValue=''\r\n                                placeholder='请输入答案，逗号分隔'\r\n                            />\r\n                        </Input.Group>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookListOper\r\n","import { Skeleton } from 'antd'\r\nimport React from 'react'\r\n\r\nfunction SkeletonList(props) {\r\n    const count = props.count\r\n    const list = new Array(count).fill(0)\r\n    return (\r\n        <div className='skeleton-list'>\r\n            {list.map((item, index) => {\r\n                return <Skeleton key={index} active />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkeletonList\r\n","// 隐藏元素hooks\r\n\r\nimport { useEffect, useState } from 'react'\r\n\r\nfunction useVisibleData(dataSource, questionIds) {\r\n    const [visibleData, setVisibleData] = useState([])\r\n    useEffect(() => {\r\n        if (dataSource.length <= 0 || questionIds.length <= 0) {\r\n            setVisibleData(dataSource)\r\n        } else {\r\n            const data = dataSource.filter(item => {\r\n                return questionIds.includes(String(item.id))\r\n            })\r\n            setVisibleData(data)\r\n        }\r\n    }, [dataSource, questionIds])\r\n    return {\r\n        visibleData,\r\n    }\r\n}\r\n\r\nexport default useVisibleData\r\n","// 富文本编辑器\r\n\r\nimport { Modal } from 'antd'\r\nimport React, { useEffect, useRef } from 'react'\r\nimport { Editor } from '@tinymce/tinymce-react'\r\n\r\nfunction NotesEditor(props) {\r\n    const editorRef = useRef(null)\r\n    const { visible, onOk, onCancel, value } = props\r\n\r\n    useEffect(() => {\r\n        editorRef.current && editorRef.current.setContent(value || '')\r\n    }, [value])\r\n\r\n    const handleOk = () => {\r\n        const content = editorRef.current.getContent()\r\n        // 更新看看\r\n        onOk && onOk(content)\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        onCancel && onCancel()\r\n    }\r\n\r\n    // const handleNotesChange = data => {\r\n    //     const { notes, objectId, id } = data\r\n    //     setActiveNotes({\r\n    //         id: objectId,\r\n    //         notes,\r\n    //     })\r\n    //     console.log('data', data)\r\n    //     setIsModalVisible(true)\r\n    // }\r\n\r\n    return (\r\n        <Modal\r\n            forceRender={true}\r\n            width={1000}\r\n            title='编辑笔记'\r\n            visible={visible}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n        >\r\n            <Editor\r\n                className='notes-editor'\r\n                onInit={(evt, editor) => {\r\n                    editorRef.current = editor\r\n                }}\r\n                apiKey='24p0l3ih7zoyefn7sj47oxgrjz14zp69vuiyxo9tzk25oapj'\r\n                init={{\r\n                    height: 500,\r\n                    menubar: false,\r\n                    plugins: [\r\n                        'advlist',\r\n                        'autolink',\r\n                        'lists',\r\n                        'link',\r\n                        'image',\r\n                        'charmap',\r\n                        'anchor',\r\n                        'searchreplace',\r\n                        'visualblocks',\r\n                        'code',\r\n                        'fullscreen',\r\n                        'insertdatetime',\r\n                        'media',\r\n                        'table',\r\n                        'preview',\r\n                        'help',\r\n                        'wordcount',\r\n                    ],\r\n                    toolbar:\r\n                        'undo redo | blocks | ' +\r\n                        'bold italic forecolor | alignleft aligncenter ' +\r\n                        'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                        'removeformat | help',\r\n                    content_style:\r\n                        'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\r\n                }}\r\n            />\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default NotesEditor\r\n","// 获取qIds\r\nimport { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\n\r\nfunction useQuestionIds() {\r\n    const [questionIds, setQuestionIds] = useState([])\r\n    const params = useParams()\r\n    useEffect(() => {\r\n        const id = params.objectId\r\n        if (id && id.includes(',')) {\r\n            const qIds = id\r\n                .split(',')\r\n                .filter(item => item != '')\r\n                .map(item => parseInt(item))\r\n            setQuestionIds(qIds)\r\n        }\r\n    }, [params])\r\n    return {\r\n        questionIds,\r\n    }\r\n}\r\n\r\nexport default useQuestionIds\r\n","// 获取屏幕信息\r\nimport { useEffect, useState } from 'react'\r\n\r\nfunction useDeviceInfo() {\r\n    const [deviceInfo, setDeviceInfo] = useState({\r\n        isMobile: false,\r\n    })\r\n    useEffect(() => {\r\n        const resizeFn = () => {\r\n            console.log('document.body.clientWidth', document.body.clientWidth)\r\n            if (document.body.clientWidth < 1200) {\r\n                setDeviceInfo(device => ({\r\n                    ...device,\r\n                    isMobile: true,\r\n                }))\r\n            }\r\n        }\r\n        resizeFn()\r\n        window.addEventListener('resize', resizeFn)\r\n        return () => {\r\n            window.removeEventListener('resize', resizeFn)\r\n        }\r\n    }, [])\r\n    return {\r\n        isMobile: deviceInfo.isMobile,\r\n    }\r\n}\r\n\r\nexport default useDeviceInfo\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\n// import { SketchField, Tools } from 'react-sketch'\r\nimport { message, Modal } from 'antd'\r\nimport classNames from 'classnames'\r\n\r\nimport Answer from '../xingce/components/Answer'\r\nimport { getBookList } from '../../service/exam'\r\nimport QuestionItem from './components/QuestionItem'\r\nimport BookListOper from './components/BookListOper'\r\nimport SkeletonList from '../../components/SkeletonList/SkeletonList'\r\nimport useVisibleData from './hooks/useVisibleData'\r\nimport NotesEditor from './components/NotesEditor'\r\nimport { updateQuestionNotes } from '../../service/question'\r\nimport useQuestionIds from './hooks/useQuestionIds'\r\nimport './BookList.scss'\r\nimport useDeviceInfo from './hooks/useDeviceInfo'\r\n\r\n// 格式化数据源\r\nconst formatDataSource = (dataSource, isMobile) => {\r\n    const data = dataSource\r\n        .map(item => item.toJSON())\r\n        // 排序，按照题目做过的次数\r\n        .sort((a, b) => b.questionMeta.totalCount - a.questionMeta.totalCount)\r\n        // 选项栏布局\r\n        .map(item => {\r\n            let layout = 'four'\r\n            // 任一选项文字长度超过10，则选择两栏布局\r\n            // 任一选项文字长度超过20，则选择一栏布局\r\n            // 否则使用四栏布局\r\n            const itemLength = []\r\n            item.accessories[0].options.forEach(item => {\r\n                itemLength.push(item.length)\r\n            })\r\n            const len = Math.max(...itemLength)\r\n            if (len >= 20) {\r\n                layout = 'one'\r\n            } else if (len > 10) {\r\n                layout = 'two'\r\n            }\r\n\r\n            if (isMobile) {\r\n                layout = 'one'\r\n            }\r\n            return {\r\n                ...item,\r\n                layout,\r\n            }\r\n        })\r\n\r\n    return data\r\n}\r\n\r\n// 格式化被选中的数据\r\nconst formatSelectedItem = (item, selectIndex) => {\r\n    if (!selectIndex && selectIndex !== 0) {\r\n        return {\r\n            ...item,\r\n            answerVisible: false,\r\n            status: '',\r\n            selectIndex: '',\r\n        }\r\n    }\r\n    const choice = item.correctAnswer.choice\r\n    let status = ''\r\n    if (choice == selectIndex) {\r\n        status = 'correct'\r\n    } else {\r\n        status = 'wrong'\r\n    }\r\n    return {\r\n        ...item,\r\n        answerVisible: true,\r\n        status,\r\n        selectIndex,\r\n    }\r\n}\r\n\r\n// 2264418,2448379\r\nconst XingCeList = () => {\r\n    const [testCount, setTestCount] = useState(40)\r\n    const [dataSource, setDataSource] = useState([])\r\n    const [visibleIdList, setVisibleIdList] = useState([])\r\n\r\n    // 笔记相关state\r\n    const [notes, setNotes] = useState({\r\n        id: '',\r\n        content: '',\r\n    })\r\n    const [notesVisible, setNotesVisible] = useState(false)\r\n    const { isMobile } = useDeviceInfo()\r\n    const { visibleData } = useVisibleData(dataSource, visibleIdList)\r\n    const { questionIds } = useQuestionIds()\r\n\r\n    const getAllBookList = useCallback(\r\n        questionIds => {\r\n            const requestList = []\r\n            for (let i = 0; i < questionIds.length / 1000; i++) {\r\n                const request = getBookList(questionIds, i * 1000)\r\n                requestList.push(request)\r\n            }\r\n            Promise.all(requestList)\r\n                .then(res => {\r\n                    const data = res\r\n                        .map(item => formatDataSource(item, isMobile))\r\n                        .flat()\r\n                    setDataSource(data)\r\n                })\r\n                .catch(err => {\r\n                    console.log('err', err)\r\n                })\r\n        },\r\n        [isMobile]\r\n    )\r\n\r\n    useEffect(() => {\r\n        const data = window.localStorage.getItem('dataSource')\r\n        if (data) {\r\n            setDataSource(data)\r\n        } else {\r\n            getAllBookList(questionIds)\r\n        }\r\n    }, [questionIds, getAllBookList])\r\n\r\n    const handleSelectOption = (item, index) => {\r\n        // console.log('is', isMobile)\r\n        // if (isMobile) return\r\n        const questionId = item.id\r\n        const newDataSource = dataSource.map(item => {\r\n            if (item.id === questionId) {\r\n                return formatSelectedItem(item, index)\r\n            } else {\r\n                return item\r\n            }\r\n        })\r\n        setDataSource(newDataSource)\r\n    }\r\n\r\n    const handleClose = item => {\r\n        const questionId = item.id\r\n        const newDataSource = dataSource.map(item => {\r\n            if (item.id === questionId) {\r\n                return formatSelectedItem(item)\r\n            } else {\r\n                return item\r\n            }\r\n        })\r\n        setDataSource(newDataSource)\r\n    }\r\n\r\n    const handleChangeCount = count => {\r\n        setTestCount(count)\r\n    }\r\n\r\n    // 控制需要单独显示的题目\r\n    const handleChangeIdList = value => {\r\n        const qIds = value ? value.split(',') : []\r\n        setVisibleIdList(qIds)\r\n    }\r\n\r\n    const handleNotesChange = data => {\r\n        console.log('data', data)\r\n        setNotes({\r\n            id: data.objectId,\r\n            content: data.notes || '',\r\n        })\r\n        setNotesVisible(true)\r\n    }\r\n\r\n    const handleNotesOk = content => {\r\n        // 更新看看\r\n        updateQuestionNotes(notes.id, content)\r\n            .then(() => {\r\n                getAllBookList(questionIds)\r\n                setNotesVisible(false)\r\n                message.success('更新成功')\r\n            })\r\n            .catch(() => {\r\n                message.error('更新失败')\r\n            })\r\n    }\r\n\r\n    const handleNotesCancel = () => {\r\n        setNotesVisible(false)\r\n    }\r\n\r\n    const handleChangeOper = data => {\r\n        const { count, filterIds, answer } = data\r\n        setTestCount(count)\r\n        const qIds = filterIds ? filterIds.split(',') : []\r\n        setVisibleIdList(qIds)\r\n\r\n        // 验证答案\r\n        const { key, value } = answer\r\n        const left = (key - 1) * count\r\n        getAnswer(left, value)\r\n    }\r\n\r\n    const getAnswer = (left, stringArr) => {\r\n        const answer = dataSource.map(\r\n            item => parseInt(item.correctAnswer.choice) + 1\r\n        )\r\n        let pos = 0\r\n        let count = 0\r\n        let wrong = []\r\n        let qIds = []\r\n        let arr = stringArr.split('').filter(item => item != ' ')\r\n        if (\r\n            arr.includes('A') ||\r\n            arr.includes('B') ||\r\n            arr.includes('C') ||\r\n            arr.includes('D')\r\n        ) {\r\n            arr = arr.map(item => item.charCodeAt() - 64)\r\n            console.log('arr', arr)\r\n        }\r\n        for (let i = left; i < arr.length + left; i++) {\r\n            const item = answer[i]\r\n            const p = arr[pos]\r\n            pos++\r\n            if (item == p) {\r\n                count++\r\n            } else {\r\n                wrong.push(i + 1)\r\n                qIds.push(dataSource[i].id)\r\n            }\r\n        }\r\n        const zql = parseInt((count * 100) / arr.length)\r\n        const ct = wrong.join(', ')\r\n        const zqda = answer\r\n            .slice(left, arr.length + left)\r\n            .map((item, index) => {\r\n                if (index % 5 === 0) {\r\n                    return ' ' + String.fromCharCode(item + 64)\r\n                } else {\r\n                    return String.fromCharCode(item + 64)\r\n                }\r\n            })\r\n            .join('')\r\n        Modal.success({\r\n            title: '答案验证结果',\r\n            content: (\r\n                <div>\r\n                    <p>正确率：{zql}%</p>\r\n                    <p>错题：{ct}</p>\r\n                    <p>正确答案：{zqda}</p>\r\n                </div>\r\n            ),\r\n        })\r\n    }\r\n\r\n    window.getAnswer = getAnswer\r\n\r\n    return (\r\n        <div className='book-wrap'>\r\n            <BookListOper onChange={handleChangeOper} />\r\n            <div className='wrap-print'>\r\n                {visibleData.length <= 0 ? (\r\n                    <SkeletonList count={10} />\r\n                ) : (\r\n                    <div className='list'>\r\n                        {visibleData.map((item, index) => {\r\n                            return (\r\n                                <div key={item.id} className='item-wrap'>\r\n                                    {index % testCount === 0 && (\r\n                                        <h2>\r\n                                            练习题\r\n                                            {parseInt(index / testCount) + 1}\r\n                                        </h2>\r\n                                    )}\r\n                                    <div className='item'>\r\n                                        <QuestionItem\r\n                                            status={item.status}\r\n                                            data={item}\r\n                                            index={index}\r\n                                            layout={item.layout}\r\n                                            onClick={handleSelectOption}\r\n                                        />\r\n                                        {item.answerVisible && (\r\n                                            <Answer\r\n                                                onChange={() =>\r\n                                                    handleNotesChange(item)\r\n                                                }\r\n                                                onClose={() =>\r\n                                                    handleClose(item)\r\n                                                }\r\n                                                data={item}\r\n                                            />\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {/* <SketchField\r\n                width='1024px'\r\n                height='768px'\r\n                tool={Tools.Pencil}\r\n                lineColor='black'\r\n                lineWidth={3}\r\n            /> */}\r\n            <NotesEditor\r\n                value={notes.content}\r\n                visible={notesVisible}\r\n                onOk={handleNotesOk}\r\n                onCancel={handleNotesCancel}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default XingCeList\r\n","// adjacency matrix\r\n/**\r\n *\r\n[4L, 49,1,2]  -> [1L, 49,3,4]  [黑色, 14,1,3,4]  [128G, 77,1,3]  [红色, 14,2]  [256G, 77,2,4]  \r\n[1L, 49,3,4]  -> [4L, 49,1,2]  [黑色, 14,1,3,4]  [128G, 77,1,3]  [256G, 77,2,4]  \r\n[黑色, 14,1,3,4]  -> [红色, 14,2]  [4L, 49,1,2]  [128G, 77,1,3]  [1L, 49,3,4]  [256G, 77,2,4] \r\n\r\n{[1L, 49,3,4] [128G, 77,1,3] [红色, 14,2] [256G, 77,2,4]}\r\n[红色, 14,2]  -> [黑色, 14,1,3,4]  [4L, 49,1,2]  [256G, 77,2,4]  \r\n[128G, 77,1,3]  -> [256G, 77,2,4]  [4L, 49,1,2]  [黑色, 14,1,3,4]  [1L, 49,3,4]  \r\n[256G, 77,2,4]  -> [128G, 77,1,3]  [4L, 49,1,2]  [红色, 14,2]  [1L, 49,3,4]  [黑色, 14,1,3,4]  \r\n */\r\nclass Vertex {\r\n    constructor(id) {\r\n        this.id = id\r\n        this.sku = new Set()\r\n    }\r\n}\r\nconst log = console.log.bind(console, '[adj-list]')\r\n// Adjacency table\r\nclass AdjacencyListGraph {\r\n    constructor(isDirected = false) {\r\n        this.vertices = [] //顶点 vertex的复数\r\n        this.adjList = new Map() // 邻接表 Adjacency\r\n        this.isDirected = isDirected // 是否为有向图\r\n    }\r\n\r\n    loadDataSource(commoditySpecs, limitData) {\r\n        // 1. 通过规格添加顶点\r\n        const vertex = commoditySpecs.reduce((acc, cur) => {\r\n            return acc.concat(cur.list)\r\n        }, [])\r\n        vertex.forEach(id => {\r\n            const vertex = new Vertex(id)\r\n            this.addVertex(vertex)\r\n        })\r\n        // 2. 约束条件添加边\r\n        // 同级可选\r\n        for (let i = 0; i < commoditySpecs.length; i++) {\r\n            const item = commoditySpecs[i].list\r\n            for (let j = 0; j < item.length; j++) {\r\n                for (let k = 0; k < item.length; k++) {\r\n                    if (item[j] !== item[k]) {\r\n                        this.addEdge(\r\n                            item[j],\r\n                            item[k],\r\n                            parseInt(Math.random() * 100)\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // 限制条件\r\n        for (let i = 0; i < limitData.length; i++) {\r\n            const item = limitData[i].list\r\n            const skuId = limitData[i].skuId\r\n            for (let j = 0; j < item.length; j++) {\r\n                for (let k = 0; k < item.length; k++) {\r\n                    if (item[j] !== item[k]) {\r\n                        this.addEdge(item[j], item[k], skuId)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getVertexById(vertexId) {\r\n        const vertex = this.vertices.find(vertex => vertex.id === vertexId)\r\n        return vertex\r\n    }\r\n\r\n    // 判断顶点是否存在\r\n    hasVertex(vertex) {\r\n        // const result = this.vertices.some(vertex => vertex.id === vertexId)\r\n        return this.vertices.includes(vertex)\r\n    }\r\n\r\n    // 判断边是否存在\r\n    hasEdge(v, w) {\r\n        const result = this.adjList.get(v).includes(w)\r\n        return result\r\n    }\r\n\r\n    // 添加顶点\r\n    addVertex(vertex) {\r\n        if (this.hasVertex(vertex)) return\r\n        this.vertices.push(vertex)\r\n        this.adjList.set(vertex, [])\r\n    }\r\n\r\n    // 建立v => w的边联系\r\n    addEdge(vId, wId, skuId) {\r\n        const v1 = this.getVertexById(vId)\r\n        const v2 = this.getVertexById(wId)\r\n        if (!v1 || !v2) {\r\n            console.log('v, w节点不存在, 请先添加入节点中')\r\n            return\r\n        }\r\n        if (!this.hasEdge(v1, v2)) {\r\n            v1.sku.add(skuId)\r\n            v2.sku.add(skuId)\r\n            this.adjList.get(v1).push(v2)\r\n            this.adjList.get(v2).push(v1)\r\n        }\r\n    }\r\n\r\n    getVertices() {\r\n        return this.vertices\r\n    }\r\n\r\n    getExistVertices() {\r\n        return this.existVertices\r\n    }\r\n\r\n    getVertexIdList(vertexId) {\r\n        if (vertexId) {\r\n            const vertex = this.getVertexById(vertexId)\r\n            const vertexList = this.adjList.get(vertex)\r\n            return vertexList.map(item => item.id)\r\n        }\r\n        return this.vertices.map(item => item.id)\r\n    }\r\n\r\n    getAdjList() {\r\n        return this.adjList\r\n    }\r\n\r\n    vertexToString(vertex) {\r\n        return `[${vertex.id}, ${[...vertex.sku]}] `\r\n    }\r\n\r\n    toString() {\r\n        let s = ''\r\n        for (let i = 0; i < this.vertices.length; i++) {\r\n            const vertex = this.vertices[i]\r\n            s += `${this.vertexToString(vertex)} -> `\r\n            const neighbors = this.adjList.get(this.vertices[i])\r\n            for (let j = 0; j < neighbors.length; j++) {\r\n                s += `${this.vertexToString(neighbors[j])} `\r\n            }\r\n            s += '\\n'\r\n        }\r\n        return s\r\n    }\r\n\r\n    // 判断v1和v2是否连通\r\n    find(v1, v2) {\r\n        return this.adjList.get(v1).includes(v2)\r\n    }\r\n\r\n    getSkuIntersection(setList) {\r\n        const map = new Map()\r\n        for (let i = 0; i < setList.length; i++) {\r\n            const sku = [...setList[i]]\r\n            sku.forEach(item => {\r\n                if (map.has(item)) {\r\n                    map.set(item, 2)\r\n                } else {\r\n                    map.set(item, 1)\r\n                }\r\n            })\r\n        }\r\n        const result = [...map]\r\n            .filter(([key, value]) => value > 1)\r\n            .map(([key, value]) => key)\r\n        return result\r\n    }\r\n\r\n    // 获取交集\r\n    getIntersection(vertexIdList) {\r\n        window.adj = [0, 0]\r\n        if (vertexIdList.length <= 0) return this.getVertexIdList()\r\n        if (vertexIdList.length === 1)\r\n            return this.getVertexIdList(vertexIdList[0])\r\n        const map = new Map()\r\n        const arr = []\r\n        // 1. 取各顶点的规格\r\n        for (let i = 0; i < vertexIdList.length; i++) {\r\n            const id = vertexIdList[i]\r\n            const vertex = this.getVertexById(id)\r\n            arr.push(vertex.sku)\r\n            // 2. 取顶点下各个邻接点的交集, map为2说明出现了两次，则存在交集\r\n            const adjList = this.adjList.get(vertex)\r\n            log('adj', adjList)\r\n            window.adj[i] = adjList\r\n            for (let j = 0; j < adjList.length; j++) {\r\n                const item = adjList[j]\r\n                if (!map.has(item)) {\r\n                    map.set(item, 1)\r\n                } else {\r\n                    map.set(item, 2)\r\n                }\r\n            }\r\n        }\r\n        log(\r\n            '[...map]',\r\n            [...map],\r\n            [...map]\r\n                .filter(([key, value]) => value > 1)\r\n                .map(([key, value]) => key)\r\n        )\r\n        // 1.1 取出各顶点的规格交集\r\n        const set = this.getSkuIntersection(arr)\r\n        // 通过1和2 得出正确的交集\r\n        const result = [...map]\r\n            .filter(([key, value]) => value > 1)\r\n            .filter(([key, value]) => {\r\n                const sku = key.sku\r\n                const result = set.every(item => sku.has(item))\r\n                return result\r\n            })\r\n            .map(([key, value]) => key.id)\r\n        return result\r\n    }\r\n}\r\n\r\nexport default AdjacencyListGraph\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport './styles.css'\r\nimport Graph from './graph'\r\nimport { Radio } from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport AdjacencyMatrixGraph from './AdjacencyMatrixGraph'\r\nimport AdjacencyListGraph from './AdjacencyListGraph'\r\nconst limitData = [\r\n    { skuId: 1, list: ['意外险', '十年', '0岁到18岁'] },\r\n    { skuId: 2, list: ['意外险', '一百年', '0岁到18岁'] },\r\n    { skuId: 3, list: ['车险', '十年', '0岁到18岁'] },\r\n    { skuId: 4, list: ['车险', '十年', '19岁到60岁'] },\r\n    { skuId: 5, list: ['健康险', '一千年', '61岁到100岁'] },\r\n    { skuId: 6, list: ['健康险', '一千年', '0岁到18岁'] },\r\n    { skuId: 7, list: ['健康险', '十年', '19岁到60岁'] },\r\n]\r\nconst commoditySpecs = [\r\n    {\r\n        title: '保险种类',\r\n        key: 'type',\r\n        list: ['意外险', '车险', '健康险'],\r\n    },\r\n    {\r\n        title: '保障时间',\r\n        key: 'time',\r\n        list: ['十年', '一百年', '一千年'],\r\n    },\r\n    {\r\n        title: '投保人年龄',\r\n        key: 'age',\r\n        list: ['0岁到18岁', '19岁到60岁', '61岁到100岁'],\r\n    },\r\n]\r\n// const limitData = [\r\n//     { skuId: 1, list: ['4L', '黑色', '128G'] },\r\n//     { skuId: 2, list: ['4L', '红色', '256G'] },\r\n//     { skuId: 3, list: ['1L', '黑色', '128G'] },\r\n//     { skuId: 4, list: ['1L', '黑色', '256G'] },\r\n// ]\r\n// const commoditySpecs = [\r\n//     { title: '尺寸', key: 'size', list: ['4L', '1L'] },\r\n//     { title: '颜色', key: 'color', list: ['黑色', '红色'] },\r\n//     { title: '体重', key: 'weight', list: ['128G', '256G'] },\r\n// ]\r\nconst g = new AdjacencyListGraph()\r\ng.loadDataSource(commoditySpecs, limitData)\r\n\r\n// 呵呵。\r\nfunction Matrix() {\r\n    const [data, setData] = useState({})\r\n    const graph = useMemo(() => {\r\n        const g = new AdjacencyMatrixGraph()\r\n        g.loadDataSource(commoditySpecs, limitData)\r\n        console.log('g.tostring', g.toString())\r\n        // const g = new AdjacencyListGraph()\r\n        // g.loadDataSource(commoditySpecs, limitData)\r\n        return g\r\n    }, [])\r\n    const [limit, setLimit] = useState(graph.getExistVertices())\r\n\r\n    useEffect(() => {\r\n        // 获取选中的顶点\r\n        const vertexList = Object.keys(data)\r\n            .map(key => data[key])\r\n            .filter(key => key)\r\n        const l = graph.getIntersection(vertexList)\r\n        console.log('intersection', l)\r\n        if (l) {\r\n            setLimit(l)\r\n        }\r\n    }, [data])\r\n\r\n    const handleChange = (e, key) => {\r\n        const value = e.target.value\r\n        const newData = {\r\n            ...data,\r\n            [key]: value,\r\n        }\r\n        setData(newData)\r\n    }\r\n\r\n    const handleClick = key => {\r\n        // setData\r\n        setData({\r\n            ...data,\r\n            [key]: '',\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='App'>\r\n            {commoditySpecs.map((spec, index_i) => {\r\n                const { title, key, list } = spec\r\n                return (\r\n                    <div key={index_i} className=''>\r\n                        <div>{title}</div>\r\n                        <Radio.Group\r\n                            value={data[key]}\r\n                            onChange={e => handleChange(e, key)}\r\n                            buttonStyle='solid'\r\n                        >\r\n                            {list.map(item => {\r\n                                // 没有item，或者为空\r\n                                let disable = false\r\n                                if (\r\n                                    data[key] !== item &&\r\n                                    !limit.includes(item)\r\n                                ) {\r\n                                    disable = true\r\n                                }\r\n                                return (\r\n                                    <Radio.Button\r\n                                        onClick={() => handleClick(key)}\r\n                                        disabled={disable}\r\n                                        key={item}\r\n                                        value={item}\r\n                                    >\r\n                                        {item}\r\n                                    </Radio.Button>\r\n                                )\r\n                            })}\r\n                        </Radio.Group>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Matrix\r\n","export const getNumberFromLen = numberLength => {\r\n    var num = Math.random()\r\n    while (num < Math.pow(10, numberLength - 1)) {\r\n        num *= 10\r\n    }\r\n    return parseInt(num)\r\n}\r\n// number是数字，len是保留的位数，并且放大到的位数\r\n// 例如\r\n// formatAnswerNumber(0.03813, 2) => 38\r\n// formatAnswerNumber(0.03813, 3) => 381\r\nexport const formatAnswerNumber = (number, len) => {\r\n    let n = number\r\n    if (n > 100) n /= 10\r\n    while (n < Math.pow(10, len - 1)) {\r\n        n *= 10\r\n    }\r\n    return parseInt(n)\r\n}\r\n","import { Alert, Button, Col, Input, Radio, Row, Form } from 'antd'\r\nimport React, { useState } from 'react'\r\nimport { formatAnswerNumber, getNumberFromLen } from '../../utils/math'\r\nimport './Calc.scss'\r\n\r\n/**\r\n * {\r\n *    formula：'', // 算式\r\n *    formatAnswer: '', // 真实答案\r\n *    time: '', //耗时\r\n *    input: '', // inputValue用户输入的答案\r\n *    errorAnalysis:\r\n * }\r\n */\r\n// type: 1除法\r\n// type: 2加法\r\n// type: 3减法\r\nconst getData = (type = 1, count = 10) => {\r\n    // 除法\r\n    const divisionFn = () => {\r\n        const a = getNumberFromLen(3)\r\n        const b = getNumberFromLen(3)\r\n        return {\r\n            formula: (\r\n                <div>\r\n                    {a}\r\n                    <div className='divider'></div>\r\n                    {b}\r\n                </div>\r\n            ),\r\n            formatAnswer: formatAnswerNumber(a / b, 3),\r\n            // 误差小于3%\r\n            errorAnalysis: (input, answer) => {\r\n                return (\r\n                    Math.abs(`0.${input}` - `0.${answer}`) / `0.${answer}` <=\r\n                    0.03\r\n                )\r\n            },\r\n        }\r\n    }\r\n    // 高难度除法，不好算的数字\r\n    const divisionFn2 = () => {\r\n        let a = getNumberFromLen(3)\r\n        let b = getNumberFromLen(3)\r\n        let formatAnswer = formatAnswerNumber(a / b, 2)\r\n        while (formatAnswer / 10 < 5 || formatAnswer % 10 < 5) {\r\n            a = getNumberFromLen(3)\r\n            b = getNumberFromLen(3)\r\n            formatAnswer = formatAnswerNumber(a / b, 2)\r\n        }\r\n        return {\r\n            formula: (\r\n                <div>\r\n                    {a}\r\n                    <div className='divider'></div>\r\n                    {b}\r\n                </div>\r\n            ),\r\n            formatAnswer: formatAnswerNumber(a / b, 2),\r\n            // 误差小于1\r\n            errorAnalysis: (input, answer) => Math.abs(input - answer) <= 1,\r\n        }\r\n    }\r\n    // 增长率\r\n    const growthFn = () => {\r\n        // 现期量\r\n        const a = getNumberFromLen(3)\r\n        // 增长率\r\n        const b = getNumberFromLen(3) / 10\r\n        return {\r\n            formula: (\r\n                <div>\r\n                    <span>\r\n                        {a} * {b}%\r\n                    </span>\r\n                    <div className='divider'></div>\r\n                    <span>1 + {b}%</span>\r\n                </div>\r\n            ),\r\n            formatAnswer: Math.round((a * (b / 100)) / (1 + b / 100)),\r\n            // 误差5%以内\r\n            errorAnalysis: (input, answer) =>\r\n                Math.abs(input - answer) / answer <= 0.05,\r\n        }\r\n    }\r\n\r\n    // 加法\r\n    const addFn = () => {\r\n        const a = getNumberFromLen(3)\r\n        const b = getNumberFromLen(3)\r\n        return {\r\n            formula: (\r\n                <div>\r\n                    {a}+{b}\r\n                </div>\r\n            ),\r\n            formatAnswer: a + b,\r\n            // 不能有误差\r\n            errorAnalysis: (input, answer) => input - answer === 0,\r\n        }\r\n    }\r\n    // 减法\r\n    const subFn = () => {\r\n        const a = getNumberFromLen(3)\r\n        const b = getNumberFromLen(3)\r\n        return {\r\n            formula: (\r\n                <div>\r\n                    {a}-{b}\r\n                </div>\r\n            ),\r\n            formatAnswer: a - b,\r\n            // 不能有误差\r\n            errorAnalysis: (input, answer) => input - answer === 0,\r\n        }\r\n    }\r\n    // 两位数乘法误差允许3%以内\r\n    const mulFn = () => {\r\n        const a = getNumberFromLen(2)\r\n        const b = getNumberFromLen(2)\r\n        return {\r\n            formula: (\r\n                <div>\r\n                    {a} * {b}\r\n                </div>\r\n            ),\r\n            formatAnswer: a * b,\r\n            // 误差控制在3%\r\n            errorAnalysis: (input, answer) =>\r\n                Math.abs(input - answer) / answer <= 0.03,\r\n        }\r\n    }\r\n    // 3*1乘法\r\n    const threeMulToOneFn = () => {\r\n        let a = getNumberFromLen(3)\r\n        let b = getNumberFromLen(1)\r\n        while (a % 10 < 3 || b < 3) {\r\n            a = getNumberFromLen(3)\r\n            b = getNumberFromLen(1)\r\n        }\r\n        return {\r\n            formula: (\r\n                <div>\r\n                    {a} * {b}\r\n                </div>\r\n            ),\r\n            formatAnswer: a * b,\r\n            // 误差为0\r\n            errorAnalysis: (input, answer) => input - answer === 0,\r\n        }\r\n    }\r\n\r\n    // 2*1乘法\r\n    const twoMulToOneFn = () => {\r\n        let a = getNumberFromLen(2)\r\n        let b = getNumberFromLen(1)\r\n        while (a < 10) {\r\n            a = getNumberFromLen(2)\r\n            b = getNumberFromLen(1)\r\n        }\r\n        return {\r\n            formula: (\r\n                <div>\r\n                    {a} * {b}\r\n                </div>\r\n            ),\r\n            formatAnswer: a * b,\r\n            // 误差控制在3%\r\n            errorAnalysis: (input, answer) => input - answer === 0,\r\n        }\r\n    }\r\n\r\n    // 三位数乘法误差允许3%以内\r\n    const threeMulFn = () => {\r\n        const a = getNumberFromLen(3)\r\n        const b = getNumberFromLen(3)\r\n        return {\r\n            formula: (\r\n                <div>\r\n                    {a} * {b}\r\n                </div>\r\n            ),\r\n            formatAnswer: formatAnswerNumber(a * b, 3),\r\n            // 误差控制在3%\r\n            errorAnalysis: (input, answer) =>\r\n                Math.abs(input - answer) / answer <= 0.03,\r\n        }\r\n    }\r\n    // 特殊分数\r\n    const fractionFn = () => {\r\n        const map = {\r\n            '33.3%': 3,\r\n            '25%': 4,\r\n            '20%': 5,\r\n            '16.7%': 6,\r\n            '14.3%': 7,\r\n            '12.5%': 8,\r\n            '11.1%': 9,\r\n            '10%': 10,\r\n            '9.1%': 11,\r\n            '8.3%': 12,\r\n            '7.7%': 13,\r\n            '7.1%': 14,\r\n            '6.7%': 15,\r\n            '6.25%': 16,\r\n            '5.9%': 17,\r\n            '5.6%': 18,\r\n            '5.3%': 19,\r\n            '11%': 9.1,\r\n            '12%': 8.3,\r\n            '13%': 7.7,\r\n            '14%': 7.1,\r\n            '15%': 6.7,\r\n            '16%': 6.25,\r\n            '17%': 5.9,\r\n            '18%': 5.6,\r\n            '19%': 5.3,\r\n        }\r\n        const arr = Object.keys(map).sort(() => Math.random() - 0.5)\r\n        let index = -1\r\n        return () => {\r\n            index += 1\r\n            return {\r\n                formula: <div>{arr[index]}</div>,\r\n                formatAnswer: map[arr[index]],\r\n                errorAnalysis: (input, answer) => input - answer === 0,\r\n            }\r\n        }\r\n    }\r\n\r\n    // 加法\r\n    const mapTypeToFn = {\r\n        1: divisionFn,\r\n        2: growthFn,\r\n        3: addFn,\r\n        4: subFn,\r\n        5: mulFn,\r\n        6: threeMulFn,\r\n        7: fractionFn(),\r\n        8: divisionFn2,\r\n        9: threeMulToOneFn,\r\n        10: twoMulToOneFn,\r\n    }\r\n    const arr = []\r\n    for (let i = 0; i < count; i++) {\r\n        let answerObj = mapTypeToFn[type]()\r\n        const obj = {\r\n            input: '',\r\n            time: '',\r\n            ...answerObj,\r\n        }\r\n        arr.push(obj)\r\n    }\r\n    return arr\r\n}\r\n\r\nconst defaultColumn = [\r\n    {\r\n        type: 'span',\r\n        label: '算式',\r\n        span: 8,\r\n    },\r\n    {\r\n        type: 'input',\r\n        label: '输入',\r\n        span: 6,\r\n    },\r\n    {\r\n        type: 'alert',\r\n        label: 'answer',\r\n        span: 6,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'time',\r\n        span: 4,\r\n    },\r\n]\r\n\r\nconst Calc = () => {\r\n    const [column, setColumn] = useState(defaultColumn)\r\n    const [calcMethod, setCalcMethod] = useState(1)\r\n    const [answerVisible, setAnswerVisible] = useState(false)\r\n    const [acceptRate, setAcceptRate] = useState(0)\r\n    const [data, setData] = useState(() => getData())\r\n    window.data = data\r\n    const [time, setTime] = useState({\r\n        start: '',\r\n        end: '',\r\n    })\r\n    const prefix = 'calc-wrap'\r\n    const onChange = e => {\r\n        const value = e.target.value\r\n        const newData = getData(value)\r\n        setData(newData)\r\n        setCalcMethod(value)\r\n        setAnswerVisible(false)\r\n    }\r\n\r\n    const handleChangeInput = (e, index) => {\r\n        const newData = data.map((item, j) => {\r\n            if (index === j) {\r\n                return {\r\n                    ...item,\r\n                    input: e.target.value,\r\n                }\r\n            }\r\n            return item\r\n        })\r\n        setData(newData)\r\n    }\r\n\r\n    const handleClickResult = () => {\r\n        setAnswerVisible(true)\r\n        let count = 0\r\n        data.forEach(item => {\r\n            const { input, formatAnswer, errorAnalysis } = item\r\n            if (errorAnalysis(input, formatAnswer)) {\r\n                count++\r\n            }\r\n        })\r\n        setAcceptRate(count)\r\n        setTime({\r\n            ...time,\r\n            end: time.start ? parseInt((Date.now() - time.start) / 1000) : 0,\r\n        })\r\n    }\r\n\r\n    const handleClickInput = index => {\r\n        if (index === 0) {\r\n            console.log('start!!!')\r\n            setTime({\r\n                ...time,\r\n                start: Date.now(),\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleBlur = index => {\r\n        const newData = data.map((item, j) => {\r\n            if (index === j) {\r\n                return {\r\n                    ...item,\r\n                    time: Date.now(),\r\n                }\r\n            } else {\r\n                return item\r\n            }\r\n        })\r\n        setData(newData)\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setData(getData(calcMethod))\r\n        setAnswerVisible(false)\r\n        setAcceptRate(0)\r\n        setTime({\r\n            start: '',\r\n            end: '',\r\n        })\r\n    }\r\n    // 24133 44424 22443 43434\r\n    return (\r\n        <div className={prefix}>\r\n            <div className={`${prefix}-method`}>\r\n                <Button onClick={handleReset}>刷新数据</Button>\r\n                <Radio.Group onChange={onChange} value={calcMethod}>\r\n                    <Radio value={1}>除法</Radio>\r\n                    <Radio value={2}>增长量</Radio>\r\n                    <Radio value={3}>加法</Radio>\r\n                    <Radio value={4}>减法</Radio>\r\n                    <Radio value={5}>两位数乘法</Radio>\r\n                    <Radio value={6}>三位数乘法</Radio>\r\n                    <Radio value={7}>特殊分数</Radio>\r\n                    <Radio value={8}>高难度除法</Radio>\r\n                    <Radio value={9}>3*1乘法</Radio>\r\n                    <Radio value={10}>2*1乘法</Radio>\r\n                </Radio.Group>\r\n            </div>\r\n            <div className={`${prefix}-content`}>\r\n                <div className='list'>\r\n                    <Row className='list-item'>\r\n                        {column.map((item, index) => {\r\n                            return (\r\n                                <Col\r\n                                    key={index}\r\n                                    className='list-item-num'\r\n                                    span={item.span}\r\n                                >\r\n                                    {item.label}\r\n                                </Col>\r\n                            )\r\n                        })}\r\n                    </Row>\r\n                    <Form>\r\n                        {data.map((item, index) => {\r\n                            const {\r\n                                formula,\r\n                                input,\r\n                                formatAnswer,\r\n                                errorAnalysis,\r\n                            } = item\r\n                            let consumeTime = item.time - time.start\r\n                            if (index > 1) {\r\n                                const preItem = data[index - 1]\r\n                                consumeTime = item.time - preItem.time\r\n                            }\r\n                            return (\r\n                                <Row className='list-item' key={index}>\r\n                                    <Col\r\n                                        span={8}\r\n                                        className='list-item-num list-item-a'\r\n                                    >\r\n                                        {formula}\r\n                                    </Col>\r\n                                    <Col\r\n                                        span={6}\r\n                                        className='list-item-num list-item-b'\r\n                                    >\r\n                                        <Input\r\n                                            type='tel'\r\n                                            onClick={() =>\r\n                                                handleClickInput(index)\r\n                                            }\r\n                                            onChange={e =>\r\n                                                handleChangeInput(e, index)\r\n                                            }\r\n                                            onBlur={() => handleBlur(index)}\r\n                                            value={input}\r\n                                        />\r\n                                    </Col>\r\n                                    {answerVisible && (\r\n                                        <Col\r\n                                            span={6}\r\n                                            className='list-item-num list-item-c'\r\n                                        >\r\n                                            <Alert\r\n                                                message={formatAnswer}\r\n                                                type={\r\n                                                    errorAnalysis(\r\n                                                        input,\r\n                                                        formatAnswer\r\n                                                    )\r\n                                                        ? 'success'\r\n                                                        : 'error'\r\n                                                }\r\n                                                showIcon\r\n                                            />\r\n                                        </Col>\r\n                                    )}\r\n                                    {answerVisible && (\r\n                                        <Col\r\n                                            span={4}\r\n                                            className='list-item-num list-item-c'\r\n                                        >\r\n                                            {parseInt(consumeTime / 1000)}\r\n                                        </Col>\r\n                                    )}\r\n                                </Row>\r\n                            )\r\n                        })}\r\n                    </Form>\r\n                    <Button onClick={handleClickResult}>验证结果</Button>\r\n                    <div>\r\n                        通过: {acceptRate}/{data.length}\r\n                    </div>\r\n                    <div>用时: {time.end}s</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calc\r\n","import React, { useEffect } from 'react'\r\nimport './test.scss'\r\n\r\nconst Test = () => {\r\n    useEffect(() => {\r\n        function remLayoutFn() {\r\n            var oHtml = document.getElementsByTagName('html')[0]\r\n            var iWidth = document.documentElement.clientWidth\r\n            var defaultPercent = 100\r\n            iWidth = iWidth > 1080 ? 1080 : iWidth\r\n            var rootFontSize = iWidth / defaultPercent\r\n            oHtml.style.fontSize = rootFontSize + 'px'\r\n        }\r\n        remLayoutFn()\r\n        window.addEventListener('resize', remLayoutFn, false)\r\n\r\n        const box = document.querySelector('.box')\r\n        const wEl = document.querySelector('.width')\r\n        const hEl = document.querySelector('.height')\r\n        const { width, height } = box.getBoundingClientRect()\r\n        wEl.innerHTML = `宽：${width}`\r\n        hEl.innerHTML = `高：${height}`\r\n    }, [])\r\n    return (\r\n        <div className='wrap'>\r\n            <div className='box'></div>\r\n            <div className='width'>宽：</div>\r\n            <div className='height'>高：</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test\r\n","import React, { useState } from 'react'\r\nimport { Upload, message, Button, Divider } from 'antd'\r\nimport { InboxOutlined } from '@ant-design/icons'\r\nimport {\r\n    addCategoryQuestion,\r\n    addQuestion,\r\n    existQuestion,\r\n    getQuestionList,\r\n} from '../../service/question'\r\nimport { addExam, getExamList } from '../../service/exam'\r\nconst { Dragger } = Upload\r\n\r\nconst WrongQuestion = () => {\r\n    const [fileList, setFileList] = useState([])\r\n    const [uploading, setUploading] = useState(false)\r\n    const [dataSource, setDataSource] = useState([])\r\n    const props = {\r\n        name: 'file',\r\n        multiple: true,\r\n        action: '',\r\n        onChange(info) {\r\n            const { status } = info.file\r\n            window.file = info.file\r\n            if (status !== 'uploading') {\r\n                console.log(info.file, info.fileList)\r\n            }\r\n            if (status === 'done') {\r\n                message.success(`${info.file.name} file uploaded successfully.`)\r\n            } else if (status === 'error') {\r\n                message.error(`${info.file.name} file upload failed.`)\r\n            }\r\n        },\r\n        onDrop(e) {\r\n            console.log('Dropped files', e.dataTransfer.files)\r\n        },\r\n        beforeUpload: file => {\r\n            setFileList([...fileList, file])\r\n            const reader = new FileReader()\r\n\r\n            reader.onload = e => {\r\n                console.log('是个啥呀？', JSON.parse(e.target.result))\r\n                setDataSource(JSON.parse(e.target.result))\r\n            }\r\n            reader.readAsText(file)\r\n            return false\r\n        },\r\n    }\r\n\r\n    const filterRepeatQuestion = async question => {\r\n        let result = [1]\r\n        let qs = question\r\n        while (result.length > 0) {\r\n            const ids = qs.map(item => item.id)\r\n            result = await existQuestion(ids)\r\n            const set = new Set()\r\n            result.forEach(item => {\r\n                set.add(item.toJSON().id)\r\n            })\r\n            // 去重，上传不重复的\r\n            qs = qs\r\n                .filter(item => !set.has(item.id))\r\n                .map(item => {\r\n                    return {\r\n                        ...item,\r\n                        shortSource: null,\r\n                    }\r\n                })\r\n        }\r\n        return qs\r\n    }\r\n\r\n    const handleUpload = async () => {\r\n        const { category, question } = dataSource\r\n        const result = await filterRepeatQuestion(question)\r\n        if (result.length > 0) {\r\n            addCategoryQuestion({\r\n                content: category,\r\n            }).then(\r\n                res => {\r\n                    message.success('上传分类成功')\r\n                },\r\n                err => {\r\n                    message.error(err.error || '上传分类失败')\r\n                }\r\n            )\r\n\r\n            addQuestion(result).then(\r\n                res => {\r\n                    message.success('上传题目成功')\r\n                },\r\n                err => {\r\n                    message.error('上传题目失败')\r\n                }\r\n            )\r\n        } else {\r\n            message.error('没有新的数据')\r\n        }\r\n    }\r\n\r\n    // 上传训练题\r\n    const handleUploadTrain = async () => {\r\n        console.log('dataSource', dataSource)\r\n        const question = dataSource\r\n        const result = await getExamList()\r\n        const set = new Set()\r\n        result.forEach(item => {\r\n            set.add(item.toJSON().id)\r\n        })\r\n        // 去重，上传不重复的\r\n        const questionData = question\r\n            .filter(item => !set.has(item.id))\r\n            .map(item => {\r\n                return {\r\n                    ...item,\r\n                    shortSource: null,\r\n                }\r\n            })\r\n        message.success(`重复题目：${question.length - questionData.length}`)\r\n        if (questionData.length > 0) {\r\n            addExam(questionData).then(\r\n                res => {\r\n                    message.success('上传题目成功')\r\n                },\r\n                err => {\r\n                    message.error('上传题目失败')\r\n                }\r\n            )\r\n        } else {\r\n            message.error('没有新的数据')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='wrong'>\r\n            <div className='upload'>\r\n                <Dragger {...props}>\r\n                    <p className='ant-upload-drag-icon'>\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className='ant-upload-text'>\r\n                        Click or drag file to this area to upload\r\n                    </p>\r\n                    <p className='ant-upload-hint'>\r\n                        Support for a single or bulk upload. Strictly prohibit\r\n                        from uploading company data or other band files\r\n                    </p>\r\n                </Dragger>\r\n                <div className='upload-btn'>\r\n                    <Button\r\n                        type='primary'\r\n                        onClick={handleUpload}\r\n                        loading={uploading}\r\n                        style={{ marginTop: 16 }}\r\n                    >\r\n                        上传错题\r\n                    </Button>\r\n                    <Divider />\r\n                    <Button\r\n                        type='primary'\r\n                        onClick={handleUploadTrain}\r\n                        loading={uploading}\r\n                        style={{ marginTop: 16 }}\r\n                    >\r\n                        上传训练题\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WrongQuestion\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Upload, Tree, Button } from 'antd'\r\nimport { InboxOutlined } from '@ant-design/icons'\r\nimport {\r\n    addCategoryQuestion,\r\n    addQuestion,\r\n    getCategoryQuestion,\r\n    getQuestionList,\r\n} from '../../service/question'\r\nimport './XingCe.scss'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst XingCe = () => {\r\n    const [categoryList, setCategoryList] = useState([])\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        getCategoryQuestion().then(res => {\r\n            const data = res.toJSON().content\r\n            processCategoryList(data)\r\n            console.log('res', data)\r\n            setCategoryList(data)\r\n        })\r\n    }, [])\r\n\r\n    // 开始练习\r\n    const handleClickPractice = (questionIds, id) => {\r\n        history.push(`/xingce/${id}`)\r\n    }\r\n\r\n    const processCategoryList = data => {\r\n        // 处理数据\r\n        data.forEach(item => {\r\n            item.title = (\r\n                <div className='category-item'>\r\n                    <div className='name'>{item.name}</div>\r\n                    <div className='num'>{item.questionIds.length}题</div>\r\n                    <div className='practice'>\r\n                        <Button\r\n                            onClick={() =>\r\n                                handleClickPractice(item.questionIds, item.id)\r\n                            }\r\n                            shape='round'\r\n                        >\r\n                            开始练习\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            )\r\n            item.key = item.id\r\n            if (item.children) {\r\n                processCategoryList(item.children)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='xing-ce'>\r\n            hello, world\r\n            <div className='category'>\r\n                <Tree className='xing-ce-tree' treeData={categoryList} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default XingCe\r\n","// 收藏组件\r\nimport React from 'react'\r\nimport './CollectIcon.scss'\r\n\r\nconst CollectIcon = props => {\r\n    const { checked } = props\r\n    const url = checked\r\n        ? 'https://nodestatic.fbstatic.cn/weblts_spa_online/tiku/static/collected-btn.d4120fd14a7eda0e8e50.png'\r\n        : 'https://nodestatic.fbstatic.cn/weblts_spa_online/tiku/static/collect-btn.e0cca1095b2514b3e6c5.png'\r\n    const handleClick = () => {\r\n        props.onClick && props.onClick()\r\n    }\r\n    return (\r\n        <span onClick={handleClick} className='collect-icon'>\r\n            <img src={url} alt='' />\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default CollectIcon\r\n","import LC from './index'\r\n\r\nexport const getCollectList = questionIds => {\r\n    const query = new LC.Query('Collection')\r\n    // query.descending('createdAt')\r\n    query.limit(1000)\r\n    if (questionIds) {\r\n        query.containedIn('id', questionIds)\r\n    }\r\n    return query.find()\r\n}\r\n\r\nexport const addCollect = data => {\r\n    const list = []\r\n    data.forEach(item => {\r\n        const Question = LC.Object.extend('Collection')\r\n        const question = new Question()\r\n        Object.keys(item).forEach(key => {\r\n            question.set(key, item[key])\r\n        })\r\n        list.push(question)\r\n    })\r\n    return LC.Object.saveAll(list)\r\n}\r\n\r\n// delete\r\nexport const deleteCollect = objectId => {\r\n    const question = LC.Object.createWithoutData('Collection', objectId)\r\n    return question.destroy()\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { message, Modal, Skeleton } from 'antd'\r\nimport classNames from 'classnames'\r\nimport {\r\n    getCategoryQuestion,\r\n    getQuestionList,\r\n    updateQuestionNotes,\r\n} from '../../service/question'\r\nimport './XingCe.scss'\r\nimport { useParams } from 'react-router'\r\nimport Answer from './components/Answer'\r\nimport { getBookList, getExamList } from '../../service/exam'\r\nimport CollectIcon from './components/CollectIcon'\r\nimport { Editor } from '@tinymce/tinymce-react'\r\nimport {\r\n    addCollect,\r\n    deleteCollect,\r\n    getCollectList,\r\n} from '../../service/collect'\r\n\r\n/**\r\n */\r\nconst XingCeList = () => {\r\n    const editorRef = useRef(null)\r\n    const params = useParams()\r\n    const [activeNotes, setActiveNotes] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n    const [categoryList, setCategoryList] = useState([])\r\n    const [collectMap, setCollectMap] = useState({})\r\n    const [dataSource, setDataSource] = useState([])\r\n    useEffect(() => {\r\n        getCategoryQuestion().then(res => {\r\n            const data = res.toJSON().content\r\n            setCategoryList(data)\r\n        })\r\n\r\n        getCollect()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const getQuestionIds = (data, id, callback) => {\r\n            for (let i = 0; i < data.length; i++) {\r\n                const item = data[i]\r\n                if (item.id == id) {\r\n                    callback(item.questionIds)\r\n                    return\r\n                }\r\n                if (item.children) {\r\n                    getQuestionIds(item.children, id, callback)\r\n                }\r\n            }\r\n        }\r\n        const id = params.objectId\r\n        if (id.includes(',')) {\r\n            getQuestions()\r\n        } else {\r\n            if (categoryList.length > 0) {\r\n                let questionIds = ''\r\n                getQuestionIds(categoryList, id, res => {\r\n                    questionIds = res\r\n                })\r\n                if (questionIds) {\r\n                    getQuestionList(questionIds).then(res => {\r\n                        const data = res.map(item => item.toJSON())\r\n                        setDataSource(data)\r\n                    })\r\n                } else {\r\n                    message.error('题目不存在')\r\n                }\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    const getQuestions = () => {\r\n        const getAllData = async questionIds => {\r\n            const examData = await getExamList(questionIds)\r\n            const questionData = await getQuestionList(questionIds)\r\n            const bookData = await getBookList(questionIds)\r\n            const data = [\r\n                ...examData.map(item => item.toJSON()),\r\n                ...questionData.map(item => item.toJSON()),\r\n                ...bookData.map(item => item.toJSON()),\r\n            ]\r\n            const result = []\r\n            questionIds.forEach(qId => {\r\n                const question = data.find(item => item.id === qId)\r\n                if (question) {\r\n                    result.push(question)\r\n                }\r\n            })\r\n            return result\r\n        }\r\n        const id = params.objectId\r\n        const questionIds = id\r\n            .split(',')\r\n            .filter(item => item != '')\r\n            .map(item => parseInt(item))\r\n\r\n        setLoading(true)\r\n        getAllData(questionIds)\r\n            .then(res => {\r\n                setDataSource(res)\r\n                setLoading(false)\r\n            })\r\n            .catch(err => {\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    const getCollect = () => {\r\n        getCollectList().then(res => {\r\n            const data = res.map(item => item.toJSON())\r\n            const newMap = {}\r\n            data.forEach(item => {\r\n                newMap[item.id] = item.objectId\r\n            })\r\n            setCollectMap(newMap)\r\n        })\r\n    }\r\n\r\n    const handleSelectOption = (item, index) => {\r\n        const choice = item.correctAnswer.choice\r\n        const questionId = item.id\r\n        let status = ''\r\n        if (choice == index) {\r\n            status = 'correct'\r\n        } else {\r\n            status = 'wrong'\r\n        }\r\n        const newDataSource = dataSource.map(item => {\r\n            if (item.id === questionId) {\r\n                return {\r\n                    ...item,\r\n                    answerVisible: true,\r\n                    status,\r\n                    selectIndex: index,\r\n                }\r\n            } else {\r\n                return item\r\n            }\r\n        })\r\n        setDataSource(newDataSource)\r\n    }\r\n\r\n    const handleClose = item => {\r\n        const questionId = item.id\r\n        const newDataSource = dataSource.map(item => {\r\n            if (item.id === questionId) {\r\n                return {\r\n                    ...item,\r\n                    answerVisible: false,\r\n                    status: '',\r\n                    selectIndex: '',\r\n                }\r\n            } else {\r\n                return item\r\n            }\r\n        })\r\n        setDataSource(newDataSource)\r\n    }\r\n\r\n    const handleCollect = (item, checked) => {\r\n        if (checked) {\r\n            // 取消收藏\r\n            const objectId = collectMap[item.id]\r\n            console.log('objectId', objectId)\r\n            deleteCollect(objectId)\r\n                .then(() => {\r\n                    message.success('取消收藏')\r\n                    getCollect()\r\n                })\r\n                .catch(err => {\r\n                    message.error('取消失败')\r\n                })\r\n        } else {\r\n            // 点击收藏\r\n            addCollect([{ id: item.id }])\r\n                .then(() => {\r\n                    //\r\n                    message.success('收藏成功')\r\n                    getCollect()\r\n                })\r\n                .catch(err => {\r\n                    message.error('收藏失败')\r\n                })\r\n        }\r\n    }\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true)\r\n    }\r\n\r\n    const handleOk = () => {\r\n        const content = editorRef.current.getContent()\r\n        // 更新看看\r\n        console.log('activeNotes.objectId', activeNotes.id)\r\n        updateQuestionNotes(activeNotes.id, content)\r\n            .then(res => {\r\n                message.success('更新成功')\r\n                getQuestions()\r\n                setIsModalVisible(false)\r\n            })\r\n            .catch(err => {\r\n                message.success('更新失败')\r\n            })\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false)\r\n    }\r\n\r\n    const handleNotesChange = data => {\r\n        const { notes, objectId, id } = data\r\n        setActiveNotes({\r\n            id: objectId,\r\n            notes,\r\n        })\r\n        console.log('data', data)\r\n        setIsModalVisible(true)\r\n        editorRef.current.setContent(notes || '')\r\n    }\r\n    const getAnswer = (left, stringArr) => {\r\n        const answer = dataSource.map(\r\n            item => parseInt(item.correctAnswer.choice) + 1\r\n        )\r\n\r\n        let pos = 0\r\n        let count = 0\r\n        let wrong = []\r\n        let qIds = []\r\n        let arr = stringArr.split('').filter(item => item != ' ')\r\n        if (\r\n            arr.includes('A') ||\r\n            arr.includes('B') ||\r\n            arr.includes('C') ||\r\n            arr.includes('D')\r\n        ) {\r\n            arr = arr.map(item => item.charCodeAt() - 64)\r\n            console.log('arr', arr)\r\n        }\r\n        for (let i = left; i < arr.length + left; i++) {\r\n            const item = answer[i]\r\n            const p = arr[pos]\r\n            pos++\r\n            if (item == p) {\r\n                count++\r\n            } else {\r\n                wrong.push(i + 1)\r\n                qIds.push(dataSource[i].id)\r\n            }\r\n        }\r\n        console.log('正确率：', parseInt((count * 100) / arr.length))\r\n        console.log('错题：', wrong.join(', '))\r\n        console.log('题号：', qIds.join(', '))\r\n    }\r\n    window.getAnswer = getAnswer\r\n\r\n    return (\r\n        <div className='wrap'>\r\n            <h2>错题整理</h2>\r\n            <div className='wrap-print'>\r\n                {loading ? (\r\n                    <Skeleton />\r\n                ) : (\r\n                    <div className='list'>\r\n                        {dataSource.map((item, index) => {\r\n                            let layout = 'four'\r\n                            // 任一选项文字长度超过10，则选择两栏布局\r\n                            // 任一选项文字长度超过20，则选择一栏布局\r\n                            // 否则使用四栏布局\r\n                            const itemLength = []\r\n                            item.accessories[0].options.forEach(item => {\r\n                                itemLength.push(item.length)\r\n                            })\r\n                            const len = Math.max(...itemLength)\r\n                            if (len >= 20) {\r\n                                layout = 'one'\r\n                            } else if (len > 10) {\r\n                                layout = 'two'\r\n                            }\r\n                            const cls = classNames({\r\n                                question: true,\r\n                                [item.status]: item.status,\r\n                            })\r\n                            return (\r\n                                <div key={item.id} className='item'>\r\n                                    <div className={cls}>\r\n                                        <span>{index + 1}.</span>\r\n                                        <div className='content'>\r\n                                            <div className='title'>\r\n                                                <span\r\n                                                    dangerouslySetInnerHTML={{\r\n                                                        __html: item.content,\r\n                                                    }}\r\n                                                ></span>\r\n                                                {item.answerVisible && (\r\n                                                    <CollectIcon\r\n                                                        checked={\r\n                                                            collectMap[item.id]\r\n                                                        }\r\n                                                        onClick={() =>\r\n                                                            handleCollect(\r\n                                                                item,\r\n                                                                collectMap[\r\n                                                                    item.id\r\n                                                                ]\r\n                                                            )\r\n                                                        }\r\n                                                    />\r\n                                                )}\r\n                                            </div>\r\n\r\n                                            <div\r\n                                                className={`options ${layout}`}\r\n                                            >\r\n                                                {item.accessories[0] &&\r\n                                                    item.accessories[0].options.map(\r\n                                                        (option, pos) => {\r\n                                                            const mapIndexToLetter =\r\n                                                                [\r\n                                                                    'A',\r\n                                                                    'B',\r\n                                                                    'C',\r\n                                                                    'D',\r\n                                                                ]\r\n                                                            let status =\r\n                                                                pos ==\r\n                                                                    item.selectIndex &&\r\n                                                                item.status ==\r\n                                                                    'correct'\r\n                                                                    ? 'correct'\r\n                                                                    : 'wrong'\r\n                                                            const optionCls =\r\n                                                                classNames({\r\n                                                                    option: true,\r\n                                                                    [status]:\r\n                                                                        pos ===\r\n                                                                        item.selectIndex,\r\n                                                                })\r\n                                                            return (\r\n                                                                <div\r\n                                                                    key={pos}\r\n                                                                    onClick={() =>\r\n                                                                        handleSelectOption(\r\n                                                                            item,\r\n                                                                            pos\r\n                                                                        )\r\n                                                                    }\r\n                                                                    className={\r\n                                                                        optionCls\r\n                                                                    }\r\n                                                                >\r\n                                                                    <span className='num'>\r\n                                                                        {\r\n                                                                            mapIndexToLetter[\r\n                                                                                pos\r\n                                                                            ]\r\n                                                                        }\r\n                                                                        .\r\n                                                                    </span>\r\n                                                                    <span\r\n                                                                        dangerouslySetInnerHTML={{\r\n                                                                            __html: option,\r\n                                                                        }}\r\n                                                                    ></span>\r\n                                                                </div>\r\n                                                            )\r\n                                                        }\r\n                                                    )}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {item.answerVisible && (\r\n                                        <Answer\r\n                                            onChange={handleNotesChange}\r\n                                            onClose={() => handleClose(item)}\r\n                                            data={item}\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <Modal\r\n                forceRender={true}\r\n                width={1000}\r\n                title='编辑笔记'\r\n                visible={isModalVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n            >\r\n                <Editor\r\n                    className='notes-editor'\r\n                    onInit={(evt, editor) => {\r\n                        setLoading(false)\r\n                        editorRef.current = editor\r\n                    }}\r\n                    apiKey='24p0l3ih7zoyefn7sj47oxgrjz14zp69vuiyxo9tzk25oapj'\r\n                    init={{\r\n                        height: 500,\r\n                        menubar: false,\r\n                        plugins: [\r\n                            'advlist',\r\n                            'autolink',\r\n                            'lists',\r\n                            'link',\r\n                            'image',\r\n                            'charmap',\r\n                            'anchor',\r\n                            'searchreplace',\r\n                            'visualblocks',\r\n                            'code',\r\n                            'fullscreen',\r\n                            'insertdatetime',\r\n                            'media',\r\n                            'table',\r\n                            'preview',\r\n                            'help',\r\n                            'wordcount',\r\n                        ],\r\n                        toolbar:\r\n                            'undo redo | blocks | ' +\r\n                            'bold italic forecolor | alignleft aligncenter ' +\r\n                            'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                            'removeformat | help',\r\n                        content_style:\r\n                            'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\r\n                    }}\r\n                />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default XingCeList\r\n","import React, { useEffect, useState } from 'react'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport {\r\n    Button,\r\n    Cascader,\r\n    Divider,\r\n    Input,\r\n    message,\r\n    Modal,\r\n    Tree,\r\n    Form,\r\n    Skeleton,\r\n} from 'antd'\r\nimport {\r\n    addCustomWrongQuestionCategory,\r\n    getCustomWrongQuestionCategory,\r\n} from '../../../service/question'\r\nimport lodash from 'lodash'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst { TextArea } = Input\r\nconst { confirm } = Modal\r\n\r\n// 分类树\r\nconst CategoryTree = props => {\r\n    const history = useHistory()\r\n    const [form] = Form.useForm()\r\n    const [treeData, setTreeData] = useState([])\r\n    const [showData, setShowData] = useState([])\r\n    const [cascaderOptions, setCascaderOptions] = useState([])\r\n    const [inputValue, setInputValue] = useState()\r\n    const [deleteInputValue, setDeleteInputValue] = useState()\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n    const [addModalVisible, setAddModalVisible] = useState(false)\r\n    const [deleteModalVisible, setDeleteModalVisible] = useState(false)\r\n    const [checkedQuestionIds, setCheckedQuestionIds] = useState([])\r\n    /**\r\n     * 17:10 (33) 17:38\r\n     * 12212 13142 33412 12312 42214 43433 21321 33244\r\n     */\r\n    const onSelect = (selectedKeys, info) => {\r\n        const selectedKey = selectedKeys[selectedKeys.length - 1]\r\n        console.log('selected', selectedKey, info)\r\n        const qIds = []\r\n        info.checkedNodes.forEach(item => {\r\n            qIds.push(...item.questionIds)\r\n        })\r\n        setCheckedQuestionIds(qIds)\r\n        console.log('qIDs', qIds)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCustomCategory()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setInputValue(JSON.stringify(treeData, null, 4))\r\n\r\n        //\r\n        const getQuestionIdCount = treeNode => {\r\n            if (!treeNode) return 0\r\n            let count = 0\r\n            treeNode.forEach(item => {\r\n                count += item.questionIds.length\r\n                if (item.children) {\r\n                    count += getQuestionIdCount(item.children)\r\n                }\r\n            })\r\n            return count\r\n        }\r\n\r\n        const dfs = data => {\r\n            const result = []\r\n            for (let i = 0; i < data.length; i++) {\r\n                let obj = {}\r\n                const item = data[i]\r\n                const count =\r\n                    item.questionIds.length + getQuestionIdCount(item.children)\r\n                obj.title = (\r\n                    <div style={{ display: 'flex' }} className='tree-title'>\r\n                        <div className='name'>{item.title}</div>\r\n                        <div\r\n                            style={{\r\n                                marginLeft: '30px',\r\n                                fontSize: '12px',\r\n                                color: '#5f6368',\r\n                            }}\r\n                            className='num'\r\n                        >\r\n                            {`${count}题`}\r\n                        </div>\r\n                    </div>\r\n                )\r\n                obj.key = item.key\r\n                if (item.questionIds) {\r\n                    obj.questionIds = item.questionIds\r\n                }\r\n                if (item.children) {\r\n                    obj.children = dfs(item.children)\r\n                }\r\n                result.push(obj)\r\n            }\r\n            return result\r\n        }\r\n        const newShowData = dfs(treeData)\r\n        setShowData(newShowData)\r\n    }, [treeData])\r\n\r\n    const getCustomCategory = () => {\r\n        const getCascaderData = data => {\r\n            const result = []\r\n            for (let i = 0; i < data.length; i++) {\r\n                let obj = {}\r\n                const item = data[i]\r\n                obj.label = item.title\r\n                obj.value = item.key\r\n                if (item.children) {\r\n                    obj.children = getCascaderData(item.children)\r\n                }\r\n                result.push(obj)\r\n            }\r\n            return result\r\n        }\r\n        getCustomWrongQuestionCategory().then(res => {\r\n            const data = res.toJSON().content\r\n            setTreeData(data)\r\n            const result = getCascaderData(data)\r\n            console.log('caD', result)\r\n            setCascaderOptions(result)\r\n        })\r\n    }\r\n\r\n    const onCheck = (selectedKeys, info) => {\r\n        const qIds = []\r\n        info.checkedNodes.forEach(item => {\r\n            qIds.push(...item.questionIds)\r\n        })\r\n        setCheckedQuestionIds(qIds)\r\n    }\r\n\r\n    const handleOk = type => {\r\n        if (type === 'category') {\r\n            try {\r\n                const data = JSON.parse(inputValue)\r\n                addCustomWrongQuestionCategory({ content: data })\r\n                    .then(() => {\r\n                        setIsModalVisible(false)\r\n                        getCustomCategory()\r\n                        message.success('更新成功！')\r\n                    })\r\n                    .catch(() => {\r\n                        message.error('更新失败！')\r\n                    })\r\n            } catch (error) {\r\n                message.error('格式有误！')\r\n            }\r\n        } else if (type === 'question') {\r\n            submitQuestion()\r\n        } else if (type === 'delete') {\r\n            deleteQuestion()\r\n        }\r\n    }\r\n\r\n    const handleCancel = type => {\r\n        if (type === 'category') {\r\n            setIsModalVisible(false)\r\n        } else {\r\n            form.resetFields()\r\n            setAddModalVisible(false)\r\n        }\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleClickPractice = () => {\r\n        history.push(`/book/${checkedQuestionIds.toString()},`)\r\n    }\r\n\r\n    const handleClickCategory = () => {\r\n        setIsModalVisible(true)\r\n    }\r\n\r\n    const handleAddQuestion = () => {\r\n        setAddModalVisible(true)\r\n    }\r\n\r\n    const handleDeleteQuestion = () => {\r\n        setDeleteModalVisible(true)\r\n    }\r\n\r\n    const submitQuestion = () => {\r\n        console.log('form', form.getFieldsValue())\r\n        form.validateFields()\r\n            .then(res => {\r\n                const { question, category } = form.getFieldsValue()\r\n                const qIds = question.split(',')\r\n                // 取最后一位ID找\r\n                const id = category[category.length - 1]\r\n                const dfs = (data, objectId) => {\r\n                    const result = []\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        let obj = {}\r\n                        const item = data[i]\r\n                        obj.title = item.title\r\n                        obj.key = item.key\r\n                        if (item.questionIds) {\r\n                            obj.questionIds = item.questionIds\r\n                        }\r\n                        if (item.children) {\r\n                            obj.children = dfs(item.children, objectId)\r\n                        }\r\n                        if (item.key == objectId) {\r\n                            // 取交集\r\n                            const interArr = lodash.intersection(\r\n                                obj.questionIds,\r\n                                qIds\r\n                            )\r\n                            console.log(\r\n                                'obj.questionIds,',\r\n                                obj.questionIds,\r\n                                qIds\r\n                            )\r\n                            if (interArr.length > 0) {\r\n                                message.error(\r\n                                    `您添加的部分题目已存在， ${interArr.toString()}`\r\n                                )\r\n                            } else {\r\n                                // 将题目添加进去\r\n                                const newQuestionIds =\r\n                                    obj.questionIds.concat(qIds)\r\n                                obj.questionIds = newQuestionIds\r\n                            }\r\n                            console.log('添加题目所在的ITEM', item)\r\n                        }\r\n                        result.push(obj)\r\n                    }\r\n                    return result\r\n                }\r\n\r\n                const newData = dfs(treeData, id)\r\n                // 前后有变化才更新\r\n                if (!lodash.isEqual(newData, treeData)) {\r\n                    addCustomWrongQuestionCategory({ content: newData })\r\n                        .then(() => {\r\n                            setIsModalVisible(false)\r\n                            getCustomCategory()\r\n                            message.success(\r\n                                `添加成功！共添加${\r\n                                    qIds.length\r\n                                }道题，${qIds.toString()}`\r\n                            )\r\n                        })\r\n                        .catch(() => {\r\n                            message.error('添加失败！')\r\n                        })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('err', err)\r\n            })\r\n    }\r\n\r\n    const deleteQuestion = () => {\r\n        const deleteIds = deleteInputValue.split(',')\r\n        if (deleteIds.length <= 0) {\r\n            message.error('请输入正确格式')\r\n            return\r\n        }\r\n        const dfs = (data, deleteIds, arr) => {\r\n            const result = []\r\n            for (let i = 0; i < data.length; i++) {\r\n                let obj = {}\r\n                const item = data[i]\r\n                obj.title = item.title\r\n                obj.key = item.key\r\n                if (item.questionIds) {\r\n                    // 过滤掉数组中包含deleteIds的元素\r\n                    const newIds = lodash.without(\r\n                        item.questionIds,\r\n                        ...deleteIds\r\n                    )\r\n                    if (newIds.length !== item.questionIds.length) {\r\n                        // 求交集，看哪个元素被删除了\r\n                        const xorIds = lodash.xor(item.questionIds, newIds)\r\n                        // 求并集\r\n                        arr.push({\r\n                            title: obj.title,\r\n                            ids: xorIds,\r\n                        })\r\n                    }\r\n                    obj.questionIds = newIds\r\n                }\r\n                if (item.children) {\r\n                    obj.children = dfs(item.children, deleteIds, arr)\r\n                }\r\n                result.push(obj)\r\n            }\r\n            return result\r\n        }\r\n        // 删除信息\r\n        let arr = []\r\n        const newData = dfs(treeData, deleteIds, arr)\r\n        console.log('newData', newData)\r\n        console.log('treeData', treeData)\r\n        if (arr.length > 0) {\r\n            confirm({\r\n                title: '您确定要删除这些题目吗?',\r\n                icon: <ExclamationCircleOutlined />,\r\n                content: (\r\n                    <div>\r\n                        {arr.map((item, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    {item.title}: {item.ids.toString()}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                ),\r\n                onOk() {\r\n                    addCustomWrongQuestionCategory({ content: newData })\r\n                        .then(() => {\r\n                            setDeleteModalVisible(false)\r\n                            getCustomCategory()\r\n                            message.success(`删除成功！`)\r\n                        })\r\n                        .catch(() => {\r\n                            message.error('删除失败！')\r\n                        })\r\n                },\r\n                onCancel() {\r\n                    console.log('Cancel')\r\n                },\r\n            })\r\n        } else {\r\n            message.warn('没有找到该题！')\r\n        }\r\n    }\r\n\r\n    const onFinish = values => {\r\n        console.log('values', values)\r\n    }\r\n\r\n    const handleClickPreview = () => {\r\n        const { question } = form.getFieldsValue()\r\n        window.open(\r\n            `https://zmojm.github.io/build/index.html#/book/${question},`,\r\n            '',\r\n            'width=800,height=1000'\r\n        )\r\n    }\r\n\r\n    const handleDeletePreview = () => {\r\n        window.open(\r\n            `https://zmojm.github.io/build/index.html#/book/${deleteInputValue},`,\r\n            '',\r\n            'width=800,height=1000'\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='category-tree'>\r\n            {showData.length > 0 ? (\r\n                <Tree\r\n                    defaultExpandAll\r\n                    checkable\r\n                    onSelect={onSelect}\r\n                    onCheck={onCheck}\r\n                    treeData={showData}\r\n                />\r\n            ) : (\r\n                <Skeleton />\r\n            )}\r\n\r\n            <Divider />\r\n            <span>已勾选{checkedQuestionIds.length}题</span>\r\n            <Divider type='vertical' />\r\n            <Button onClick={handleClickPractice}>开始练习</Button>\r\n            <Divider />\r\n            <Button onClick={handleClickCategory}>更新分类</Button>\r\n            <Divider type='vertical' />\r\n            <Button onClick={handleAddQuestion}>添加错题</Button>\r\n            <Divider type='vertical' />\r\n            <Button danger onClick={handleDeleteQuestion}>\r\n                删除\r\n            </Button>\r\n\r\n            <Modal\r\n                width={800}\r\n                title='更新分类'\r\n                visible={isModalVisible}\r\n                onOk={() => handleOk('category')}\r\n                onCancel={() => handleCancel('category')}\r\n            >\r\n                <TextArea\r\n                    rows={20}\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </Modal>\r\n            <Modal\r\n                width={600}\r\n                title='添加错题'\r\n                visible={addModalVisible}\r\n                okText='提交'\r\n                okCancel='取消'\r\n                onOk={() => handleOk('question')}\r\n                onCancel={() => handleCancel('question')}\r\n            >\r\n                <Form\r\n                    form={form}\r\n                    name='basic'\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={onFinish}\r\n                    autoComplete='off'\r\n                >\r\n                    <Form.Item\r\n                        label='分类'\r\n                        name='category'\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '请选择分类',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Cascader\r\n                            options={cascaderOptions}\r\n                            placeholder='Please select'\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label='题目'\r\n                        name='question'\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '请输入题目',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button onClick={handleClickPreview}>预览</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <Modal\r\n                width={600}\r\n                title='删除错题'\r\n                visible={deleteModalVisible}\r\n                okText='提交'\r\n                okCancel='取消'\r\n                onOk={() => handleOk('delete')}\r\n                onCancel={() => setDeleteModalVisible(false)}\r\n            >\r\n                <Input\r\n                    value={deleteInputValue}\r\n                    onChange={e => setDeleteInputValue(e.target.value)}\r\n                />\r\n                <Divider />\r\n                <Button onClick={handleDeletePreview}>预览</Button>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryTree\r\n","// 考试模式\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Divider, message, Modal, Select } from 'antd'\r\nimport { getCategoryQuestion } from '../../service/question'\r\nimport './XingCe.scss'\r\nimport './Exam.scss'\r\nimport { useHistory } from 'react-router'\r\nimport { getExamList } from '../../service/exam'\r\nimport { getCollectList } from '../../service/collect'\r\nimport CategoryTree from './components/CategoryTree'\r\nconst { Option } = Select\r\n\r\nconst Exam = () => {\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n    const [dataSource, setDataSource] = useState([])\r\n    const [selectIndex, setSelectIndex] = useState(0)\r\n    const [pageList, setPageList] = useState([])\r\n    const [collectList, setCollectList] = useState([])\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        getExamList().then(res => {\r\n            const data = res.map(item => item.toJSON())\r\n            setDataSource(data)\r\n\r\n            const newPageList = []\r\n            for (let i = 0; i < data.length; i += 10) {\r\n                const item = data.slice(i, i + 10)\r\n                newPageList.push(item)\r\n            }\r\n            setPageList(newPageList)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getCollectList()\r\n            .then(res => {\r\n                const data = res.map(item => item.toJSON())\r\n                const ids = data.map(item => item.id)\r\n                setCollectList(ids)\r\n            })\r\n            .catch(err => {\r\n                message.error('获取数据失败')\r\n            })\r\n    }, [])\r\n\r\n    // 开始练习\r\n    const handleClickPractice = () => {\r\n        const ids = pageList[selectIndex].map(item => item.id)\r\n        console.log('ids', ids.toString())\r\n        history.push(`/book/${ids.toString()}`)\r\n    }\r\n\r\n    const copyText = text => {\r\n        var textarea = document.createElement('textarea')\r\n        document.body.appendChild(textarea)\r\n        // 隐藏此输入框\r\n        textarea.style.position = 'fixed'\r\n        textarea.style.clip = 'rect(0 0 0 0)'\r\n        textarea.style.top = '10px'\r\n        // 赋值\r\n        textarea.value = text\r\n        // 选中\r\n        textarea.select()\r\n        // 复制\r\n        document.execCommand('copy', true)\r\n        // 移除输入框\r\n        document.body.removeChild(textarea)\r\n    }\r\n\r\n    const handleCopy = dataSource => {\r\n        const data = dataSource || pageList[selectIndex]\r\n        let html = ''\r\n        data.forEach(item => {\r\n            // item.content是内容\r\n            // item.accessories[0].options是选项\r\n            // item.correctAnswer.choice是答案\r\n            const choice = item.correctAnswer.choice\r\n            let rightAnswer = ''\r\n            const option = item.accessories[0].options.map((item, index) => {\r\n                if (index == choice) {\r\n                    rightAnswer = `<strong>「${item}」</strong>`\r\n                }\r\n                return `<span>「${item}」</span>`\r\n            })\r\n            const qaItem = `\r\n                <div class=\"qa-item\">\r\n                    ${item.content}<input style=\"border: none; width: 300px; height: 35px; font-weight: bold;\" />\r\n                    <details>\r\n                        <summary>查看</summary>\r\n                        <div>${option}</div>\r\n                    </details>\r\n                    <details>\r\n                        <summary>正确</summary>\r\n                        ${rightAnswer}\r\n                    </details>\r\n                </div>\r\n                `\r\n            html += qaItem\r\n        })\r\n        const result = `<div style=\"height: 300px; overflow-y: scroll;\">${html}</div>`\r\n        // 复制成功\r\n        copyText(result)\r\n        message.success('已复制!')\r\n    }\r\n\r\n    const handleChange = index => {\r\n        setSelectIndex(index)\r\n    }\r\n\r\n    const handleCollect = () => {\r\n        history.push(`/xingce/${collectList.toString()}`)\r\n    }\r\n\r\n    const handleCollectCopy = () => {\r\n        getExamList(collectList).then(res => {\r\n            const data = res.map(item => item.toJSON())\r\n            handleCopy(data)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='exam'>\r\n            <div className='category'>\r\n                {/* <div className='read'>\r\n                    <h3>阅读概括能力</h3>\r\n                    <Tree className='xing-ce-tree' treeData={categoryList} />\r\n                    <Select style={{ width: 120 }} onChange={handleChange}>\r\n                        {pageList.map((item, index) => {\r\n                            return (\r\n                                <Option\r\n                                    key={index}\r\n                                    value={index}\r\n                                >{`套卷 ${index}`}</Option>\r\n                            )77\r\n                        })}\r\n                    </Select>\r\n                    <Divider type='vertical' />\r\n                    <Button onClick={handleClickPractice}>开始练习</Button>\r\n                    <Divider type='vertical' />\r\n                    <Button onClick={() => handleCopy()}>复制套题</Button>\r\n                    <Divider type='vertical' />\r\n                    <Button onClick={handleCollect}>收藏题练习</Button>\r\n                    <Divider type='vertical' />\r\n                    <Button onClick={handleCollectCopy}>收藏题复制</Button>\r\n                </div>\r\n                <Divider /> */}\r\n                <div className='wrong-question'>\r\n                    <h3>错题训练</h3>\r\n                    <CategoryTree />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Exam\r\n","// pdf版本\r\n\r\nimport { Alert, Button, Col, Input, Radio, Row, Form } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { formatAnswerNumber, getNumberFromLen } from '../../utils/math'\r\nimport './Calc.scss'\r\nimport './CalcPdf.scss'\r\n\r\n/**\r\n * {\r\n *    formula：'', // 算式\r\n *    formatAnswer: '', // 真实答案\r\n *    time: '', //耗时\r\n *    input: '', // inputValue用户输入的答案\r\n *    errorAnalysis:\r\n * }\r\n * ['A', 'B', 'A+B', 'A-b'], ['A', 'B', 'A*B'], ['A', 'B', 'A÷B']\r\n *\r\n */\r\n// type: 1加减法\r\n// type: 2乘法\r\n// type: 3除法\r\nconst getData = (count = 20) => {\r\n    // 除法\r\n    const divisionFn = () => {\r\n        const a = getNumberFromLen(5)\r\n        const b = getNumberFromLen(3)\r\n        return [a, b, formatAnswerNumber(a / b, 3)]\r\n    }\r\n\r\n    // 加减\r\n    const addAndSubFn = () => {\r\n        const a = getNumberFromLen(3)\r\n        const b = getNumberFromLen(3)\r\n        return [a, b, a + b, a - b]\r\n    }\r\n\r\n    // 2*1位乘法\r\n    const mulFn = () => {\r\n        const a = getNumberFromLen(2)\r\n        let b = getNumberFromLen(1)\r\n        while (b < 2) {\r\n            b = getNumberFromLen(1)\r\n        }\r\n        return [a, b, a * b]\r\n    }\r\n    // 加法\r\n    const mapTypeToFn = {\r\n        1: addAndSubFn,\r\n        2: mulFn,\r\n        3: divisionFn,\r\n    }\r\n    const arr = []\r\n    for (let i = 0; i < count; i++) {\r\n        let a = mapTypeToFn[1]()\r\n        let b = mapTypeToFn[2]()\r\n        let c = mapTypeToFn[3]()\r\n        arr.push([i + 1, ...a, ...b, ...c])\r\n    }\r\n    return arr\r\n}\r\n\r\nconst defaultColumn = [\r\n    {\r\n        type: 'span',\r\n        label: '',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'A',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'B',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'A+B',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'A-B',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'A',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'B',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'A*B',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'A',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'B',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'A÷B',\r\n        span: 2,\r\n    },\r\n]\r\n\r\nconst CalcPdf = () => {\r\n    const [column, setColumn] = useState(defaultColumn)\r\n    const [data, setData] = useState(() => getData())\r\n    const prefix = 'calc-wrap calc-pdf'\r\n\r\n    useEffect(() => {\r\n        document.title = '速算练习'\r\n        const newData = getData()\r\n\r\n        console.log('new', newData)\r\n        setData(newData)\r\n    }, [])\r\n\r\n    // 24133 44424 22443 43434\r\n    return (\r\n        <div className={prefix}>\r\n            <div className='test'>\r\n                <h3>速算技巧练习</h3>\r\n                <div className={`${prefix}-content`}>\r\n                    <div className='list'>\r\n                        <Row className='column list-item'>\r\n                            {column.map((item, index) => {\r\n                                return (\r\n                                    <div key={index} className='list-item-num'>\r\n                                        {item.label}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </Row>\r\n                        <div className='data'>\r\n                            {data.map((arr, index) => {\r\n                                console.log('arr', arr.length)\r\n                                return (\r\n                                    <Row\r\n                                        className='list-item'\r\n                                        key={`item-${index}`}\r\n                                    >\r\n                                        {arr.map((item, j) => {\r\n                                            // 隐藏答案行\r\n                                            const hides = [3, 4, 7, 10]\r\n                                            return (\r\n                                                <div\r\n                                                    className='list-item-num'\r\n                                                    key={j}\r\n                                                >\r\n                                                    {hides.includes(j)\r\n                                                        ? ''\r\n                                                        : item}\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </Row>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='test-answer'>\r\n                <h3>速算技巧答案</h3>\r\n                <div className={`${prefix}-content`}>\r\n                    <div className='list'>\r\n                        <Row className='column list-item'>\r\n                            {column.map((item, index) => {\r\n                                return (\r\n                                    <div key={index} className='list-item-num'>\r\n                                        {item.label}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </Row>\r\n                        <div className='data'>\r\n                            {data.map((arr, index) => {\r\n                                console.log('arr', arr.length)\r\n                                return (\r\n                                    <Row\r\n                                        className='list-item'\r\n                                        key={`item-${index}`}\r\n                                    >\r\n                                        {arr.map((item, j) => {\r\n                                            // 隐藏答案行\r\n                                            const hides = [3, 4, 7, 10]\r\n                                            return (\r\n                                                <div\r\n                                                    className={`list-item-num ${\r\n                                                        hides.includes(j)\r\n                                                            ? 'daan'\r\n                                                            : ''\r\n                                                    }`}\r\n                                                    key={j}\r\n                                                >\r\n                                                    {item}\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </Row>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalcPdf\r\n","import React, { useEffect, useState } from 'react'\r\nimport { HashRouter, Route, Switch, useParams } from 'react-router-dom'\r\nimport Header from '../feature/edit/Header/Header'\r\nimport Annotation from '../feature/edit/Annotation/Annotation'\r\nimport Comment from '../feature/edit/Comment/Comment'\r\nimport Highlighter from 'web-highlighter'\r\nimport Admin from '../feature/admin/Admin'\r\nimport ShenLun from '../feature/shenlun'\r\nimport Book from '../feature/book/Book'\r\nimport BookList from '../feature/book/BookList'\r\nimport Algorithm from '../feature/algorithm/Algorithm'\r\nimport Calc from '../feature/calc/Calc'\r\nimport Calc2 from '../feature/calc/Calc2'\r\nimport Test from './test'\r\nimport WrongQuestion from '../feature/wrongQuestion/WrongQuestion'\r\nimport './App.scss'\r\nimport XingCe from '../feature/xingce/XingCe'\r\nimport XingCeList from '../feature/xingce/XingCeList'\r\nimport Exam from '../feature/xingce/Exam'\r\nimport CalcPdf from '../feature/calc/CalcPdf'\r\n\r\nconst Edit = () => {\r\n    const params = useParams()\r\n    const [highlighter, setHighlighter] = useState(\r\n        new Highlighter({\r\n            exceptSelectors: ['.ant-list-item'],\r\n        })\r\n    )\r\n    useEffect(() => {\r\n        const h = new Highlighter({\r\n            exceptSelectors: ['.ant-list-item'],\r\n        })\r\n        setHighlighter(h)\r\n\r\n        return () => {\r\n            h.dispose()\r\n        }\r\n    }, [params])\r\n\r\n    return (\r\n        <div className='yryr-home'>\r\n            <Header />\r\n            <div className='main'>\r\n                <Annotation key={highlighter} highlighter={highlighter} />\r\n                <Comment key={highlighter} highlighter={highlighter} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst App = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Switch>\r\n                <Route exact path='/' component={Admin} />\r\n                <Route exact path='/admin' component={Admin} />\r\n                <Route exact path='/shenlun' component={ShenLun} />\r\n                <Route exact path='/edit/:objectId' component={Edit} />\r\n                {/* <Route exact path='/algorithm' component={Algorithm} /> */}\r\n                {/* <Route exact path='/calc' component={Calc} /> */}\r\n                <Route exact path='/calc' component={Calc2} />\r\n                <Route exact path='/calcPdf' component={CalcPdf} />\r\n                <Route exact path='/test' component={Test} />\r\n                <Route exact path='/book' component={Book} />\r\n                <Route exact path='/book/:objectId' component={BookList} />\r\n                <Route exact path='/question' component={WrongQuestion} />\r\n                {/* 这两个是打印模式 */}\r\n                <Route exact path='/XingCe' component={XingCe} />\r\n                <Route exact path='/XingCe/:objectId' component={XingCeList} />\r\n                {/* 考试模式，提高能力 */}\r\n                <Route exact path='/exam' component={Exam} />\r\n            </Switch>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport annotationReducer from '../feature/edit/Annotation/AnnotationSlice'\r\nimport headerReducer from '../feature/edit/Header/HeaderSlice'\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        annotation: annotationReducer,\r\n        header: headerReducer,\r\n    },\r\n})\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './app/App'\r\nimport { Provider } from 'react-redux'\r\nimport 'antd/dist/antd.css'\r\nimport './index.css'\r\nimport { store } from './store'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}