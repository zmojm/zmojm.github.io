{"version":3,"sources":["static/logo.svg","utils/index.js","feature/edit/Header/HeaderSlice.js","service/index.js","service/service.js","feature/edit/Header/EditCategoryModal.jsx","service/article.js","feature/edit/Header/StatisticsModal.jsx","feature/edit/Annotation/AnnotationSlice.js","feature/edit/Header/Header.jsx","feature/edit/Annotation/Annotation.jsx","feature/edit/Comment/Comment.jsx","feature/admin/ArticleTable/SearchForm.jsx","feature/admin/ArticleTable/ArticleTable.jsx","feature/edit/SideBar/AddModal.jsx","feature/admin/StatisticsModal.jsx","feature/admin/Admin.jsx","service/question.js","feature/book/Book.jsx","feature/xingce/components/Answer.jsx","service/exam.js","feature/xingce/components/CollectIcon.jsx","service/collect.js","feature/book/BookList.jsx","feature/algorithm/AdjacencyListGraph.js","feature/algorithm/Matrix.jsx","feature/algorithm/Algorithm.jsx","utils/math.js","feature/calc/Calc.jsx","feature/calc/Calc2.jsx","app/test.js","feature/wrongQuestion/WrongQuestion.jsx","feature/xingce/XingCe.jsx","feature/xingce/XingCeList.jsx","feature/xingce/components/CategoryTree.jsx","feature/xingce/Exam.jsx","app/App.js","store/index.js","index.js"],"names":["_path","_path2","_path3","_path4","_path5","_path6","_path7","_path8","_path9","_path10","_path11","_path12","_path13","_path14","_path15","_path16","_path17","_path18","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","title","titleId","props","t","className","viewBox","xmlns","width","height","ref","id","d","fill","ForwardRef","mapColorToHex","blue","indigo","purple","pink","red","orange","yellow","green","teal","cyan","presetColor","label","value","getDomByDataId","highlightId","span","document","querySelectorAll","addClass","el","classList","contains","add","setHightlightSpanEl","els","option","text","color","dataset","highlightIdExtra","spans","highlightSplitType","Header","createSlice","name","initialState","categoryList","reducers","createCategory","state","action","len","index","console","log","category","nanoid","type","push","changeCategory","payload","map","item","deleteCategory","filter","updateCategory","actions","LC","init","appId","appKey","serverURL","getConfigFromLeanCloud","objectId","query","Query","get","find","Option","Select","EditCategoryModal","visible","onOk","onCancel","useState","loading","setLoading","dispatch","useDispatch","useSelector","header","useEffect","then","res","list","handleChange","okText","cancelText","confirmLoading","data","config","createWithoutData","forEach","set","save","updateConfigToLeanCloud","message","success","window","location","reload","catch","error","layout","style","marginBottom","Item","onChange","marginTop","borderRadius","backgroundColor","e","placeholder","display","alignItems","MinusCircleOutlined","onClick","Modal","confirm","icon","ExclamationCircleOutlined","content","handleDelete","PlusOutlined","getArticleFromLeanCloud","descending","limit","updateArticleToLeanCloud","StatisticsModal","dataSource","setDataSource","annotationList","annotation","columns","dataIndex","render","obj","No","categoryId","count","categoryName","statisticsData","Annotation","isSave","initAnnotation","score","nationality","createAnnotation","mark","some","deleteAnnotation","updateSavaStatus","status","history","useHistory","params","useParams","isModalVisible","setIsModalVisible","isStatisticsVisible","setIsStatisticsVisible","cls","classNames","handleOk","useCallback","a","annotationCount","err","keyDownFn","event","keyCode","ctrlKey","preventDefault","addEventListener","removeEventListener","pathname","marginLeft","keyCodeList","bind","highlighter","contentRef","useRef","setContent","articleList","setArticleList","pager","setPager","article","articleObj","toJSON","con","str","createElement","innerHTML","textContent","replace","match","replaceAll","processText2","fromStore","start","end","findIndex","char","String","fromCharCode","handleClickBtn","parentElement","removeChild","clearHightLight","current","getCategoryConfigById","h","on","Highlighter","CREATE","sources","hs","startMeta","endMeta","HOVER","HOVER_OUT","removeClass","tagName","listener","returnValue","selection","getSelection","setOption","fromRange","getRangeAt","handleNavigate","url","URL","href","hash","dangerouslySetInnerHTML","__html","when","Comment","prefix","itemLayout","renderItem","annotationId","remove","onMouseEnter","onMouseLeave","SearchForm","Form","useForm","form","handleSelectChange","setFieldsValue","onFinish","values","autoComplete","allowClear","htmlType","mapKeyToText","BLCU","SYSU","mid","high","korea","britain","ArticleTable","onUpdate","searchList","setSearchList","record","size","handleEdit","handleUpdate","onConfirm","danger","destroy","formValues","newData","flag","bordered","pagination","showTotal","total","TextArea","Input","formItemLayout","labelCol","wrapperCol","AddModal","articleId","onFail","handleClose","submit","labelAlign","configs","extend","createArticle","rules","required","rows","Admin","isStaticVisible","setIsStaticVisible","setCategoryList","CSVData","setCSVData","CSVDataText","setCSVDataText","setArticleId","setCount","getArticle","getCategory","csv","anaphora","anno","words","createCsvData","csvText","join","createCsvDataText","filename","Date","now","getQuestionList","questionIds","containedIn","existQuestion","equalTo","addQuestion","question","saveAll","addCategoryQuestion","getCategoryQuestion","addCustomWrongQuestionCategory","XingCe","processCategoryList","slice","toString","shape","children","treeData","Answer","correctAnswer","solution","keypoints","questionMeta","mapIndexToLetter","onClose","correctRatio","toFixed","mostWrongAnswer","choice","getExamList","addExam","CollectIcon","checked","src","alt","getCollectList","XingCeList","includes","split","parseInt","getBookList","sort","b","totalCount","itemLength","accessories","options","Math","max","pos","selectIndex","optionCls","questionId","newDataSource","answerVisible","handleSelectOption","Vertex","sku","Set","AdjacencyListGraph","isDirected","vertices","adjList","Map","commoditySpecs","limitData","reduce","acc","cur","concat","vertex","addVertex","j","k","addEdge","random","skuId","vertexId","v","w","hasVertex","vId","wId","v1","getVertexById","v2","hasEdge","existVertices","s","vertexToString","neighbors","setList","has","vertexIdList","adj","getVertexIdList","arr","getSkuIntersection","result","every","loadDataSource","Matrix","Algorithm","getNumberFromLen","numberLength","num","pow","formatAnswerNumber","number","n","round","getData","answerObj","answer","formatAnswer","input","time","defaultColumn","Calc","column","setColumn","calcMethod","setCalcMethod","setAnswerVisible","acceptRate","setAcceptRate","setData","setTime","Group","newColumn","consumeTime","preItem","handleClickInput","handleChangeInput","onBlur","handleBlur","abs","showIcon","divisionFn","formula","errorAnalysis","divisionFn2","growthFn","addFn","subFn","mulFn","threeMulToOneFn","threeMulFn","fractionFn","mapTypeToFn","Test","remLayoutFn","oHtml","getElementsByTagName","iWidth","documentElement","clientWidth","rootFontSize","fontSize","box","querySelector","wEl","hEl","getBoundingClientRect","Dragger","Upload","WrongQuestion","fileList","setFileList","uploading","multiple","info","file","onDrop","dataTransfer","files","beforeUpload","reader","FileReader","onload","JSON","parse","readAsText","filterRepeatQuestion","qs","ids","shortSource","handleUpload","handleUploadTrain","questionData","InboxOutlined","collectMap","setCollectMap","getCollect","getQuestionIds","callback","newMap","handleCollect","deleteCollect","addCollect","CategoryTree","setTreeData","showData","setShowData","cascaderOptions","setCascaderOptions","inputValue","setInputValue","deleteInputValue","setDeleteInputValue","addModalVisible","setAddModalVisible","deleteModalVisible","setDeleteModalVisible","checkedQuestionIds","setCheckedQuestionIds","getCustomCategory","stringify","getQuestionIdCount","treeNode","newShowData","dfs","getCascaderData","submitQuestion","deleteQuestion","handleCancel","resetFields","getFieldsValue","validateFields","qIds","interArr","lodash","intersection","newQuestionIds","isEqual","deleteIds","newIds","without","xorIds","xor","warn","defaultExpandAll","checkable","onSelect","selectedKeys","selectedKey","checkedNodes","onCheck","okCancel","initialValues","remember","open","Exam","setSelectIndex","pageList","setPageList","collectList","setCollectList","newPageList","handleCopy","html","rightAnswer","qaItem","textarea","body","appendChild","position","clip","top","select","execCommand","copyText","Edit","exceptSelectors","setHighlighter","dispose","App","exact","path","component","Calc2","Book","BookList","store","configureStore","reducer","annotationReducer","headerReducer","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.90fbe5a2.chunk.js","sourcesContent":["var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    t: 1624887109928,\n    className: \"icon\",\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"p-id\": 3819,\n    width: 32,\n    height: 32,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M187.2 341.7L77.9 232.4c-45.8-45.8-45.8-120.8 0-166.6s120.8-45.8 166.6 0l109.3 109.3c45.8 45.8 45.8 120.8 0 166.6s-120.8 45.8-166.6 0zM838.8 341.7l109.3-109.3c45.8-45.8 45.8-120.8 0-166.6s-120.7-45.8-166.6 0L672.2 175.2c-45.8 45.8-45.8 120.8 0 166.6 45.8 45.7 120.8 45.7 166.6-0.1z\",\n    fill: \"\",\n    \"p-id\": 3820\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M743.9 905.4l-140.7 15.9c-59.9 6.8-120.4 6.8-180.3 0l-140.7-15.9c-151.6 0-268.3-159.9-247.5-310.1l15.9-115c29.4-213.9 212.2-373.2 428-373.2h68.7c215.9 0 398.6 159.3 428.2 373.1l15.9 115c20.8 150.3-95.9 310.2-247.5 310.2z\",\n    fill: \"#FCFCFC\",\n    \"p-id\": 3821\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M513 936.3c-30.5 0-61-1.7-91.3-5.1l-140.2-15.8c-35.3-0.1-69.7-8.4-102.3-24.6-30.8-15.4-58.6-37.2-82.6-64.7-56.2-64.6-83.2-151.3-72-232.1l15.9-115c14.7-106 67.1-202.9 147.6-273 80.5-70.2 183.7-108.8 290.5-108.8h68.7c106.8 0 210 38.6 290.5 108.8a442.92 442.92 0 0 1 147.6 272.9l15.9 115c11.2 80.8-15.8 167.5-72 232.1-24 27.6-51.8 49.4-82.6 64.7-32.6 16.3-67 24.6-102.3 24.6l-140.2 15.8c-30.2 3.5-60.7 5.2-91.2 5.2z m-34.4-819.2c-102 0-200.5 36.9-277.4 103.9-76.8 67-126.9 159.6-140.8 260.6l-15.9 115c-10.4 75.1 14.8 156 67.3 216.2 46.4 53.2 106.9 82.5 170.4 82.5h0.6l0.6 0.1 140.7 15.9c59.1 6.7 119 6.7 178.1 0l141.3-15.9h0.6c63.5 0 124-29.3 170.4-82.5 52.5-60.3 77.7-141.1 67.3-216.2l-15.9-115c-14-101-64-193.6-140.9-260.6-76.9-67-175.4-103.9-277.4-103.9h-69z\",\n    fill: \"#020202\",\n    \"p-id\": 3822\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M433.4 495.1c19.4 75.4-54.2 166.4-129.6 185.8S179.7 669 160.3 593.6s26-222.8 101.4-242.2S414 419.7 433.4 495.1z\",\n    fill: \"\",\n    \"p-id\": 3823\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M298.6 513.9m-79.3 0a79.3 79.3 0 1 0 158.6 0 79.3 79.3 0 1 0-158.6 0Z\",\n    fill: \"#FFFFFF\",\n    \"p-id\": 3824\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M298.6 513.9m-50.9 0a50.9 50.9 0 1 0 101.8 0 50.9 50.9 0 1 0-101.8 0Z\",\n    fill: \"\",\n    \"p-id\": 3825\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M315.2 500.6m-20.3 0a20.3 20.3 0 1 0 40.6 0 20.3 20.3 0 1 0-40.6 0Z\",\n    fill: \"#FFFFFF\",\n    \"p-id\": 3826\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M592.6 495.1c-19.4 75.4 54.2 166.4 129.6 185.8s124.1-11.9 143.5-87.3c19.4-75.4-26-222.8-101.4-242.2S612 419.7 592.6 495.1z\",\n    fill: \"\",\n    \"p-id\": 3827\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M727.4 513.9m-79.3 0a79.3 79.3 0 1 0 158.6 0 79.3 79.3 0 1 0-158.6 0Z\",\n    fill: \"#FFFFFF\",\n    \"p-id\": 3828\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M727.4 513.9m-50.9 0a50.9 50.9 0 1 0 101.8 0 50.9 50.9 0 1 0-101.8 0Z\",\n    fill: \"\",\n    \"p-id\": 3829\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M710.8 500.6m-20.3 0a20.3 20.3 0 1 0 40.6 0 20.3 20.3 0 1 0-40.6 0Z\",\n    fill: \"#FFFFFF\",\n    \"p-id\": 3830\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M466.3 695.3a46.7 34.5 0 1 0 93.4 0 46.7 34.5 0 1 0-93.4 0Z\",\n    fill: \"\",\n    \"p-id\": 3831\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M485.9 823.1c0 9.5-12.1 17.1-27.1 17.1-15 0-27.1-7.7-27.1-17.1\",\n    fill: \"#FCFCFC\",\n    \"p-id\": 3832\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M458.8 850.3c-20.8 0-37.1-11.9-37.1-27.1 0-5.5 4.5-10 10-10s10 4.5 10 10c0 2.2 6.5 7.1 17.1 7.1 10.6 0 17.1-5 17.1-7.1 0-5.5 4.5-10 10-10s10 4.5 10 10c0 15.1-16.3 27.1-37.1 27.1z\",\n    fill: \"\",\n    \"p-id\": 3833\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M594.3 823.1c0 9.5-12.1 17.1-27.1 17.1-15 0-27.1-7.7-27.1-17.1\",\n    fill: \"#FCFCFC\",\n    \"p-id\": 3834\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M567.2 850.3c-20.8 0-37.1-11.9-37.1-27.1 0-5.5 4.5-10 10-10s10 4.5 10 10c0 2.2 6.5 7.1 17.1 7.1s17.1-5 17.1-7.1c0-5.5 4.5-10 10-10s10 4.5 10 10c0 15.1-16.3 27.1-37.1 27.1z\",\n    fill: \"\",\n    \"p-id\": 3835\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M485.9 823.1c0-9.5 12.1-17.1 27.1-17.1 15 0 27.1 7.7 27.1 17.1\",\n    fill: \"#FCFCFC\",\n    \"p-id\": 3836\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M550.1 823.1h-20c0-2.2-6.5-7.1-17.1-7.1-10.6 0-17.1 5-17.1 7.1h-20c0-15.2 16.3-27.1 37.1-27.1s37.1 11.9 37.1 27.1z\",\n    fill: \"\",\n    \"p-id\": 3837\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.a88277f7.svg\";\nexport { ForwardRef as ReactComponent };","/**\r\n * 数据格式设计\r\n *\r\n *\r\n * [{\r\n *   code: '',\r\n *   nationality: '',\r\n *   sex: '',\r\n *   time: '',\r\n *   title: '', 1. 标题\r\n *   score: '', 2. 水平（中级和高级）\r\n *   certificate: '', 3. 体裁 4. 国籍 5. 文章内容 6. 来源 7. 自定义\r\n *   content: {\r\n *     info: '',\r\n *     txt: ''\r\n *   }\r\n *   formatContent: {\r\n *     info: '',\r\n *     txt: ''\r\n *   },\r\n *   annotation: {\r\n *     123:''\r\n *   }\r\n * }]\r\n */\r\n// var data = new FormData()\r\n// data.append('zwm', '199312123523100103')\r\n\r\n// const queryData = () => {}\r\n\r\n// const getContent = zwm => {\r\n//     fetch('http://hsk.blcu.edu.cn/Index/get_zwm_txt', {\r\n//         method: 'POST',\r\n//         body: `zwm=${zwm}`,\r\n//         headers: {\r\n//             Cookie: 'PHPSESSID=3t94eftd5s7n3n9a06euflqv6d; PHPSESSID_NS_Sig=oenCV6mfmnop-1Pu; VGOTCN_OnLineCount=U2',\r\n//             'User-Agent':\r\n//                 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.101 Safari/537.36',\r\n//             'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\r\n//         },\r\n//     })\r\n//         .then(response => response.json())\r\n//         .then(json => {\r\n//             console.log('json')\r\n//         })\r\n//         .catch(err => console.log('Request Failed', err))\r\n// }\r\n\r\n// // 替换文本\r\n// const main = () => {}\r\n\r\n// '{CP做为[C]清官来[F來]讲[C]，法律应该[F該]是无情的。P}'.replace(\r\n//     /\\{CP(.*?)P\\}/g,\r\n//     '$1'\r\n// )\r\n// // \\{CP(.*?)P\\}\r\n// var str = ''\r\n// str\r\n//     .replace(/\\[.*?\\]/g, '')\r\n//     // 忽略CP标注\r\n//     .replace(/\\{CP(.*?)P\\}/g, '$1')\r\n//     .replace(/\\{CQ(.*?)Q\\}/g, '$1')\r\n//     .replace(/\\{.*?\\}/g, '')`\r\n// 199508香港.0000705436341504\r\n//   “安乐死”是一件[C]不平凡的事情。从不同的角度看这[F這]个问题会有不[C]同的见解和结论。争论的主要焦点在于如何处理好法律与[C]人之常情{CC人事常情}{CQ的}关系。\r\n//     根据严格的法律，我相信法院判的对。既然故意杀人，就有罪。{CP做为[C]清官来[F來]讲[C]，法律应该[F該]是无情的。P}法官会认[C]为如果法律随[F隨]时变动，可妥[C]协的话[F話]，一个国家如何用{CJ+sy执行}法制来[F來]治[B制]理{CJ+by国家}呢？\r\n//     {CP可是不幸的是世界上的千变万[C]化，另外人民的人情关系，宗[B崇]教信仰及风俗习惯都具有悠[B攸]久的历史。P}我们[F們]的法律制度不仅不可能提供足够[F夠]的条例[C]来[F來]概括人们[F們]生活中多种多样{CJ+dy发生}的事情，另外在很多方面[L]将与人们[F們]的风俗习惯，崇教信仰发生冲突。\r\n//     {CP因此虽然从法律的观[C]点{CQ来看}似乎[B呼]法院的判决是{CD有}符合法律的，可是根据人情的道理，由于他的杀人目[C]的是好意，即为了使他的妻子不再痛苦，法院的判决，说[F說]他故意杀人罪是没有道理{CJsd}[BQ。]P}\r\n//     从以上的两[F兩]个[F個]不同观[C]点{CQ来看}，我觉[C]得评[F評]论[C]“安乐死”事件不能一边倒[C]。我们[F們]不能简单的说[F說]丈夫有罪或无罪，因为我[C]们[F們]既[B即]要讲[C]法律也要讲[C]人情。{CP我觉[C]得最好的方法是调[F調]查当地人们[F們]的意见[F見]，慎重考虑是否在人情的分上，我们[F們]是否应该[F該]这[F這]件做一个明智的决定，即不削[B消]弱法律的作用，又可以照[C]顾[C]人情的道理。P}\r\n//     另外，我[C]们还可以提出，根据“安乐死”事件，修正或更改我们[F們]的法律条例[C]，为以后发生的类似事件提供既{CC又}符合法律又{CC及}符合人情的解[C]决方法。\r\n// `\r\n\r\nexport const mapColorToHex = {\r\n    blue: '#0d6efd',\r\n    indigo: '#6610f2',\r\n    purple: '#6f42c1',\r\n    pink: '#d63384',\r\n    red: '#dc3545',\r\n    orange: '#fd7e14',\r\n    yellow: '#ffc107',\r\n    green: '#198754',\r\n    teal: '#20c997',\r\n    cyan: '#0dcaf0',\r\n}\r\n\r\nexport const presetColor = [\r\n    {\r\n        key: 'blue',\r\n        label: '蓝色',\r\n        value: '#0d6efd',\r\n    },\r\n    {\r\n        key: 'indigo',\r\n        label: '靛蓝色',\r\n        value: '#6610f2',\r\n    },\r\n    {\r\n        key: 'purple',\r\n        label: '紫色',\r\n        value: '#6f42c1',\r\n    },\r\n    {\r\n        key: 'pink',\r\n        label: '粉色',\r\n        value: '#d63384',\r\n    },\r\n    {\r\n        key: 'red',\r\n        label: '红色',\r\n        value: '#dc3545',\r\n    },\r\n    {\r\n        key: 'orange',\r\n        label: '橙色',\r\n        value: '#fd7e14',\r\n    },\r\n    {\r\n        key: 'yellow',\r\n        label: '黄色',\r\n        value: '#ffc107',\r\n    },\r\n    {\r\n        key: 'green',\r\n        label: '绿色',\r\n        value: '#198754',\r\n    },\r\n    {\r\n        key: 'teal',\r\n        label: '蓝绿色',\r\n        value: '#20c997',\r\n    },\r\n    {\r\n        key: 'cyan',\r\n        label: '青色',\r\n        value: '#0dcaf0',\r\n    },\r\n]\r\n\r\n// 通过属性选择器，获取对应的\r\nexport const getDomByDataId = highlightId => {\r\n    let span = document.querySelectorAll(\r\n        `span[data-highlight-id=\"${highlightId}\"]`\r\n    )\r\n    if (span.length <= 0)\r\n        span = document.querySelectorAll(\r\n            `span[data-highlight-id-extra=\"${highlightId}\"]`\r\n        )\r\n    return span\r\n}\r\n\r\n// 清除高亮区域下所有的i标签\r\nexport const clearHightLight = el => {\r\n    const list = el.querySelectorAll('i')\r\n    for (let i = 0; i < list.length; i++) {\r\n        const parentElement = list[i].parentElement\r\n        parentElement.removeChild(list[i])\r\n    }\r\n}\r\n\r\nexport const addClass = (el, className) => {\r\n    if (!el.classList.contains(className)) {\r\n        el.classList.add(className)\r\n    }\r\n}\r\n\r\n// 对高亮的span元素进行设置\r\nexport const setHightlightSpanEl = (els, option) => {\r\n    const { text, color } = option\r\n    for (let i = 0; i < els.length; i++) {\r\n        let el = els[i]\r\n        addClass(el, `color-${color}`)\r\n        let highlightId = el.dataset.highlightIdExtra || el.dataset.highlightId\r\n        const spans = getDomByDataId(highlightId)\r\n        if (el === spans[0]) {\r\n            if (!el.dataset.text || el.dataset.text === 'null') {\r\n                // console.log('el被设置为', text, highlightId)\r\n                el.dataset.text = text\r\n            }\r\n        } else {\r\n            // console.log('el被设置为', null, highlightId)\r\n            el.dataset.text = 'null'\r\n            if (el.dataset.highlightSplitType === 'tail') {\r\n                if (spans[0].dataset.text === 'null') {\r\n                    spans[0].dataset.text = text\r\n                }\r\n            }\r\n        }\r\n        // 再添加新的\r\n    }\r\n}\r\n","import { createSlice, nanoid } from '@reduxjs/toolkit'\r\nimport { presetColor } from '../../../utils'\r\n// 预设的颜色\r\n\r\nconst initialState = {\r\n    categoryList: [\r\n        // {\r\n        //     id: '', // 唯一id\r\n        //     text: '', // 文案\r\n        //     color: '', // 颜色\r\n        //     type: '', // 标注类型 accpet | wrong\r\n        // },\r\n    ],\r\n}\r\n\r\nexport const Header = createSlice({\r\n    name: 'header',\r\n    initialState,\r\n    reducers: {\r\n        createCategory: (state, action) => {\r\n            const len = state.categoryList.length\r\n            const index =\r\n                len < presetColor.length ? len : presetColor.length - 1\r\n            console.log(\r\n                'presetColor[index].key',\r\n                presetColor[index],\r\n                presetColor[index].key\r\n            )\r\n            const category = {\r\n                id: nanoid(),\r\n                text: '',\r\n                color: presetColor[index].key,\r\n                type: 'accept',\r\n            }\r\n            state.categoryList.push(category)\r\n        },\r\n        changeCategory: (state, action) => {\r\n            const { id, name, value } = action.payload\r\n            console.log('action.payload', action.payload)\r\n            state.categoryList = state.categoryList.map(item => {\r\n                if (id === item.id) {\r\n                    return {\r\n                        ...item,\r\n                        [name]: value,\r\n                    }\r\n                } else {\r\n                    return item\r\n                }\r\n            })\r\n        },\r\n        deleteCategory: (state, action) => {\r\n            const id = action.payload\r\n            state.categoryList = state.categoryList.filter(\r\n                item => item.id !== id\r\n            )\r\n        },\r\n        updateCategory: (state, action) => {\r\n            state.categoryList = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    createCategory,\r\n    changeCategory,\r\n    updateCategory,\r\n    deleteCategory,\r\n} = Header.actions\r\n\r\nexport default Header.reducer\r\n","import LC from 'leancloud-storage'\r\n\r\n// leanCloud 初始化\r\nLC.init({\r\n    appId: 'zhG78X78KsJ4MuyLquDrtexj-gzGzoHsz',\r\n    appKey: 'QhcOlKH32P32CCaEUbzJJWbo',\r\n    serverURL: 'https://zhg78x78.lc-cn-n1-shared.com',\r\n})\r\n\r\n// 封装增删改查的函数\r\n\r\nclass Util {\r\n    // get查询\r\n    get(options) {\r\n        const { tableName, objectId } = options\r\n        const query = new LC.Query(tableName)\r\n        if (objectId) return query.get(objectId)\r\n        else {\r\n            query.limit(1000)\r\n            return query.find()\r\n        }\r\n    }\r\n}\r\n\r\nexport default LC\r\n","// 服务提供.\r\nimport LC from './index'\r\n\r\n// 登录接口\r\nexport const Login = (username, password) => {\r\n    return LC.User.logIn(username, password)\r\n}\r\n\r\n// 新增配置到leanCloud\r\nexport const addConfigToLeanCloud = data => {\r\n    const Configs = LC.Object.extend('Configs')\r\n    const configs = new Configs()\r\n    Object.keys(data).forEach(key => {\r\n        configs.set(key, data[key])\r\n    })\r\n    return configs.save()\r\n}\r\n\r\n// 从leanCloud获取数据\r\nexport const getConfigFromLeanCloud = objectId => {\r\n    const query = new LC.Query('Configs')\r\n    if (objectId) return query.get(objectId)\r\n    else return query.find()\r\n}\r\n\r\n// update\r\nexport const updateConfigToLeanCloud = (objectId, data) => {\r\n    const config = LC.Object.createWithoutData('Configs', objectId)\r\n    Object.keys(data).forEach(key => {\r\n        config.set(key, data[key])\r\n    })\r\n    return config.save()\r\n}\r\n\r\n// delete\r\nexport const deleteConfigToLeanCloud = objectId => {\r\n    const todo = LC.Object.createWithoutData('Configs', objectId)\r\n    return todo.destroy()\r\n}\r\n\r\n// test\r\nexport const testConfigFromLeanCloud = () => {\r\n    const query = new LC.Query('Configs')\r\n    query.find().then(configs => {\r\n        console.log('configs', configs)\r\n    })\r\n}\r\n\r\nexport const queryListFromLeanCloud = data => {\r\n    const query = new LC.Query('Configs')\r\n    Object.keys(data).forEach(key => {\r\n        data[key] && query.equalTo(key, data[key])\r\n    })\r\n    return query.find()\r\n}\r\n\r\n// export const updateConfig = createAsyncThunk(\r\n//     'category/updateConfig',\r\n//     async (option, { getState}) => {\r\n\r\n//     }\r\n// )\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, Modal, Input, Row, Col, Select, message } from 'antd'\r\nimport {\r\n    MinusCircleOutlined,\r\n    PlusOutlined,\r\n    ExclamationCircleOutlined,\r\n} from '@ant-design/icons'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    changeCategory,\r\n    createCategory,\r\n    updateCategory,\r\n    deleteCategory,\r\n} from './HeaderSlice'\r\nimport { mapColorToHex, presetColor } from '../../../utils'\r\nimport { useEffect } from 'react'\r\nimport {\r\n    getConfigFromLeanCloud,\r\n    updateConfigToLeanCloud,\r\n} from '../../../service/service'\r\nimport './Header.scss'\r\n\r\nconst { Option } = Select\r\nconst objectId = '610291721de21d3e072c5432'\r\nconst EditCategoryModal = props => {\r\n    const { visible, onOk, onCancel } = props\r\n    const [loading, setLoading] = useState(false)\r\n    const dispatch = useDispatch()\r\n    //\r\n    const categoryList = useSelector(state => state.header.categoryList)\r\n    const header = useSelector(state => state.header)\r\n    const handleEdit = () => {\r\n        setLoading(true)\r\n        updateConfigToLeanCloud(objectId, {\r\n            categoryList: categoryList,\r\n        })\r\n            .then(res => {\r\n                setLoading(false)\r\n                message.success('上传成功')\r\n                window.location.reload()\r\n                onOk && onOk()\r\n            })\r\n            .catch(() => {\r\n                setLoading(false)\r\n                message.error('上传失败')\r\n            })\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        onCancel && onCancel()\r\n    }\r\n\r\n    useEffect(() => {\r\n        getConfigFromLeanCloud(objectId).then(res => {\r\n            const list = res.get('categoryList')\r\n            // 更新到redux中\r\n            dispatch(updateCategory(list))\r\n        })\r\n    }, [])\r\n\r\n    const handleAdd = () => {\r\n        dispatch(createCategory())\r\n    }\r\n\r\n    const handleChange = ({ id, value, name }) => {\r\n        dispatch(\r\n            changeCategory({\r\n                id,\r\n                value,\r\n                name,\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleDelete = id => {\r\n        Modal.confirm({\r\n            title: '删除',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: '删除该标注后，曾经使用过该标注的数据无法正确显示',\r\n            okText: '确认',\r\n            cancelText: '取消',\r\n            onCancel: () => {\r\n                console.log('取消')\r\n            },\r\n            onOk: () => {\r\n                dispatch(deleteCategory(id))\r\n                console.log('删除', id)\r\n            },\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title='编辑配置'\r\n            okText='确定'\r\n            cancelText='取消'\r\n            confirmLoading={loading}\r\n            visible={visible}\r\n            onOk={handleEdit}\r\n            width={800}\r\n            onCancel={handleCancel}\r\n        >\r\n            <Form layout={'inline'}>\r\n                {categoryList.map((item, index) => {\r\n                    const { id, text, color, type } = item\r\n                    return (\r\n                        <Row style={{ marginBottom: 30 }} key={id}>\r\n                            <Col>\r\n                                <Form.Item label='标注颜色'>\r\n                                    <Select\r\n                                        value={color}\r\n                                        style={{ width: 120 }}\r\n                                        onChange={value =>\r\n                                            handleChange({\r\n                                                id,\r\n                                                value,\r\n                                                name: 'color',\r\n                                            })\r\n                                        }\r\n                                    >\r\n                                        {presetColor.map((item, index) => {\r\n                                            const { key, label } = item\r\n                                            return (\r\n                                                <Option key={index} value={key}>\r\n                                                    {label}\r\n                                                </Option>\r\n                                            )\r\n                                        })}\r\n                                    </Select>\r\n                                    <div\r\n                                        style={{\r\n                                            marginTop: 5,\r\n                                            borderRadius: 3,\r\n                                            height: 20,\r\n                                            backgroundColor:\r\n                                                mapColorToHex[color],\r\n                                        }}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Item label='标注文案'>\r\n                                    <Input\r\n                                        value={text}\r\n                                        onChange={e =>\r\n                                            handleChange({\r\n                                                id,\r\n                                                value: e.target.value,\r\n                                                name: 'text',\r\n                                            })\r\n                                        }\r\n                                        placeholder='请输入标注的文案'\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Item label='批注类型'>\r\n                                    <Select\r\n                                        value={type}\r\n                                        style={{ width: 120 }}\r\n                                        onChange={value =>\r\n                                            handleChange({\r\n                                                id,\r\n                                                value,\r\n                                                name: 'type',\r\n                                            })\r\n                                        }\r\n                                    >\r\n                                        <Option value='accept'>正确类型</Option>\r\n                                        <Option value='wrong'>错误类型</Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <div\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                }}\r\n                                className='delete'\r\n                            >\r\n                                <MinusCircleOutlined\r\n                                    onClick={() => handleDelete(item.id)}\r\n                                />\r\n                            </div>\r\n                        </Row>\r\n                    )\r\n                })}\r\n                <Button\r\n                    type='dashed'\r\n                    onClick={() => handleAdd()}\r\n                    style={{ marginTop: 30 }}\r\n                    icon={<PlusOutlined />}\r\n                >\r\n                    添加标注\r\n                </Button>\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditCategoryModal\r\n","import LC from './index'\r\n\r\n/**\r\n * 添加文章\r\n * @param {*} data\r\n * @returns\r\n */\r\nexport const createArticle = data => {\r\n    // 文章表里添加文章相关数据\r\n    const Configs = LC.Object.extend('Article')\r\n    const configs = new Configs()\r\n    Object.keys(data).forEach(key => {\r\n        configs.set(key, data[key])\r\n    })\r\n    return configs.save()\r\n}\r\n\r\n/**\r\n * 添加文章内容\r\n * @param {*} data\r\n * @returns\r\n */\r\n// export const createArticle = data => {\r\n//     const Configs = LC.Object.extend('Article')\r\n//     const configs = new Configs()\r\n//     Object.keys(data).forEach(key => {\r\n//         configs.set(key, data[key])\r\n//     })\r\n//     return configs.save()\r\n// }\r\n\r\n// 从leanCloud获取数据\r\nexport const getArticleFromLeanCloud = objectId => {\r\n    const query = new LC.Query('Article')\r\n    query.descending('createdAt')\r\n    if (objectId) return query.get(objectId)\r\n    else {\r\n        query.limit(500)\r\n        return query.find()\r\n    }\r\n}\r\n\r\n// update\r\nexport const updateArticleToLeanCloud = (objectId, data) => {\r\n    const config = LC.Object.createWithoutData('Article', objectId)\r\n    Object.keys(data).forEach(key => {\r\n        config.set(key, data[key])\r\n    })\r\n    return config.save()\r\n}\r\n\r\n// delete\r\nexport const deleteArticleToLeanCloud = objectId => {\r\n    const todo = LC.Object.createWithoutData('Article', objectId)\r\n    return todo.destroy()\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Form, Modal, Table, Select, message } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './Header.scss'\r\n\r\nconst { Option } = Select\r\nconst objectId = '610291721de21d3e072c5432'\r\nconst StatisticsModal = props => {\r\n    const { visible, onOk, onCancel } = props\r\n    const [loading, setLoading] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const [dataSource, setDataSource] = useState([])\r\n    //\r\n    const config = useSelector(state => state.annotation.config)\r\n    const annotationList = useSelector(state => state.annotation.annotationList)\r\n    const categoryList = useSelector(state => state.header.categoryList)\r\n\r\n    const handleEdit = () => {\r\n        onCancel && onCancel()\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        console.log('？？？调用一下啊')\r\n        onCancel && onCancel()\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'No.',\r\n            dataIndex: 'No',\r\n            key: 'No',\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Count',\r\n            dataIndex: 'count',\r\n            key: 'count',\r\n        },\r\n        {\r\n            title: 'Text',\r\n            dataIndex: 'text',\r\n            key: 'text',\r\n            render: text => (\r\n                <div>\r\n                    {text.map((item, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                {index + 1}. {item}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            ),\r\n        },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        if (visible && annotationList && annotationList.length > 0) {\r\n            const obj = {}\r\n            let No = 0\r\n            annotationList.forEach((item, index) => {\r\n                const { categoryId, text } = item\r\n                if (obj[categoryId]) {\r\n                    obj[categoryId].count = obj[categoryId].count + 1\r\n                    obj[categoryId].text.push(text)\r\n                } else {\r\n                    const config = categoryList.find(i => i.id === categoryId)\r\n                    const categoryName = config.text\r\n                    obj[categoryId] = {\r\n                        key: No,\r\n                        No: No++,\r\n                        name: categoryName,\r\n                        text: [text],\r\n                        count: 1,\r\n                    }\r\n                }\r\n            })\r\n            const statisticsData = Object.keys(obj).map(key => {\r\n                const item = obj[key]\r\n                return item\r\n            })\r\n            setDataSource(statisticsData)\r\n        }\r\n    }, [annotationList, visible, categoryList])\r\n\r\n    return (\r\n        <Modal\r\n            title='统计分析'\r\n            okText='确定'\r\n            cancelText='取消'\r\n            confirmLoading={loading}\r\n            visible={visible}\r\n            onOk={handleEdit}\r\n            width={800}\r\n            onCancel={handleCancel}\r\n        >\r\n            <Table dataSource={dataSource} columns={columns} />;\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default StatisticsModal\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    annotationList: [], // {id, text, }\r\n    config: {}, // 文章的配置信息, 等级，来源，国籍\r\n    isSave: false, // 是否保存\r\n}\r\n\r\nexport const Annotation = createSlice({\r\n    name: 'annotation',\r\n    initialState,\r\n    reducers: {\r\n        initAnnotation: (state, action) => {\r\n            const obj = action.payload\r\n            const { annotation, score, nationality, source } = obj\r\n            state.annotationList = annotation || []\r\n            state.config = {\r\n                score,\r\n                nationality,\r\n                source,\r\n            }\r\n        },\r\n        createAnnotation: (state, action) => {\r\n            const mark = action.payload\r\n            // 如果mark已经存在在annotationList中，则不被添加\r\n            const repeat = state.annotationList.some(\r\n                item => item.id === mark.id\r\n            )\r\n            if (!repeat) {\r\n                state.annotationList.push(mark)\r\n            }\r\n        },\r\n        deleteAnnotation: (state, action) => {\r\n            const id = action.payload\r\n            state.annotationList = state.annotationList.filter(\r\n                item => item.id !== id\r\n            )\r\n        },\r\n        updateSavaStatus: (state, action) => {\r\n            const status = action.payload\r\n            state.isSave = status\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    initAnnotation,\r\n    createAnnotation,\r\n    deleteAnnotation,\r\n    updateSavaStatus,\r\n} = Annotation.actions\r\n\r\nexport default Annotation.reducer\r\n","import React, { useCallback, useEffect } from 'react'\r\nimport classNames from 'classnames'\r\nimport { ReactComponent as Logo } from '../../../static/logo.svg'\r\nimport { Button, message } from 'antd'\r\nimport './Header.scss'\r\nimport { useState } from 'react'\r\nimport EditCategoryModal from './EditCategoryModal'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { updateArticleToLeanCloud } from '../../../service/article'\r\nimport StatisticsModal from './StatisticsModal'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateSavaStatus } from '../Annotation/AnnotationSlice'\r\n\r\nconst Header = props => {\r\n    const { className, type = 'edit' } = props\r\n    const history = useHistory()\r\n    const params = useParams()\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false)\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n    const [isStatisticsVisible, setIsStatisticsVisible] = useState(false)\r\n    const annotationList = useSelector(state => state.annotation.annotationList)\r\n    const prefix = 'zz-header'\r\n    const cls = classNames({\r\n        [prefix]: true,\r\n        [className]: className,\r\n    })\r\n    const handleOk = useCallback(async () => {\r\n        const { objectId } = params\r\n        console.log('annotationList', annotationList, objectId)\r\n        setLoading(true)\r\n        updateArticleToLeanCloud(objectId, {\r\n            annotation: annotationList,\r\n            annotationCount: annotationList.length || 0,\r\n        })\r\n            .then(res => {\r\n                message.success('保存成功！')\r\n                dispatch(updateSavaStatus(false))\r\n                setLoading(false)\r\n            })\r\n            .catch(err => {\r\n                message.success('保存失败，请检查网络设置！')\r\n                setLoading(false)\r\n            })\r\n    }, [annotationList])\r\n\r\n    useEffect(() => {\r\n        const keyDownFn = event => {\r\n            const keyCode = event.keyCode\r\n\r\n            if (keyCode == 83 && window.event.ctrlKey) {\r\n                window.event.preventDefault()\r\n                handleOk()\r\n            }\r\n        }\r\n        window.addEventListener('keydown', keyDownFn)\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', keyDownFn)\r\n        }\r\n    }, [handleOk])\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false)\r\n    }\r\n\r\n    const handleNavigate = () => {\r\n        history.push({\r\n            pathname: `/admin`,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={cls}>\r\n            <div className='left'>\r\n                <div className='logo' onClick={handleNavigate}>\r\n                    <Logo />\r\n                </div>\r\n                <div className='title'>语料标注与统计系统</div>\r\n            </div>\r\n            {type === 'edit' && (\r\n                <div className='right'>\r\n                    <Button\r\n                        loading={loading}\r\n                        type='outline-secondary'\r\n                        onClick={handleOk}\r\n                    >\r\n                        保存记录\r\n                    </Button>\r\n\r\n                    <Button\r\n                        style={{ marginLeft: 30 }}\r\n                        onClick={() => setIsModalVisible(true)}\r\n                        type='outline-secondary'\r\n                    >\r\n                        编辑配置\r\n                    </Button>\r\n                    <Button\r\n                        style={{ marginLeft: 30 }}\r\n                        type='outline-secondary'\r\n                        onClick={() => setIsStatisticsVisible(true)}\r\n                    >\r\n                        统计分析\r\n                    </Button>\r\n                </div>\r\n            )}\r\n            {/* 配置编辑 */}\r\n            <EditCategoryModal\r\n                visible={isModalVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n            />\r\n            {/* 统计分析 */}\r\n            <StatisticsModal\r\n                visible={isStatisticsVisible}\r\n                onCancel={() => setIsStatisticsVisible(false)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * 技术方案构想：\r\n * 每次编辑后，将html传给服务器即可。\r\n *\r\n * UI设计。\r\n * - 高亮\r\n * - 标签\r\n */\r\nimport React, { useState } from 'react'\r\nimport classNames from 'classnames'\r\nimport { useEffect } from 'react'\r\nimport { useRef } from 'react'\r\nimport Highlighter from 'web-highlighter'\r\nimport './Annotation.scss'\r\nimport { Button, message } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    setHightlightSpanEl,\r\n    getDomByDataId,\r\n    clearHightLight,\r\n} from '../../../utils/index'\r\nimport {\r\n    initAnnotation,\r\n    createAnnotation,\r\n    updateSavaStatus,\r\n} from './AnnotationSlice'\r\nimport { Prompt, useHistory, useParams } from 'react-router'\r\nimport { getArticleFromLeanCloud } from '../../../service/article'\r\n\r\nconst log = console.log.bind(console, '[annota]')\r\n// 自定义颜色。\r\nconst keyCodeList = '123456789ABCDEFGHIJKLMNOPQRSTVWXYZ'\r\nconst processText = str => {\r\n    // 已经处理过的不再处理\r\n    // if (str.includes('<br/>')) return str\r\n    return str\r\n        .replace(/\\[.*?\\]/g, '')\r\n        .replace(/\\{CP(.*?)P\\}/g, '$1')\r\n        .replace(/\\{CQ(.*?)\\}/g, '$1')\r\n        .replace(/\\{.*?\\}/g, '')\r\n        .replaceAll('。', '。</p><p>')\r\n        .replaceAll('\\n', '')\r\n        .replaceAll(' ', '')\r\n    // .replaceAll('<br/>', '</p><p>')\r\n}\r\n\r\n// 处理中山大学\r\nconst processText2 = str => {\r\n    const el = document.createElement('div')\r\n    el.innerHTML = str\r\n    return (\r\n        el.textContent\r\n            .replace(/\\n/g, '')\r\n            .replace(/&/g, '')\r\n            .replace(/@/g, '')\r\n            // .replace(/([a-zA-Z])\\w+/g, '')\r\n            .replace(/<.>/g, '')\r\n            .replace(/CZ|BZ|SBZ|BGFZ/g, '')\r\n            .replace(/<>/g, '')\r\n            .replace(/(【(.*?)】)/g, match => {\r\n                return match[1]\r\n            })\r\n            .replaceAll('。', '。</p><p>')\r\n    )\r\n}\r\n\r\n// 侧边栏\r\nconst Annotation = props => {\r\n    const params = useParams()\r\n    const { className, highlighter } = props\r\n    const contentRef = useRef(null)\r\n    const dispatch = useDispatch()\r\n    const [content, setContent] = useState('')\r\n    const [articleList, setArticleList] = useState([])\r\n    const [pager, setPager] = useState({})\r\n    const categoryList = useSelector(state => state.header.categoryList)\r\n    const annotationList = useSelector(state => state.annotation.annotationList)\r\n    const isSave = useSelector(state => state.annotation.isSave)\r\n\r\n    const prefix = 'zz-annotation'\r\n    const cls = classNames({\r\n        [prefix]: true,\r\n        [className]: className,\r\n    })\r\n\r\n    useEffect(() => {\r\n        const { objectId } = params\r\n        getArticleFromLeanCloud(objectId).then(article => {\r\n            const articleObj = article.toJSON()\r\n            const list = articleObj.annotation\r\n            let con = ''\r\n            if (articleObj.source === 'SYSU') {\r\n                con = processText2(articleObj.article)\r\n            } else {\r\n                con = processText(articleObj.article)\r\n            }\r\n            setContent(con)\r\n            // 初始化标注状态\r\n            dispatch(initAnnotation(articleObj))\r\n            if (list) {\r\n                // 还原DOM\r\n                list.forEach(item => {\r\n                    highlighter.fromStore(\r\n                        item.start,\r\n                        item.end,\r\n                        item.text,\r\n                        item.id\r\n                    )\r\n                })\r\n            }\r\n        })\r\n    }, [params, highlighter])\r\n\r\n    useEffect(() => {\r\n        const { objectId } = params\r\n        getArticleFromLeanCloud().then(\r\n            res => {\r\n                const data = res.map((item, index) => {\r\n                    return {\r\n                        objectId: item.id,\r\n                        No: index + 1,\r\n                        ...item.toJSON(),\r\n                    }\r\n                })\r\n                setArticleList(data)\r\n                const index = data.findIndex(item => item.objectId === objectId)\r\n                setPager({\r\n                    index: index + 1,\r\n                    length: data.length,\r\n                })\r\n            },\r\n            () => {\r\n                message.error('获取文章失败')\r\n            }\r\n        )\r\n    }, [params])\r\n\r\n    useEffect(() => {\r\n        const keyDownFn = event => {\r\n            const keyCode = event.keyCode\r\n            if (keyCode && !window.event.ctrlKey) {\r\n                const char = String.fromCharCode(keyCode)\r\n                const index = keyCodeList.indexOf(char)\r\n                if (index != -1 && index < categoryList.length) {\r\n                    const category = categoryList[index]\r\n                    handleClickBtn(category)\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener('keydown', keyDownFn)\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', keyDownFn)\r\n        }\r\n    }, [categoryList])\r\n\r\n    useEffect(() => {\r\n        // 往里面添加\r\n        if (annotationList.length < 0) return\r\n\r\n        // 清空画布\r\n        clearHightLight(contentRef.current)\r\n        // 通过配置项id去找配置项\r\n        const getCategoryConfigById = categoryId => {\r\n            return categoryList.find(item => item.id === categoryId)\r\n        }\r\n\r\n        for (let i = 0; i < annotationList.length; i++) {\r\n            const { id, categoryId } = annotationList[i]\r\n            const els = getDomByDataId(id)\r\n            // 拿出config的配置\r\n            const config = getCategoryConfigById(categoryId)\r\n            if (config) {\r\n                const { text, color } = config\r\n                setHightlightSpanEl(els, {\r\n                    text,\r\n                    color,\r\n                })\r\n            }\r\n        }\r\n    }, [annotationList, categoryList])\r\n\r\n    useEffect(() => {\r\n        if (!highlighter) return\r\n        const h = highlighter\r\n\r\n        h.on(Highlighter.event.CREATE, function (option) {\r\n            const { sources } = option\r\n            // log('这是被创建成功之后data', sources, sources.id)\r\n            sources.map(hs => {\r\n                const obj = {\r\n                    start: hs.start || hs.startMeta,\r\n                    end: hs.end || hs.endMeta,\r\n                    text: hs.text,\r\n                    id: hs.id,\r\n                    categoryId: hs.categoryId || window.categoryId,\r\n                    config: Object.assign(hs.config || {}, window.config),\r\n                }\r\n                dispatch(createAnnotation(obj))\r\n            })\r\n        })\r\n            // .on(Highlighter.event.CLICK, ({ id }) => {})\r\n            .on(Highlighter.event.HOVER, ({ id }) => {\r\n                h.addClass('highlight-wrap-hover', id)\r\n            })\r\n            .on(Highlighter.event.HOVER_OUT, ({ id }) => {\r\n                h.removeClass('highlight-wrap-hover', id)\r\n            })\r\n    }, [highlighter])\r\n\r\n    useEffect(() => {\r\n        contentRef.current.addEventListener('click', e => {\r\n            const target = e.target\r\n            if (target.tagName === 'span') {\r\n                // 这里做一些操作。\r\n            }\r\n        })\r\n        // return () => {\r\n\r\n        // }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const listener = e => {\r\n            e.preventDefault()\r\n            if (isSave) {\r\n                e.returnValue = '您的数据尚未保存，离开后会丢失'\r\n            } else {\r\n                e.returnValue = ''\r\n            }\r\n        }\r\n        isSave && window.addEventListener('beforeunload', listener)\r\n        return () => {\r\n            window.removeEventListener('beforeunload', listener)\r\n        }\r\n    }, [isSave])\r\n\r\n    const handleClickBtn = config => {\r\n        const { id, color } = config\r\n\r\n        // 将配置id存在window对象中\r\n        window.categoryId = id\r\n        const h = highlighter\r\n        const className = `color-${color}`\r\n        const selection = window.getSelection()\r\n        h.setOption({\r\n            style: {\r\n                className,\r\n            },\r\n        })\r\n        h.fromRange(selection.getRangeAt(0))\r\n\r\n        dispatch(updateSavaStatus(true))\r\n    }\r\n\r\n    const handleNavigate = type => {\r\n        const { objectId } = params\r\n        let index = articleList.findIndex(item => item.objectId === objectId)\r\n        if (type === 'pre') {\r\n            index -= 1\r\n        } else if (type === 'next') {\r\n            index += 1\r\n        }\r\n        if (index >= 0 && index < articleList.length) {\r\n            if (!isSave) {\r\n                const data = articleList[index]\r\n                const url = new URL(window.location.href)\r\n                url.hash = `#/edit/${data.objectId}`\r\n                window.location.href = url.href\r\n            } else {\r\n                message.error('文章忘记保存了，保存一下')\r\n            }\r\n        } else {\r\n            message.error('已经是第一篇文章或最后一篇文章了，不能再跳转了')\r\n        }\r\n    }\r\n\r\n    console.log('isSave', isSave)\r\n    return (\r\n        <div className={cls}>\r\n            <div className='action'>\r\n                {categoryList.map((item, index) => {\r\n                    const { color, text } = item\r\n                    return (\r\n                        <Button\r\n                            key={index}\r\n                            onClick={() => handleClickBtn(item)}\r\n                        >\r\n                            {keyCodeList[index]}：{text}\r\n                        </Button>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div\r\n                id='iloveyryr'\r\n                ref={contentRef}\r\n                // key={Date.now()}\r\n                className='content'\r\n                dangerouslySetInnerHTML={{ __html: content }}\r\n            />\r\n\r\n            <Prompt when={isSave} message='您的内容尚未保存确定要离开吗?' />\r\n\r\n            <div className='action'>\r\n                <Button onClick={() => handleNavigate('pre')}>上一篇</Button>\r\n                <Button onClick={() => handleNavigate('next')}>下一篇</Button>\r\n\r\n                <span>{`${pager.index} / ${pager.length}`}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Annotation\r\n","/**\r\n * 技术方案构想：\r\n * 每次编辑后，将html传给服务器即可。\r\n *\r\n * UI设计。\r\n * - 高亮\r\n * - 标签\r\n */\r\nimport React from 'react'\r\nimport classNames from 'classnames'\r\nimport './Comment.scss'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { List, Modal } from 'antd'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport {\r\n    deleteAnnotation,\r\n    updateSavaStatus,\r\n} from '../Annotation/AnnotationSlice'\r\n// import { Button } from 'react-bootstrap'\r\n\r\nconst log = console.log.bind(console, '[comment]')\r\n// 自定义颜色。\r\n\r\n// 侧边栏\r\nconst Comment = props => {\r\n    const { className, highlighter } = props\r\n    const prefix = 'zz-comment'\r\n    const cls = classNames({\r\n        [prefix]: true,\r\n        [className]: className,\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const annotationList = useSelector(state => state.annotation.annotationList)\r\n    const categoryList = useSelector(state => state.header.categoryList)\r\n\r\n    const handleDelete = annotationId => {\r\n        Modal.confirm({\r\n            title: '删除',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: '确认删除吗？',\r\n            okText: '确认',\r\n            cancelText: '取消',\r\n            onCancel: () => {\r\n                console.log('取消')\r\n            },\r\n            onOk: () => {\r\n                // 删除状态\r\n                dispatch(deleteAnnotation(annotationId))\r\n                dispatch(updateSavaStatus(true))\r\n                // 删除dom结构\r\n                highlighter.remove(annotationId)\r\n            },\r\n        })\r\n    }\r\n\r\n    const addClass = id => {\r\n        highlighter.addClass('highlight-wrap-hover', id)\r\n    }\r\n\r\n    const removeClass = id => {\r\n        highlighter.removeClass('highlight-wrap-hover', id)\r\n    }\r\n\r\n    return (\r\n        <div className={cls}>\r\n            <header>我的标注列表</header>\r\n            <List\r\n                itemLayout='horizontal'\r\n                className={`${prefix}-list`}\r\n                dataSource={annotationList}\r\n                renderItem={item => {\r\n                    const config = categoryList.find(\r\n                        i => i.id === item.categoryId\r\n                    )\r\n\r\n                    return (\r\n                        <List.Item className={`${prefix}-list-item`}>\r\n                            {config && item && `${config.text}: ${item.text}`}\r\n                            <div className='action'>\r\n                                <a\r\n                                    onClick={() => handleDelete(item.id)}\r\n                                    onMouseEnter={() => addClass(item.id)}\r\n                                    onMouseLeave={() => removeClass(item.id)}\r\n                                    key='list-loadmore-edit'\r\n                                >\r\n                                    delete\r\n                                </a>\r\n                            </div>\r\n                        </List.Item>\r\n                    )\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Form, Input, Select } from 'antd'\r\n\r\nconst { Option } = Select\r\nimport './SearchForm.scss'\r\n\r\nconst SearchForm = props => {\r\n    const [form] = Form.useForm()\r\n\r\n    const handleSelectChange = (type, value) => {\r\n        form.setFieldsValue({\r\n            [type]: value,\r\n        })\r\n    }\r\n    const onFinish = values => {\r\n        props.onChange && props.onChange(values)\r\n    }\r\n    return (\r\n        <div className='yryr-form-wrap'>\r\n            <Form\r\n                // {...formItemLayout}\r\n                // labelAlign={'right'}\r\n                className='search-form'\r\n                layout='inline'\r\n                form={form}\r\n                // name='dynamic_form_nest_item'\r\n                onFinish={onFinish}\r\n                autoComplete='off'\r\n            >\r\n                <Form.Item name='title' label='文章标题'>\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item name='source' label='语料来源'>\r\n                    <Select onChange={handleSelectChange} allowClear>\r\n                        <Option value='BLCU'>hsk动态作文语料库</Option>\r\n                        <Option value='SYSU'>\r\n                            中山大学汉字偏误中介语语料库\r\n                        </Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name='score' label='汉语水平'>\r\n                    <Select onChange={handleSelectChange} allowClear>\r\n                        <Option value='mid'>中级</Option>\r\n                        <Option value='high'>高级</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name='nationality' label='国籍'>\r\n                    <Select onChange={handleSelectChange} allowClear>\r\n                        <Option value='korea'>韩国</Option>\r\n                        <Option value='britain'>英国</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type='primary' htmlType='submit'>\r\n                        搜索\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Table, Space, message, Button, Popconfirm } from 'antd'\r\nimport {\r\n    deleteArticleToLeanCloud,\r\n    getArticleFromLeanCloud,\r\n    updateArticleToLeanCloud,\r\n} from '../../../service/article'\r\nimport { useHistory } from 'react-router'\r\nimport SearchForm from './SearchForm'\r\n\r\nconst mapKeyToText = {\r\n    BLCU: 'hsk动态作文语料库',\r\n    SYSU: '中山大学汉字偏误中介语语料库',\r\n    mid: '中级',\r\n    high: '高级',\r\n    korea: '韩国',\r\n    britain: '英国',\r\n}\r\n\r\nconst ArticleTable = props => {\r\n    const { loading, dataSource, onUpdate } = props\r\n    const [searchList, setSearchList] = useState(dataSource || [])\r\n    const history = useHistory()\r\n    const columns = [\r\n        {\r\n            title: 'No.',\r\n            dataIndex: 'No',\r\n            key: 'No',\r\n        },\r\n        {\r\n            title: '标题',\r\n            dataIndex: 'title',\r\n            key: 'title',\r\n        },\r\n        {\r\n            title: '语料来源',\r\n            dataIndex: 'source',\r\n            key: 'source',\r\n            render: key => mapKeyToText[key] || key,\r\n        },\r\n        {\r\n            title: '国籍',\r\n            dataIndex: 'nationality',\r\n            key: 'nationality',\r\n            render: key => mapKeyToText[key] || key,\r\n        },\r\n        {\r\n            title: '汉语水平',\r\n            dataIndex: 'score',\r\n            key: 'score',\r\n            render: key => mapKeyToText[key] || key,\r\n        },\r\n        {\r\n            title: '标注数量',\r\n            dataIndex: 'annotationCount',\r\n            key: 'annotationCount',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <Space size='middle'>\r\n                    <a\r\n                        onClick={() => handleEdit(record.objectId)}\r\n                        type='primary'\r\n                    >\r\n                        标注\r\n                    </a>\r\n                    <a onClick={() => handleUpdate(record.objectId)}>编辑</a>\r\n                    <Popconfirm\r\n                        title='删除后无法恢复，请谨慎操作'\r\n                        onConfirm={() => handleDelete(record.objectId)}\r\n                    >\r\n                        <a type='primary' danger>\r\n                            删除\r\n                        </a>\r\n                    </Popconfirm>\r\n                </Space>\r\n            ),\r\n        },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        setSearchList(dataSource)\r\n    }, [dataSource])\r\n    // const getArticle = () => {\r\n    //     let count = 0\r\n    //     getArticleFromLeanCloud().then(\r\n    //         res => {\r\n    //             const data = res.map((item, index) => {\r\n    //                 return {\r\n    //                     objectId: item.id,\r\n    //                     No: index + 1,\r\n    //                     ...item.toJSON(),\r\n    //                 }\r\n    //             })\r\n    //             data.forEach(item => {\r\n    //                 count += item.article.length\r\n    //             })\r\n    //             onChange && onChange(count)\r\n    //             console.log('dataList', data)\r\n    //             setDataList(data)\r\n    //             setSearchList(data)\r\n    //         },\r\n    //         () => {\r\n    //             message.error('获取文章失败')\r\n    //         }\r\n    //     )\r\n    // }\r\n    // useEffect(() => {\r\n    //     getArticle()\r\n    // }, [update])\r\n\r\n    const handleEdit = id => {\r\n        history.push({\r\n            pathname: `/edit/${id}`,\r\n        })\r\n    }\r\n    const handleDelete = id => {\r\n        console.log('删除功能', id)\r\n        deleteArticleToLeanCloud(id)\r\n            .then(() => {\r\n                message.success('删除成功')\r\n                onUpdate && onUpdate()\r\n            })\r\n            .catch(() => {\r\n                message.success('删除失败')\r\n            })\r\n    }\r\n\r\n    const processText = str => {\r\n        const el = document.createElement('div')\r\n        el.innerHTML = str\r\n        return el.textContent\r\n            .replace(/\\n/g, '')\r\n            .replace(/&/g, '')\r\n            .replace(/@/g, '')\r\n            .replace(/([a-zA-Z])\\w+/g, '')\r\n            .replace(/<.>/g, '')\r\n            .replace(/<>/g, '')\r\n            .replace(/(\\【(.*?)\\】)/g, match => {\r\n                return match[1]\r\n            })\r\n    }\r\n\r\n    const handleUpdate = id => {\r\n        props.onUpdate && props.onUpdate(id)\r\n    }\r\n\r\n    const handleUpp = async () => {\r\n        const dataList = dataSource\r\n        for (let i = 1; i < dataList.length; i++) {\r\n            const article = dataList[i]\r\n            console.log('article', article)\r\n            const dd = {\r\n                article: processText(article.article),\r\n            }\r\n            console.log('dd', dd)\r\n\r\n            await updateArticleToLeanCloud(article.objectId, dd)\r\n                .then(() => {\r\n                    console.log('处理i', i, '成功')\r\n                })\r\n                .catch(() => {\r\n                    console.log('处理i', i, '失败')\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleSearch = formValues => {\r\n        console.log('调用', formValues)\r\n        const dataList = dataSource\r\n        const newData = dataList.filter(item => {\r\n            let flag = true\r\n            Object.keys(formValues).forEach(key => {\r\n                if (formValues[key] && formValues[key] !== item[key]) {\r\n                    flag = false\r\n                }\r\n            })\r\n            return flag\r\n        })\r\n        console.log('调用', newData)\r\n        setSearchList(newData)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <Button onClick={handleUpp}> 批量更新</Button> */}\r\n            <SearchForm onChange={handleSearch} />\r\n            <Table\r\n                loading={loading}\r\n                bordered={true}\r\n                columns={columns}\r\n                dataSource={searchList}\r\n                pagination={{\r\n                    showTotal: total => `当前共有${total}条数据`,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArticleTable\r\n","import React, { useEffect } from 'react'\r\nimport { Form, Modal, Input, Select, Tooltip, message } from 'antd'\r\nimport {\r\n    createArticle,\r\n    getArticleFromLeanCloud,\r\n    updateArticleToLeanCloud,\r\n} from '../../../service/article'\r\n\r\nconst { Option } = Select\r\nconst { TextArea } = Input\r\n\r\nconst formItemLayout = {\r\n    labelCol: { span: 4 },\r\n    wrapperCol: { span: 20 },\r\n}\r\n\r\nconst AddModal = props => {\r\n    const { visible, articleId, onOk, onFail } = props\r\n    const [form] = Form.useForm()\r\n\r\n    useEffect(() => {\r\n        if (visible && articleId) {\r\n            getArticleFromLeanCloud(articleId).then(article => {\r\n                const articleObj = article.toJSON()\r\n                console.log('articleObj', articleObj)\r\n                form.setFieldsValue({\r\n                    ...articleObj,\r\n                })\r\n            })\r\n        }\r\n    }, [visible, articleId])\r\n\r\n    const handleSelectChange = (type, value) => {\r\n        form.setFieldsValue({\r\n            [type]: value,\r\n        })\r\n    }\r\n\r\n    const handleConfirm = () => {\r\n        form.submit()\r\n        props.onOk && props.onOk()\r\n    }\r\n\r\n    const handleClose = () => {\r\n        props.onCancel && props.onCancel()\r\n    }\r\n\r\n    const onFinish = values => {\r\n        if (articleId) {\r\n            updateArticleToLeanCloud(articleId, values).then(\r\n                res => {\r\n                    // handleClose()\r\n                    message.success('修改成功')\r\n                    onOk && onOk()\r\n                },\r\n                err => {\r\n                    message.error('修改失败')\r\n                    onFail && onFail()\r\n                }\r\n            )\r\n        } else {\r\n            createArticle(values).then(\r\n                res => {\r\n                    handleClose()\r\n                    message.success('添加成功')\r\n                    onOk && onOk()\r\n                },\r\n                err => {\r\n                    message.error('添加失败')\r\n                    onFail && onFail()\r\n                }\r\n            )\r\n        }\r\n        console.log('values', values)\r\n    }\r\n    return (\r\n        <Modal\r\n            title={articleId ? '编辑文章' : '添加文章'}\r\n            visible={visible}\r\n            onOk={handleConfirm}\r\n            onCancel={handleClose}\r\n            okText={articleId ? '确定' : '添加'}\r\n            cancelText='取消'\r\n        >\r\n            <Form\r\n                {...formItemLayout}\r\n                labelAlign={'right'}\r\n                form={form}\r\n                name='dynamic_form_nest_item'\r\n                onFinish={onFinish}\r\n                autoComplete='off'\r\n            >\r\n                <Form.Item\r\n                    name='title'\r\n                    label='文章标题'\r\n                    rules={[{ required: true }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name='source'\r\n                    label='语料来源'\r\n                    rules={[{ required: true }]}\r\n                >\r\n                    <Select onChange={handleSelectChange} allowClear>\r\n                        <Option value='BLCU'>hsk动态作文语料库</Option>\r\n                        <Option value='SYSU'>\r\n                            中山大学汉字偏误中介语语料库\r\n                        </Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='score'\r\n                    label='汉语水平'\r\n                    rules={[{ required: true }]}\r\n                >\r\n                    <Select onChange={handleSelectChange} allowClear>\r\n                        <Option value='mid'>中级</Option>\r\n                        <Option value='high'>高级</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='nationality'\r\n                    label='国籍'\r\n                    rules={[{ required: true }]}\r\n                >\r\n                    <Select onChange={handleSelectChange} allowClear>\r\n                        <Option value='korea'>韩国</Option>\r\n                        <Option value='britain'>英国</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='article'\r\n                    label={\r\n                        <Tooltip title='可以填入已标注的内容'>\r\n                            <span>文章内容</span>\r\n                        </Tooltip>\r\n                    }\r\n                    rules={[{ required: true }]}\r\n                >\r\n                    <TextArea rows={5} />\r\n                </Form.Item>\r\n                {/* <Form.Item>\r\n                    <Button type='primary' htmlType='submit'>\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item> */}\r\n            </Form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddModal\r\n","import React from 'react'\r\nimport { Modal } from 'antd'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst StatisticsModal = props => {\r\n    const { visible, count, onOk, onCancel } = props\r\n    //\r\n    const config = useSelector(state => state.annotation.config)\r\n\r\n    const handleEdit = () => {\r\n        onCancel && onCancel()\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        console.log('？？？调用一下啊')\r\n        onCancel && onCancel()\r\n    }\r\n    return (\r\n        <Modal\r\n            title='统计分析'\r\n            okText='确定'\r\n            cancelText='取消'\r\n            visible={visible}\r\n            onOk={handleEdit}\r\n            width={800}\r\n            onCancel={handleCancel}\r\n        >\r\n            <div>字数统计：{count}字</div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default StatisticsModal\r\n","import Header from '../edit/Header/Header'\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport ArticleTable from './ArticleTable/ArticleTable'\r\nimport { CSVLink } from 'react-csv'\r\nimport { Button, Divider, message } from 'antd'\r\nimport AddModal from '../edit/SideBar/AddModal'\r\nimport './Admin.scss'\r\nimport StatisticsModal from './StatisticsModal'\r\nimport { getArticleFromLeanCloud } from '../../service/article'\r\nimport { getConfigFromLeanCloud } from '../../service/service'\r\nimport { createArticle, updateArticleToLeanCloud } from '../../service/article'\r\n\r\n// 处理中山大学\r\nconst processText2 = str => {\r\n    const el = document.createElement('div')\r\n    el.innerHTML = str\r\n    return (\r\n        el.textContent\r\n            .replace(/\\n/g, '')\r\n            .replace(/&/g, '')\r\n            .replace(/@/g, '')\r\n            // .replace(/([a-zA-Z])\\w+/g, '')\r\n            .replace(/<.>/g, '')\r\n            .replace(/CZ|BZ|SBZ|BGFZ/g, '')\r\n            .replace(/<>/g, '')\r\n            .replace(/(【(.*?)】)/g, match => {\r\n                return match[1]\r\n            })\r\n        // .replaceAll('。', '。</p><p>')\r\n    )\r\n}\r\n\r\nconst Admin = () => {\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n    const [isStaticVisible, setIsStaticVisible] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [articleList, setArticleList] = useState([])\r\n    const [categoryList, setCategoryList] = useState([])\r\n    const [CSVData, setCSVData] = useState([])\r\n    const [CSVDataText, setCSVDataText] = useState([])\r\n    const [articleId, setArticleId] = useState('')\r\n    const [count, setCount] = useState(0)\r\n\r\n    // const [text, setText] = useState('')\r\n    const getArticle = useCallback(() => {\r\n        let count = 0\r\n        setLoading(true)\r\n        getArticleFromLeanCloud().then(\r\n            res => {\r\n                const data = res.map((item, index) => {\r\n                    return {\r\n                        objectId: item.id,\r\n                        No: index + 1,\r\n                        ...item.toJSON(),\r\n                    }\r\n                })\r\n                data.forEach(item => {\r\n                    count += item.article.length\r\n                })\r\n                setCount(count)\r\n                setArticleList(data)\r\n                setLoading(false)\r\n            },\r\n            () => {\r\n                setLoading(false)\r\n                message.error('获取文章失败')\r\n            }\r\n        )\r\n    }, [])\r\n\r\n    const getCategory = useCallback(() => {\r\n        getConfigFromLeanCloud('610291721de21d3e072c5432').then(res => {\r\n            const list = res.get('categoryList')\r\n            // 更新到redux中\r\n            setCategoryList(list)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getArticle()\r\n        getCategory()\r\n    }, [getArticle, getCategory])\r\n\r\n    useEffect(() => {\r\n        const createCsvData = () => {\r\n            const csv = articleList.map(article => {\r\n                const anaphora = {}\r\n                let count = 0\r\n                if (article.annotation && article.annotation.length > 0) {\r\n                    // 呵呵\r\n                    article.annotation.forEach(anno => {\r\n                        const category = categoryList.find(\r\n                            item => item.id === anno.categoryId\r\n                        )\r\n                        if (anaphora[category.text]) {\r\n                            anaphora[category.text] += 1\r\n                        } else {\r\n                            anaphora[category.text] = 1\r\n                        }\r\n                    })\r\n                    count = article.annotation.length\r\n                }\r\n                const words = processText2(article.article)\r\n                return {\r\n                    No: article.No,\r\n                    title: article.title,\r\n                    nationality: article.nationality,\r\n                    score: article.score,\r\n                    source: article.source,\r\n                    count: count,\r\n                    words: words.length,\r\n                    ...anaphora,\r\n                }\r\n            })\r\n            return csv\r\n        }\r\n        const createCsvDataText = () => {\r\n            const csv = articleList.map(article => {\r\n                const anaphora = {}\r\n                let count = 0\r\n                if (article.annotation && article.annotation.length > 0) {\r\n                    // 呵呵\r\n                    article.annotation.forEach(anno => {\r\n                        const category = categoryList.find(\r\n                            item => item.id === anno.categoryId\r\n                        )\r\n                        if (anaphora[category.text]) {\r\n                            const len = anaphora[category.text].length + 1\r\n                            const text = `${len}.${anno.text}`\r\n                            anaphora[category.text].push(text)\r\n                        } else {\r\n                            anaphora[category.text] = [`1.${anno.text}`]\r\n                        }\r\n                    })\r\n                    count = article.annotation.length\r\n                }\r\n                Object.keys(anaphora).forEach(\r\n                    key => (anaphora[key] = anaphora[key].join('\\n'))\r\n                )\r\n                return {\r\n                    No: article.No,\r\n                    title: article.title,\r\n                    nationality: article.nationality,\r\n                    score: article.score,\r\n                    source: article.source,\r\n                    count: count,\r\n                    ...anaphora,\r\n                }\r\n            })\r\n            return csv\r\n        }\r\n        if (categoryList.length > 0 && articleList.length > 0) {\r\n            const csv = createCsvData()\r\n            const csvText = createCsvDataText()\r\n            setCSVData(csv)\r\n            setCSVDataText(csvText)\r\n        }\r\n    }, [categoryList, articleList])\r\n\r\n    const handleUpload = () => {\r\n        setIsModalVisible(true)\r\n        setArticleId('')\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false)\r\n    }\r\n\r\n    const handleOK = () => {\r\n        setIsModalVisible(false)\r\n        getArticle()\r\n    }\r\n\r\n    // const handleChange = cc => {\r\n    //     setCount(cc)\r\n    // }\r\n\r\n    // 修改文章数据\r\n    const handleUpdate = id => {\r\n        //\r\n        setIsModalVisible(true)\r\n        setArticleId(id)\r\n    }\r\n\r\n    // const processText = str => {\r\n    //     const el = document.createElement('div')\r\n    //     el.innerHTML = str\r\n    //     return el.textContent\r\n    //         .replace(/\\n/g, '')\r\n    //         .replace(/&/g, '')\r\n    //         .replace(/@/g, '')\r\n    //         .replace(/([a-zA-Z])\\w+/g, '')\r\n    //         .replace(/<.>/g, '')\r\n    //         .replace(/<>/g, '')\r\n    //         .replace(/(\\【(.*?)\\】)/g, match => {\r\n    //             return match[1]\r\n    //         })\r\n    // }\r\n\r\n    // const handleUploadAll = async () => {\r\n    //     const data = JSON.parse(text)\r\n    //     const articles = data.articleLs\r\n    //     const result = articles.map(article => {\r\n    //         return {\r\n    //             title: article.title,\r\n    //             nationality: 'korea',\r\n    //             article: article.content,\r\n    //             source: 'SYSU',\r\n    //             score: 'high',\r\n    //         }\r\n    //     })\r\n    //     for (let i = 0; i < result.length; i++) {\r\n    //         const el = result[i]\r\n    //         await createArticle(el).then(\r\n    //             res => {\r\n    //                 message.success('添加成功')\r\n    //             },\r\n    //             err => {\r\n    //                 message.error('添加失败')\r\n    //             }\r\n    //         )\r\n    //         console.log('添加i', i, '成功')\r\n    //     }\r\n    // }\r\n\r\n    // const handleChangeAll = e => {\r\n    //     setText(e.target.value)\r\n    // }\r\n    const handleUpp = async () => {\r\n        const dataList = articleList\r\n        for (let i = 1; i < dataList.length; i++) {\r\n            const article = dataList[i]\r\n            console.log('article', article)\r\n            const dd = {\r\n                article: processText(article.article),\r\n            }\r\n            console.log('dd', dd)\r\n\r\n            await updateArticleToLeanCloud(article.objectId, dd)\r\n                .then(() => {\r\n                    console.log('处理i', i, '成功')\r\n                })\r\n                .catch(() => {\r\n                    console.log('处理i', i, '失败')\r\n                })\r\n        }\r\n    }\r\n\r\n    // const handleClickData = async () => {\r\n    //     console.log('data', articleList, categoryList)\r\n    //     for (let i = 0; i < articleList.length; i++) {\r\n    //         const annotation = articleList[i].annotation\r\n    //         if (annotation) {\r\n    //             const newAnnotation = annotation.map(item => {\r\n    //                 if (item.text.includes('这') || item.text.includes('那')) {\r\n    //                     return {\r\n    //                         ...item,\r\n    //                         categoryId: 'IK65Puo0Tb1_7_LCBritI',\r\n    //                     }\r\n    //                 } else {\r\n    //                     return item\r\n    //                 }\r\n    //             })\r\n    //             console.log('newAnnotation', newAnnotation, annotation)\r\n    //             await updateArticleToLeanCloud(articleList[i].objectId, {\r\n    //                 annotation: newAnnotation,\r\n    //             })\r\n    //                 .then(() => {\r\n    //                     console.log('处理i', i, '成功')\r\n    //                 })\r\n    //                 .catch(() => {\r\n    //                     console.log('处理i', i, '失败')\r\n    //                 })\r\n    //         } else {\r\n    //             console.log('articleList[i]', articleList[i])\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <div className='yryr-admin'>\r\n            <Header type='admin' />\r\n            {/* <div style={{ margin: 50 }} className='test'>\r\n                <TextArea value={text} onChange={handleChangeAll} />\r\n\r\n                <Button type='secondary' onClick={handleUploadAll}>\r\n                    批量上传\r\n                </Button>\r\n            </div> */}\r\n            <div className='main'>\r\n                <div className='action'>\r\n                    <Button type='secondary' onClick={handleUpload}>\r\n                        上传文章\r\n                    </Button>\r\n                    {/* <Button type='secondary' onClick={handleClickData}>\r\n                        处理回指数据\r\n                    </Button> */}\r\n                    <Divider type='vertical' />\r\n                    <Button\r\n                        type='secondary'\r\n                        onClick={() => setIsStaticVisible(true)}\r\n                    >\r\n                        整体统计\r\n                    </Button>\r\n                    <Divider type='vertical' />\r\n\r\n                    <Button type='primary'>\r\n                        <CSVLink filename={'anaphoric-data.csv'} data={CSVData}>\r\n                            导出数据\r\n                        </CSVLink>\r\n                    </Button>\r\n                    <Divider type='vertical' />\r\n\r\n                    <Button type='primary'>\r\n                        <CSVLink\r\n                            filename={'anaphoric-data-text.csv'}\r\n                            data={CSVDataText}\r\n                        >\r\n                            导出文本\r\n                        </CSVLink>\r\n                    </Button>\r\n                </div>\r\n                <ArticleTable\r\n                    dataSource={articleList}\r\n                    loading={loading}\r\n                    onUpdate={handleUpdate}\r\n                />\r\n            </div>\r\n\r\n            <AddModal\r\n                key={Date.now()}\r\n                articleId={articleId}\r\n                visible={isModalVisible}\r\n                onOk={handleOK}\r\n                onCancel={handleCancel}\r\n            />\r\n            <StatisticsModal\r\n                visible={isStaticVisible}\r\n                count={count}\r\n                onCancel={() => setIsStaticVisible(false)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Admin\r\n","import LC from './index'\r\n\r\nexport const getQuestionList = questionIds => {\r\n    const query = new LC.Query('Question')\r\n    // query.descending('createdAt')\r\n    query.limit(1000)\r\n    if (questionIds) {\r\n        query.containedIn('id', questionIds)\r\n    }\r\n    return query.find()\r\n}\r\n\r\nexport const existQuestion = objectId => {\r\n    const query = new LC.Query('Question')\r\n    if (typeof objectId === 'object') {\r\n        query.containedIn('id', objectId)\r\n    } else {\r\n        query.equalTo('id', objectId)\r\n    }\r\n    query.limit(1000)\r\n    return query.find()\r\n}\r\n\r\n// 新增题目到leanCloud\r\nexport const addQuestion = data => {\r\n    const list = []\r\n    data.forEach(item => {\r\n        const Question = LC.Object.extend('Question')\r\n        const question = new Question()\r\n        Object.keys(item).forEach(key => {\r\n            question.set(key, item[key])\r\n        })\r\n        list.push(question)\r\n    })\r\n    return LC.Object.saveAll(list)\r\n}\r\n\r\n// delete\r\nexport const deleteQuestion = objectId => {\r\n    const question = LC.Object.createWithoutData('Question', objectId)\r\n    return question.destroy()\r\n}\r\n\r\n// 这是粉笔错题分类表\r\n// 种类表添加种类\r\nexport const addCategoryQuestion = data => {\r\n    let question = LC.Object.createWithoutData(\r\n        'Category',\r\n        '62031ff0a10bf856ff93cf99'\r\n    )\r\n    Object.keys(data).forEach(key => {\r\n        question.set(key, data[key])\r\n    })\r\n    return question.save()\r\n}\r\n\r\nexport const getCategoryQuestion = objectId => {\r\n    const query = new LC.Query('Category')\r\n    return query.get(objectId || '62031ff0a10bf856ff93cf99')\r\n}\r\n\r\n// 自定义错题分类表\r\nexport const addCustomWrongQuestionCategory = data => {\r\n    let question = LC.Object.createWithoutData(\r\n        'Category',\r\n        '6253f0461122b910ec5dfd1e'\r\n    )\r\n    Object.keys(data).forEach(key => {\r\n        question.set(key, data[key])\r\n    })\r\n    return question.save()\r\n}\r\n\r\nexport const getCustomWrongQuestionCategory = () => {\r\n    const query = new LC.Query('Category')\r\n    return query.get('6253f0461122b910ec5dfd1e')\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Upload, Tree, Button } from 'antd'\r\nimport { getCategoryQuestion } from '../../service/question'\r\nimport '../xingce/XingCe.scss'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst XingCe = () => {\r\n    const [categoryList, setCategoryList] = useState([])\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        getCategoryQuestion('625d56e11122b910ec683964').then(res => {\r\n            const data = res.toJSON().content\r\n            processCategoryList(data)\r\n            console.log('res', data)\r\n            setCategoryList(data)\r\n        })\r\n    }, [])\r\n\r\n    // 开始练习\r\n    const handleClickPractice = (questionIds, id) => {\r\n        history.push(`/book/${questionIds.slice(0, 100).toString()}`)\r\n    }\r\n\r\n    const processCategoryList = data => {\r\n        // 处理数据\r\n        data.forEach(item => {\r\n            item.title = (\r\n                <div className='category-item'>\r\n                    <div className='name'>{item.name}</div>\r\n                    <div className='num'>{item.questionIds.length}题</div>\r\n                    <div className='practice'>\r\n                        <Button\r\n                            onClick={() =>\r\n                                handleClickPractice(item.questionIds, item.id)\r\n                            }\r\n                            shape='round'\r\n                        >\r\n                            开始练习\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            )\r\n            item.key = item.id\r\n            if (item.children) {\r\n                processCategoryList(item.children)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='xing-ce'>\r\n            hello, world\r\n            <div className='category'>\r\n                <Tree className='xing-ce-tree' treeData={categoryList} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default XingCe\r\n","// 答案组件\r\nimport React from 'react'\r\nimport { Button, Divider, Tag } from 'antd'\r\nimport './Answer.scss'\r\n\r\nconst Answer = props => {\r\n    const { correctAnswer, solution, keypoints, questionMeta, source } =\r\n        props.data\r\n\r\n    const mapIndexToLetter = ['A', 'B', 'C', 'D']\r\n\r\n    const handleClick = () => {\r\n        props.onClose()\r\n    }\r\n\r\n    return (\r\n        <div className='answer'>\r\n            <div className='correct'>\r\n                <p>\r\n                    正确答案是：\r\n                    <span>{mapIndexToLetter[correctAnswer['choice']]}</span>\r\n                </p>\r\n\r\n                <Button onClick={handleClick}>收起</Button>\r\n            </div>\r\n            <Divider />\r\n            <ul>\r\n                <li>\r\n                    <span>解析：</span>\r\n                    <div\r\n                        className='content'\r\n                        dangerouslySetInnerHTML={{ __html: solution }}\r\n                    ></div>\r\n                </li>\r\n                <li>\r\n                    <span>考点：</span>\r\n                    <div className='content'>\r\n                        {keypoints.map((item, index) => {\r\n                            return (\r\n                                <Tag key={index} color='#108ee9'>\r\n                                    {item.name}\r\n                                </Tag>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <span>来源：</span>\r\n                    <div className='content'>{source}</div>\r\n                </li>\r\n                <li>\r\n                    <span>统计：</span>\r\n                    <div className='content'>\r\n                        <Tag color='green'>\r\n                            正确率：{questionMeta.correctRatio.toFixed(2)}%\r\n                        </Tag>\r\n                        <Tag color='magenta'>\r\n                            易错项：\r\n                            {\r\n                                mapIndexToLetter[\r\n                                    questionMeta.mostWrongAnswer.choice\r\n                                ]\r\n                            }\r\n                        </Tag>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Answer\r\n","import LC from './index'\r\n\r\nexport const getExamList = questionIds => {\r\n    const query = new LC.Query('FbQuestion')\r\n    // query.descending('createdAt')\r\n    query.limit(1000)\r\n    if (questionIds) {\r\n        query.containedIn('id', questionIds)\r\n    }\r\n    return query.find()\r\n}\r\n\r\nexport const getBookList = questionIds => {\r\n    const query = new LC.Query('QuestionBook')\r\n    // query.descending('createdAt')\r\n    query.limit(1000)\r\n    if (questionIds) {\r\n        query.containedIn('id', questionIds)\r\n    }\r\n    return query.find()\r\n}\r\n\r\nexport const addExam = data => {\r\n    const list = []\r\n    data.forEach(item => {\r\n        const Question = LC.Object.extend('FbQuestion')\r\n        const question = new Question()\r\n        Object.keys(item).forEach(key => {\r\n            question.set(key, item[key])\r\n        })\r\n        list.push(question)\r\n    })\r\n    return LC.Object.saveAll(list)\r\n}\r\n\r\n// delete\r\nexport const deleteExam = objectId => {\r\n    const question = LC.Object.createWithoutData('FbQuestion', objectId)\r\n    return question.destroy()\r\n}\r\n","// 收藏组件\r\nimport React from 'react'\r\nimport './CollectIcon.scss'\r\n\r\nconst CollectIcon = props => {\r\n    const { checked } = props\r\n    const url = checked\r\n        ? 'https://nodestatic.fbstatic.cn/weblts_spa_online/tiku/static/collected-btn.d4120fd14a7eda0e8e50.png'\r\n        : 'https://nodestatic.fbstatic.cn/weblts_spa_online/tiku/static/collect-btn.e0cca1095b2514b3e6c5.png'\r\n    const handleClick = () => {\r\n        props.onClick && props.onClick()\r\n    }\r\n    return (\r\n        <span onClick={handleClick} className='collect-icon'>\r\n            <img src={url} alt='' />\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default CollectIcon\r\n","import LC from './index'\r\n\r\nexport const getCollectList = questionIds => {\r\n    const query = new LC.Query('Collection')\r\n    // query.descending('createdAt')\r\n    query.limit(1000)\r\n    if (questionIds) {\r\n        query.containedIn('id', questionIds)\r\n    }\r\n    return query.find()\r\n}\r\n\r\nexport const addCollect = data => {\r\n    const list = []\r\n    data.forEach(item => {\r\n        const Question = LC.Object.extend('Collection')\r\n        const question = new Question()\r\n        Object.keys(item).forEach(key => {\r\n            question.set(key, item[key])\r\n        })\r\n        list.push(question)\r\n    })\r\n    return LC.Object.saveAll(list)\r\n}\r\n\r\n// delete\r\nexport const deleteCollect = objectId => {\r\n    const question = LC.Object.createWithoutData('Collection', objectId)\r\n    return question.destroy()\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { message } from 'antd'\r\nimport classNames from 'classnames'\r\nimport { getCategoryQuestion, getQuestionList } from '../../service/question'\r\nimport '../xingce/XingCe.scss'\r\nimport { useParams } from 'react-router'\r\nimport Answer from '../xingce/components/Answer'\r\nimport { getBookList, getExamList } from '../../service/exam'\r\nimport CollectIcon from '../xingce/components/CollectIcon'\r\nimport {\r\n    addCollect,\r\n    deleteCollect,\r\n    getCollectList,\r\n} from '../../service/collect'\r\n\r\nconst XingCeList = () => {\r\n    const params = useParams()\r\n    const [dataSource, setDataSource] = useState([])\r\n    useEffect(() => {\r\n        // getCollect()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const id = params.objectId\r\n        if (id.includes(',')) {\r\n            console.log('123', id.split(','))\r\n            const questionIds = id\r\n                .split(',')\r\n                .filter(item => item != '')\r\n                .map(item => parseInt(item))\r\n\r\n            getBookList(questionIds).then(res => {\r\n                if (res.length === questionIds.length) {\r\n                    const data = res\r\n                        .map(item => item.toJSON())\r\n                        .sort(\r\n                            (a, b) =>\r\n                                b.questionMeta.totalCount -\r\n                                a.questionMeta.totalCount\r\n                        )\r\n                    console.log('data', data)\r\n                    setDataSource(data)\r\n                }\r\n            })\r\n        }\r\n    }, [params])\r\n\r\n    // const getCollect = () => {\r\n    //     getCollectList().then(res => {\r\n    //         const data = res.map(item => item.toJSON())\r\n    //         const newMap = {}\r\n    //         data.forEach(item => {\r\n    //             newMap[item.id] = item.objectId\r\n    //         })\r\n    //         setCollectMap(newMap)\r\n    //     })\r\n    // }\r\n\r\n    const handleSelectOption = (item, index) => {\r\n        const choice = item.correctAnswer.choice\r\n        const questionId = item.id\r\n        let status = ''\r\n        if (choice == index) {\r\n            status = 'correct'\r\n        } else {\r\n            status = 'wrong'\r\n        }\r\n        const newDataSource = dataSource.map(item => {\r\n            if (item.id === questionId) {\r\n                return {\r\n                    ...item,\r\n                    answerVisible: true,\r\n                    status,\r\n                    selectIndex: index,\r\n                }\r\n            } else {\r\n                return item\r\n            }\r\n        })\r\n        setDataSource(newDataSource)\r\n    }\r\n\r\n    const handleClose = item => {\r\n        const questionId = item.id\r\n        const newDataSource = dataSource.map(item => {\r\n            if (item.id === questionId) {\r\n                return {\r\n                    ...item,\r\n                    answerVisible: false,\r\n                    status: '',\r\n                    selectIndex: '',\r\n                }\r\n            } else {\r\n                return item\r\n            }\r\n        })\r\n        setDataSource(newDataSource)\r\n    }\r\n\r\n    return (\r\n        <div className='wrap'>\r\n            <div className='wrap-print'>\r\n                <div className='list'>\r\n                    {dataSource.map((item, index) => {\r\n                        let layout = 'four'\r\n                        // 任一选项文字长度超过10，则选择两栏布局\r\n                        // 任一选项文字长度超过20，则选择一栏布局\r\n                        // 否则使用四栏布局\r\n                        const itemLength = []\r\n                        item.accessories[0].options.forEach(item => {\r\n                            itemLength.push(item.length)\r\n                        })\r\n                        const len = Math.max(...itemLength)\r\n                        if (len >= 20) {\r\n                            layout = 'one'\r\n                        } else if (len > 10) {\r\n                            layout = 'two'\r\n                        }\r\n                        const cls = classNames({\r\n                            question: true,\r\n                            [item.status]: item.status,\r\n                        })\r\n                        return (\r\n                            <div key={item.id} className='item-wrap'>\r\n                                {index % 20 === 0 && (\r\n                                    <h2>练习题{parseInt(index / 20) + 1}</h2>\r\n                                )}\r\n                                <div className='item'>\r\n                                    <div className={cls}>\r\n                                        <span>{index + 1}.</span>\r\n                                        <div className='content'>\r\n                                            <div className='title'>\r\n                                                <span\r\n                                                    dangerouslySetInnerHTML={{\r\n                                                        __html: item.content,\r\n                                                    }}\r\n                                                ></span>\r\n                                                {/* <CollectIcon\r\n                                                checked={collectMap[item.id]}\r\n                                                onClick={() =>\r\n                                                    handleCollect(\r\n                                                        item,\r\n                                                        collectMap[item.id]\r\n                                                    )\r\n                                                }\r\n                                            /> */}\r\n                                            </div>\r\n\r\n                                            <div\r\n                                                className={`options ${layout}`}\r\n                                            >\r\n                                                {item.accessories[0] &&\r\n                                                    item.accessories[0].options.map(\r\n                                                        (option, pos) => {\r\n                                                            const mapIndexToLetter =\r\n                                                                [\r\n                                                                    'A',\r\n                                                                    'B',\r\n                                                                    'C',\r\n                                                                    'D',\r\n                                                                ]\r\n                                                            let status =\r\n                                                                pos ==\r\n                                                                    item.selectIndex &&\r\n                                                                item.status ==\r\n                                                                    'correct'\r\n                                                                    ? 'correct'\r\n                                                                    : 'wrong'\r\n                                                            const optionCls =\r\n                                                                classNames({\r\n                                                                    option: true,\r\n                                                                    [status]:\r\n                                                                        pos ===\r\n                                                                        item.selectIndex,\r\n                                                                })\r\n                                                            return (\r\n                                                                <div\r\n                                                                    key={pos}\r\n                                                                    onClick={() =>\r\n                                                                        handleSelectOption(\r\n                                                                            item,\r\n                                                                            pos\r\n                                                                        )\r\n                                                                    }\r\n                                                                    className={\r\n                                                                        optionCls\r\n                                                                    }\r\n                                                                >\r\n                                                                    <span className='num'>\r\n                                                                        {\r\n                                                                            mapIndexToLetter[\r\n                                                                                pos\r\n                                                                            ]\r\n                                                                        }\r\n                                                                        .\r\n                                                                    </span>\r\n                                                                    <span\r\n                                                                        dangerouslySetInnerHTML={{\r\n                                                                            __html: option,\r\n                                                                        }}\r\n                                                                    ></span>\r\n                                                                </div>\r\n                                                            )\r\n                                                        }\r\n                                                    )}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {item.answerVisible && (\r\n                                        <Answer\r\n                                            onClose={() => handleClose(item)}\r\n                                            data={item}\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default XingCeList\r\n","// adjacency matrix\r\n/**\r\n *\r\n[4L, 49,1,2]  -> [1L, 49,3,4]  [黑色, 14,1,3,4]  [128G, 77,1,3]  [红色, 14,2]  [256G, 77,2,4]  \r\n[1L, 49,3,4]  -> [4L, 49,1,2]  [黑色, 14,1,3,4]  [128G, 77,1,3]  [256G, 77,2,4]  \r\n[黑色, 14,1,3,4]  -> [红色, 14,2]  [4L, 49,1,2]  [128G, 77,1,3]  [1L, 49,3,4]  [256G, 77,2,4] \r\n\r\n{[1L, 49,3,4] [128G, 77,1,3] [红色, 14,2] [256G, 77,2,4]}\r\n[红色, 14,2]  -> [黑色, 14,1,3,4]  [4L, 49,1,2]  [256G, 77,2,4]  \r\n[128G, 77,1,3]  -> [256G, 77,2,4]  [4L, 49,1,2]  [黑色, 14,1,3,4]  [1L, 49,3,4]  \r\n[256G, 77,2,4]  -> [128G, 77,1,3]  [4L, 49,1,2]  [红色, 14,2]  [1L, 49,3,4]  [黑色, 14,1,3,4]  \r\n */\r\nclass Vertex {\r\n    constructor(id) {\r\n        this.id = id\r\n        this.sku = new Set()\r\n    }\r\n}\r\nconst log = console.log.bind(console, '[adj-list]')\r\n// Adjacency table\r\nclass AdjacencyListGraph {\r\n    constructor(isDirected = false) {\r\n        this.vertices = [] //顶点 vertex的复数\r\n        this.adjList = new Map() // 邻接表 Adjacency\r\n        this.isDirected = isDirected // 是否为有向图\r\n    }\r\n\r\n    loadDataSource(commoditySpecs, limitData) {\r\n        // 1. 通过规格添加顶点\r\n        const vertex = commoditySpecs.reduce((acc, cur) => {\r\n            return acc.concat(cur.list)\r\n        }, [])\r\n        vertex.forEach(id => {\r\n            const vertex = new Vertex(id)\r\n            this.addVertex(vertex)\r\n        })\r\n        // 2. 约束条件添加边\r\n        // 同级可选\r\n        for (let i = 0; i < commoditySpecs.length; i++) {\r\n            const item = commoditySpecs[i].list\r\n            for (let j = 0; j < item.length; j++) {\r\n                for (let k = 0; k < item.length; k++) {\r\n                    if (item[j] !== item[k]) {\r\n                        this.addEdge(\r\n                            item[j],\r\n                            item[k],\r\n                            parseInt(Math.random() * 100)\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // 限制条件\r\n        for (let i = 0; i < limitData.length; i++) {\r\n            const item = limitData[i].list\r\n            const skuId = limitData[i].skuId\r\n            for (let j = 0; j < item.length; j++) {\r\n                for (let k = 0; k < item.length; k++) {\r\n                    if (item[j] !== item[k]) {\r\n                        this.addEdge(item[j], item[k], skuId)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getVertexById(vertexId) {\r\n        const vertex = this.vertices.find(vertex => vertex.id === vertexId)\r\n        return vertex\r\n    }\r\n\r\n    // 判断顶点是否存在\r\n    hasVertex(vertex) {\r\n        // const result = this.vertices.some(vertex => vertex.id === vertexId)\r\n        return this.vertices.includes(vertex)\r\n    }\r\n\r\n    // 判断边是否存在\r\n    hasEdge(v, w) {\r\n        const result = this.adjList.get(v).includes(w)\r\n        return result\r\n    }\r\n\r\n    // 添加顶点\r\n    addVertex(vertex) {\r\n        if (this.hasVertex(vertex)) return\r\n        this.vertices.push(vertex)\r\n        this.adjList.set(vertex, [])\r\n    }\r\n\r\n    // 建立v => w的边联系\r\n    addEdge(vId, wId, skuId) {\r\n        const v1 = this.getVertexById(vId)\r\n        const v2 = this.getVertexById(wId)\r\n        if (!v1 || !v2) {\r\n            console.log('v, w节点不存在, 请先添加入节点中')\r\n            return\r\n        }\r\n        if (!this.hasEdge(v1, v2)) {\r\n            v1.sku.add(skuId)\r\n            v2.sku.add(skuId)\r\n            this.adjList.get(v1).push(v2)\r\n            this.adjList.get(v2).push(v1)\r\n        }\r\n    }\r\n\r\n    getVertices() {\r\n        return this.vertices\r\n    }\r\n\r\n    getExistVertices() {\r\n        return this.existVertices\r\n    }\r\n\r\n    getVertexIdList(vertexId) {\r\n        if (vertexId) {\r\n            const vertex = this.getVertexById(vertexId)\r\n            const vertexList = this.adjList.get(vertex)\r\n            return vertexList.map(item => item.id)\r\n        }\r\n        return this.vertices.map(item => item.id)\r\n    }\r\n\r\n    getAdjList() {\r\n        return this.adjList\r\n    }\r\n\r\n    vertexToString(vertex) {\r\n        return `[${vertex.id}, ${[...vertex.sku]}] `\r\n    }\r\n\r\n    toString() {\r\n        let s = ''\r\n        for (let i = 0; i < this.vertices.length; i++) {\r\n            const vertex = this.vertices[i]\r\n            s += `${this.vertexToString(vertex)} -> `\r\n            const neighbors = this.adjList.get(this.vertices[i])\r\n            for (let j = 0; j < neighbors.length; j++) {\r\n                s += `${this.vertexToString(neighbors[j])} `\r\n            }\r\n            s += '\\n'\r\n        }\r\n        return s\r\n    }\r\n\r\n    // 判断v1和v2是否连通\r\n    find(v1, v2) {\r\n        return this.adjList.get(v1).includes(v2)\r\n    }\r\n\r\n    getSkuIntersection(setList) {\r\n        const map = new Map()\r\n        for (let i = 0; i < setList.length; i++) {\r\n            const sku = [...setList[i]]\r\n            sku.forEach(item => {\r\n                if (map.has(item)) {\r\n                    map.set(item, 2)\r\n                } else {\r\n                    map.set(item, 1)\r\n                }\r\n            })\r\n        }\r\n        const result = [...map]\r\n            .filter(([key, value]) => value > 1)\r\n            .map(([key, value]) => key)\r\n        return result\r\n    }\r\n\r\n    // 获取交集\r\n    getIntersection(vertexIdList) {\r\n        window.adj = [0, 0]\r\n        if (vertexIdList.length <= 0) return this.getVertexIdList()\r\n        if (vertexIdList.length === 1)\r\n            return this.getVertexIdList(vertexIdList[0])\r\n        const map = new Map()\r\n        const arr = []\r\n        // 1. 取各顶点的规格\r\n        for (let i = 0; i < vertexIdList.length; i++) {\r\n            const id = vertexIdList[i]\r\n            const vertex = this.getVertexById(id)\r\n            arr.push(vertex.sku)\r\n            // 2. 取顶点下各个邻接点的交集, map为2说明出现了两次，则存在交集\r\n            const adjList = this.adjList.get(vertex)\r\n            log('adj', adjList)\r\n            window.adj[i] = adjList\r\n            for (let j = 0; j < adjList.length; j++) {\r\n                const item = adjList[j]\r\n                if (!map.has(item)) {\r\n                    map.set(item, 1)\r\n                } else {\r\n                    map.set(item, 2)\r\n                }\r\n            }\r\n        }\r\n        log(\r\n            '[...map]',\r\n            [...map],\r\n            [...map]\r\n                .filter(([key, value]) => value > 1)\r\n                .map(([key, value]) => key)\r\n        )\r\n        // 1.1 取出各顶点的规格交集\r\n        const set = this.getSkuIntersection(arr)\r\n        // 通过1和2 得出正确的交集\r\n        const result = [...map]\r\n            .filter(([key, value]) => value > 1)\r\n            .filter(([key, value]) => {\r\n                const sku = key.sku\r\n                const result = set.every(item => sku.has(item))\r\n                return result\r\n            })\r\n            .map(([key, value]) => key.id)\r\n        return result\r\n    }\r\n}\r\n\r\nexport default AdjacencyListGraph\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport './styles.css'\r\nimport Graph from './graph'\r\nimport { Radio } from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport AdjacencyMatrixGraph from './AdjacencyMatrixGraph'\r\nimport AdjacencyListGraph from './AdjacencyListGraph'\r\nconst limitData = [\r\n    { skuId: 1, list: ['意外险', '十年', '0岁到18岁'] },\r\n    { skuId: 2, list: ['意外险', '一百年', '0岁到18岁'] },\r\n    { skuId: 3, list: ['车险', '十年', '0岁到18岁'] },\r\n    { skuId: 4, list: ['车险', '十年', '19岁到60岁'] },\r\n    { skuId: 5, list: ['健康险', '一千年', '61岁到100岁'] },\r\n    { skuId: 6, list: ['健康险', '一千年', '0岁到18岁'] },\r\n    { skuId: 7, list: ['健康险', '十年', '19岁到60岁'] },\r\n]\r\nconst commoditySpecs = [\r\n    {\r\n        title: '保险种类',\r\n        key: 'type',\r\n        list: ['意外险', '车险', '健康险'],\r\n    },\r\n    {\r\n        title: '保障时间',\r\n        key: 'time',\r\n        list: ['十年', '一百年', '一千年'],\r\n    },\r\n    {\r\n        title: '投保人年龄',\r\n        key: 'age',\r\n        list: ['0岁到18岁', '19岁到60岁', '61岁到100岁'],\r\n    },\r\n]\r\n// const limitData = [\r\n//     { skuId: 1, list: ['4L', '黑色', '128G'] },\r\n//     { skuId: 2, list: ['4L', '红色', '256G'] },\r\n//     { skuId: 3, list: ['1L', '黑色', '128G'] },\r\n//     { skuId: 4, list: ['1L', '黑色', '256G'] },\r\n// ]\r\n// const commoditySpecs = [\r\n//     { title: '尺寸', key: 'size', list: ['4L', '1L'] },\r\n//     { title: '颜色', key: 'color', list: ['黑色', '红色'] },\r\n//     { title: '体重', key: 'weight', list: ['128G', '256G'] },\r\n// ]\r\nconst g = new AdjacencyListGraph()\r\ng.loadDataSource(commoditySpecs, limitData)\r\n\r\n// 呵呵。\r\nfunction Matrix() {\r\n    const [data, setData] = useState({})\r\n    const graph = useMemo(() => {\r\n        const g = new AdjacencyMatrixGraph()\r\n        g.loadDataSource(commoditySpecs, limitData)\r\n        console.log('g.tostring', g.toString())\r\n        // const g = new AdjacencyListGraph()\r\n        // g.loadDataSource(commoditySpecs, limitData)\r\n        return g\r\n    }, [])\r\n    const [limit, setLimit] = useState(graph.getExistVertices())\r\n\r\n    useEffect(() => {\r\n        // 获取选中的顶点\r\n        const vertexList = Object.keys(data)\r\n            .map(key => data[key])\r\n            .filter(key => key)\r\n        const l = graph.getIntersection(vertexList)\r\n        console.log('intersection', l)\r\n        if (l) {\r\n            setLimit(l)\r\n        }\r\n    }, [data])\r\n\r\n    const handleChange = (e, key) => {\r\n        const value = e.target.value\r\n        const newData = {\r\n            ...data,\r\n            [key]: value,\r\n        }\r\n        setData(newData)\r\n    }\r\n\r\n    const handleClick = key => {\r\n        // setData\r\n        setData({\r\n            ...data,\r\n            [key]: '',\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='App'>\r\n            {commoditySpecs.map((spec, index_i) => {\r\n                const { title, key, list } = spec\r\n                return (\r\n                    <div key={index_i} className=''>\r\n                        <div>{title}</div>\r\n                        <Radio.Group\r\n                            value={data[key]}\r\n                            onChange={e => handleChange(e, key)}\r\n                            buttonStyle='solid'\r\n                        >\r\n                            {list.map(item => {\r\n                                // 没有item，或者为空\r\n                                let disable = false\r\n                                if (\r\n                                    data[key] !== item &&\r\n                                    !limit.includes(item)\r\n                                ) {\r\n                                    disable = true\r\n                                }\r\n                                return (\r\n                                    <Radio.Button\r\n                                        onClick={() => handleClick(key)}\r\n                                        disabled={disable}\r\n                                        key={item}\r\n                                        value={item}\r\n                                    >\r\n                                        {item}\r\n                                    </Radio.Button>\r\n                                )\r\n                            })}\r\n                        </Radio.Group>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Matrix\r\n","import React from 'react'\r\nimport Matrix from './Matrix'\r\n\r\nconst Algorithm = () => {\r\n    return <div>{/* <Matrix /> */}</div>\r\n}\r\n\r\nexport default Algorithm\r\n","export const getNumberFromLen = numberLength => {\r\n    var num = Math.random()\r\n    while (num < Math.pow(10, numberLength - 1)) {\r\n        num *= 10\r\n    }\r\n    return parseInt(num)\r\n}\r\n\r\n// number是数字，len是保留的位数，并且放大到的位数\r\n// 例如\r\n// formatAnswerNumber(0.03813, 2) => 38\r\n// formatAnswerNumber(0.03813, 3) => 381\r\nexport const formatAnswerNumber = (number, len) => {\r\n    let n = number\r\n    if (n > 100) n /= 10\r\n    while (n < Math.pow(10, len - 1)) {\r\n        n *= 10\r\n    }\r\n    return Math.round(n)\r\n}\r\n","import { Alert, Button, Col, Input, Radio, Row, Form } from 'antd'\r\nimport React, { useState } from 'react'\r\nimport { formatAnswerNumber, getNumberFromLen } from '../../utils/math'\r\nimport './Calc.scss'\r\n\r\n// const getNumberFromLen = numberLength => {\r\n//     return parseInt(Math.random() * Math.pow(10, numberLength))\r\n// }\r\n\r\n// // number是数字，len是保留的位数，并且放大到的位数\r\n// // 例如\r\n// // formatAnswerNumber(0.03813, 2) => 38\r\n// // formatAnswerNumber(0.03813, 3) => 381\r\n// const formatAnswerNumber = (number, len) => {\r\n//     let n = number\r\n//     while (n < Math.pow(10, len - 1)) {\r\n//         n *= 10\r\n//     }\r\n//     return parseInt(n)\r\n// }\r\n\r\n// type: 1除法\r\n// type: 2加法\r\n// type: 3减法\r\nconst getData = (type = 1) => {\r\n    const arr = []\r\n    for (let i = 0; i < 20; i++) {\r\n        const a = getNumberFromLen(3)\r\n        const b = getNumberFromLen(3)\r\n        let answerObj = {}\r\n        if (type === 1) {\r\n            answerObj = {\r\n                answer: a / b,\r\n                formatAnswer: formatAnswerNumber(a / b, 2),\r\n            }\r\n        } else if (type === 2) {\r\n            answerObj = {\r\n                answer: a + b,\r\n                formatAnswer: a + b,\r\n            }\r\n        } else if (type === 3) {\r\n            answerObj = {\r\n                answer: a + b,\r\n                formatAnswer: a + b,\r\n            }\r\n        }\r\n        const obj = {\r\n            a,\r\n            b,\r\n            input: '',\r\n            time: '',\r\n            ...answerObj,\r\n        }\r\n        arr.push(obj)\r\n    }\r\n    return arr\r\n}\r\n\r\nconst defaultColumn = [\r\n    {\r\n        type: 'span',\r\n        label: 'a',\r\n        span: 5,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'b',\r\n        span: 5,\r\n    },\r\n    {\r\n        type: 'input',\r\n        label: 'a/b',\r\n        span: 6,\r\n    },\r\n    {\r\n        type: 'alert',\r\n        label: 'answer',\r\n        span: 4,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'time',\r\n        span: 4,\r\n    },\r\n]\r\n\r\nvar test = () => {\r\n    for (let i = 0.1; i <= 1; i += 0.01) {\r\n        console.log(\r\n            `${parseInt(i * 100)} / ${parseInt((1 + i) * 100)}`,\r\n            `${Math.round((i * 100) / (1 + i) / 10)}`\r\n        )\r\n    }\r\n}\r\n\r\nconst Calc = () => {\r\n    const [column, setColumn] = useState(defaultColumn)\r\n    const [calcMethod, setCalcMethod] = useState(1)\r\n    const [answerVisible, setAnswerVisible] = useState(false)\r\n    const [acceptRate, setAcceptRate] = useState(0)\r\n    const [data, setData] = useState(() => getData())\r\n    window.data = data\r\n    const [time, setTime] = useState({\r\n        start: '',\r\n        end: '',\r\n    })\r\n    const prefix = 'calc-wrap'\r\n    const onChange = e => {\r\n        const value = e.target.value\r\n        let label = ''\r\n        if (value == '1') {\r\n            label = 'a/b'\r\n        } else if (value == '2') {\r\n            label = 'a+b'\r\n        } else if (value == '3') {\r\n            label = 'a-b'\r\n        }\r\n        const newColumn = column.map(item => {\r\n            if (item.type === 'input') {\r\n                return {\r\n                    ...item,\r\n                    label,\r\n                }\r\n            } else {\r\n                return item\r\n            }\r\n        })\r\n        setColumn(newColumn)\r\n        const newData = getData(value)\r\n        console.log('newData', newData)\r\n        setData(newData)\r\n        setCalcMethod(value)\r\n        setAnswerVisible(false)\r\n    }\r\n\r\n    const handleChangeInput = (e, index) => {\r\n        const newData = data.map((item, j) => {\r\n            if (index === j) {\r\n                return {\r\n                    ...item,\r\n                    input: e.target.value,\r\n                }\r\n            }\r\n            return item\r\n        })\r\n        setData(newData)\r\n    }\r\n\r\n    const handleClickResult = () => {\r\n        setAnswerVisible(true)\r\n        let count = 0\r\n        data.forEach(item => {\r\n            const { input, formatAnswer } = item\r\n            if (Math.abs(input - formatAnswer) <= 1) {\r\n                count++\r\n            }\r\n        })\r\n        setAcceptRate(count)\r\n        setTime({\r\n            ...time,\r\n            end: parseInt((Date.now() - time.start) / 1000),\r\n        })\r\n    }\r\n\r\n    const handleClickInput = index => {\r\n        if (index === 0) {\r\n            console.log('start!!!')\r\n            setTime({\r\n                ...time,\r\n                start: Date.now(),\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleBlur = index => {\r\n        const newData = data.map((item, j) => {\r\n            if (index === j) {\r\n                return {\r\n                    ...item,\r\n                    time: Date.now(),\r\n                }\r\n            } else {\r\n                return item\r\n            }\r\n        })\r\n        setData(newData)\r\n    }\r\n\r\n    return (\r\n        <div className={prefix}>\r\n            <div className={`${prefix}-method`}>\r\n                <Radio.Group onChange={onChange} value={calcMethod}>\r\n                    <Radio value={1}>除法</Radio>\r\n                    <Radio value={2}>加法</Radio>\r\n                    <Radio value={3}>减法</Radio>\r\n                </Radio.Group>\r\n            </div>\r\n            <div className={`${prefix}-content`}>\r\n                <div className='list'>\r\n                    <Row className='list-item'>\r\n                        {column.map((item, index) => {\r\n                            return (\r\n                                <Col\r\n                                    key={index}\r\n                                    className='list-item-num'\r\n                                    span={item.span}\r\n                                >\r\n                                    {item.label}\r\n                                </Col>\r\n                            )\r\n                        })}\r\n                    </Row>\r\n                    <Form>\r\n                        {data.map((item, index) => {\r\n                            const { a, b, input, formatAnswer } = item\r\n\r\n                            let consumeTime = item.time - time.start\r\n                            if (index > 1) {\r\n                                const preItem = data[index - 1]\r\n                                consumeTime = item.time - preItem.time\r\n                            }\r\n                            return (\r\n                                <Row className='list-item' key={index}>\r\n                                    <Col\r\n                                        span={5}\r\n                                        className='list-item-num list-item-a'\r\n                                    >\r\n                                        {a}\r\n                                    </Col>\r\n                                    <Col\r\n                                        span={5}\r\n                                        className='list-item-num list-item-b'\r\n                                    >\r\n                                        {b}\r\n                                    </Col>\r\n                                    <Col\r\n                                        span={6}\r\n                                        className='list-item-num list-item-b'\r\n                                    >\r\n                                        <Input\r\n                                            type='tel'\r\n                                            onClick={() =>\r\n                                                handleClickInput(index)\r\n                                            }\r\n                                            onChange={e =>\r\n                                                handleChangeInput(e, index)\r\n                                            }\r\n                                            onBlur={() => handleBlur(index)}\r\n                                            value={input}\r\n                                        />\r\n                                    </Col>\r\n                                    {answerVisible && (\r\n                                        <Col\r\n                                            span={4}\r\n                                            className='list-item-num list-item-c'\r\n                                        >\r\n                                            <Alert\r\n                                                message={formatAnswer}\r\n                                                type={\r\n                                                    Math.abs(\r\n                                                        input - formatAnswer\r\n                                                    ) <= 1\r\n                                                        ? 'success'\r\n                                                        : 'error'\r\n                                                }\r\n                                                showIcon\r\n                                            />\r\n                                        </Col>\r\n                                    )}\r\n                                    {answerVisible && (\r\n                                        <Col\r\n                                            span={4}\r\n                                            className='list-item-num list-item-c'\r\n                                        >\r\n                                            {parseInt(consumeTime / 1000)}\r\n                                        </Col>\r\n                                    )}\r\n                                </Row>\r\n                            )\r\n                        })}\r\n                    </Form>\r\n                    <Button onClick={handleClickResult}>验证结果</Button>\r\n                    <div>\r\n                        通过: {acceptRate}/{data.length}\r\n                    </div>\r\n                    <div>用时: {time.end}s</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calc\r\n","import { Alert, Button, Col, Input, Radio, Row, Form } from 'antd'\r\nimport React, { useState } from 'react'\r\nimport { formatAnswerNumber, getNumberFromLen } from '../../utils/math'\r\nimport './Calc.scss'\r\n\r\n/**\r\n * {\r\n *    formula：'', // 算式\r\n *    formatAnswer: '', // 真实答案\r\n *    time: '', //耗时\r\n *    input: '', // inputValue用户输入的答案\r\n *    errorAnalysis:\r\n * }\r\n */\r\n// type: 1除法\r\n// type: 2加法\r\n// type: 3减法\r\nconst getData = (type = 1, count = 10) => {\r\n    // 除法\r\n    const divisionFn = () => {\r\n        const a = getNumberFromLen(3)\r\n        const b = getNumberFromLen(3)\r\n        return {\r\n            formula: (\r\n                <div>\r\n                    {a}\r\n                    <div className='divider'></div>\r\n                    {b}\r\n                </div>\r\n            ),\r\n            formatAnswer: formatAnswerNumber(a / b, 2),\r\n            // 误差小于1\r\n            errorAnalysis: (input, answer) => Math.abs(input - answer) <= 1,\r\n        }\r\n    }\r\n    // 高难度除法，不好算的数字\r\n    const divisionFn2 = () => {\r\n        let a = getNumberFromLen(3)\r\n        let b = getNumberFromLen(3)\r\n        let formatAnswer = formatAnswerNumber(a / b, 2)\r\n        while (formatAnswer / 10 < 5 || formatAnswer % 10 < 5) {\r\n            a = getNumberFromLen(3)\r\n            b = getNumberFromLen(3)\r\n            formatAnswer = formatAnswerNumber(a / b, 2)\r\n        }\r\n        return {\r\n            formula: (\r\n                <div>\r\n                    {a}\r\n                    <div className='divider'></div>\r\n                    {b}\r\n                </div>\r\n            ),\r\n            formatAnswer: formatAnswerNumber(a / b, 2),\r\n            // 误差小于1\r\n            errorAnalysis: (input, answer) => Math.abs(input - answer) <= 1,\r\n        }\r\n    }\r\n    // 增长率\r\n    const growthFn = () => {\r\n        // 现期量\r\n        const a = getNumberFromLen(3)\r\n        // 增长率\r\n        const b = getNumberFromLen(3) / 10\r\n        return {\r\n            formula: (\r\n                <div>\r\n                    <span>\r\n                        {a} * {b}%\r\n                    </span>\r\n                    <div className='divider'></div>\r\n                    <span>1 + {b}%</span>\r\n                </div>\r\n            ),\r\n            formatAnswer: Math.round((a * (b / 100)) / (1 + b / 100)),\r\n            // 误差5%以内\r\n            errorAnalysis: (input, answer) =>\r\n                Math.abs(input - answer) / answer <= 0.05,\r\n        }\r\n    }\r\n\r\n    // 加法\r\n    const addFn = () => {\r\n        const a = getNumberFromLen(3)\r\n        const b = getNumberFromLen(3)\r\n        return {\r\n            formula: (\r\n                <div>\r\n                    {a}+{b}\r\n                </div>\r\n            ),\r\n            formatAnswer: a + b,\r\n            // 不能有误差\r\n            errorAnalysis: (input, answer) => input - answer === 0,\r\n        }\r\n    }\r\n    // 减法\r\n    const subFn = () => {\r\n        const a = getNumberFromLen(3)\r\n        const b = getNumberFromLen(3)\r\n        return {\r\n            formula: (\r\n                <div>\r\n                    {a}-{b}\r\n                </div>\r\n            ),\r\n            formatAnswer: a - b,\r\n            // 不能有误差\r\n            errorAnalysis: (input, answer) => input - answer === 0,\r\n        }\r\n    }\r\n    // 两位数乘法误差允许3%以内\r\n    const mulFn = () => {\r\n        const a = getNumberFromLen(2)\r\n        const b = getNumberFromLen(2)\r\n        return {\r\n            formula: (\r\n                <div>\r\n                    {a} * {b}\r\n                </div>\r\n            ),\r\n            formatAnswer: a * b,\r\n            // 误差控制在3%\r\n            errorAnalysis: (input, answer) =>\r\n                Math.abs(input - answer) / answer <= 0.03,\r\n        }\r\n    }\r\n    // 3*1乘法\r\n    const threeMulToOneFn = () => {\r\n        let a = getNumberFromLen(3)\r\n        let b = getNumberFromLen(1)\r\n        while (a % 10 < 3 || b < 3) {\r\n            a = getNumberFromLen(3)\r\n            b = getNumberFromLen(1)\r\n        }\r\n        return {\r\n            formula: (\r\n                <div>\r\n                    {a} * {b}\r\n                </div>\r\n            ),\r\n            formatAnswer: a * b,\r\n            // 误差控制在3%\r\n            errorAnalysis: (input, answer) => input - answer === 0,\r\n        }\r\n    }\r\n    // 三位数乘法误差允许3%以内\r\n    const threeMulFn = () => {\r\n        const a = getNumberFromLen(3)\r\n        const b = getNumberFromLen(3)\r\n        return {\r\n            formula: (\r\n                <div>\r\n                    {a} * {b}\r\n                </div>\r\n            ),\r\n            formatAnswer: formatAnswerNumber(a * b, 3),\r\n            // 误差控制在3%\r\n            errorAnalysis: (input, answer) =>\r\n                Math.abs(input - answer) / answer <= 0.03,\r\n        }\r\n    }\r\n    // 特殊分数\r\n    const fractionFn = () => {\r\n        const map = {\r\n            '33.3%': 3,\r\n            '25%': 4,\r\n            '20%': 5,\r\n            '16.7%': 6,\r\n            '14.3%': 7,\r\n            '12.5%': 8,\r\n            '11.1%': 9,\r\n            '10%': 10,\r\n            '9.1%': 11,\r\n            '8.3%': 12,\r\n            '7.7%': 13,\r\n            '7.1%': 14,\r\n            '6.7%': 15,\r\n            '6.25%': 16,\r\n            '5.9%': 17,\r\n            '5.6%': 18,\r\n            '5.3%': 19,\r\n            '11%': 9.1,\r\n            '12%': 8.3,\r\n            '13%': 7.7,\r\n            '14%': 7.1,\r\n            '15%': 6.7,\r\n            '16%': 6.25,\r\n            '17%': 5.9,\r\n            '18%': 5.6,\r\n            '19%': 5.3,\r\n        }\r\n        const arr = Object.keys(map).sort(() => Math.random() - 0.5)\r\n        let index = -1\r\n        return () => {\r\n            index += 1\r\n            return {\r\n                formula: <div>{arr[index]}</div>,\r\n                formatAnswer: map[arr[index]],\r\n                errorAnalysis: (input, answer) => input - answer === 0,\r\n            }\r\n        }\r\n    }\r\n\r\n    // 加法\r\n    const mapTypeToFn = {\r\n        1: divisionFn,\r\n        2: growthFn,\r\n        3: addFn,\r\n        4: subFn,\r\n        5: mulFn,\r\n        6: threeMulFn,\r\n        7: fractionFn(),\r\n        8: divisionFn2,\r\n        9: threeMulToOneFn,\r\n    }\r\n    const arr = []\r\n    for (let i = 0; i < count; i++) {\r\n        let answerObj = mapTypeToFn[type]()\r\n        const obj = {\r\n            input: '',\r\n            time: '',\r\n            ...answerObj,\r\n        }\r\n        arr.push(obj)\r\n    }\r\n    return arr\r\n}\r\n\r\nconst defaultColumn = [\r\n    {\r\n        type: 'span',\r\n        label: '算式',\r\n        span: 8,\r\n    },\r\n    {\r\n        type: 'input',\r\n        label: '输入',\r\n        span: 6,\r\n    },\r\n    {\r\n        type: 'alert',\r\n        label: 'answer',\r\n        span: 6,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'time',\r\n        span: 4,\r\n    },\r\n]\r\n/**\r\n * 各清理了200米，\r\n * 前半段设甲效率是4，乙是3（设是x分钟）。 中间十分钟是4:0，提高效率后半段是4:6（50-x分钟）\r\n * 总效率是4:4\r\n * 则：4x+40 + 4（50-x） = 3x + 6*（50-x） => x+40 = 2*(50-x) => 2x = 60, x = 30\r\n * 甲60分钟清理了4*60 = 240，乙则是4*60 = 240\r\n * 所以乙后面工作了20分钟\r\n * 【例2】\r\n * 乙：7.5小时完成1/2+40个，甲：300个 =》 说明总量 = 640个\r\n * 1/2差40 = 280个， 所以360/7.5 = 720/15 = 48个\r\n * 【例7】设工作总量分别是120,150，晴天：甲效率是10 乙效率是10。 雨天：甲6，乙9。设晴天为x，雨天为y\r\n * 10x + 6y = 120\r\n * 10x + 9y = 150，y = 10。\r\n * 【例8】\r\n */\r\nconst Calc = () => {\r\n    const [column, setColumn] = useState(defaultColumn)\r\n    const [calcMethod, setCalcMethod] = useState(1)\r\n    const [answerVisible, setAnswerVisible] = useState(false)\r\n    const [acceptRate, setAcceptRate] = useState(0)\r\n    const [data, setData] = useState(() => getData())\r\n    window.data = data\r\n    const [time, setTime] = useState({\r\n        start: '',\r\n        end: '',\r\n    })\r\n    const prefix = 'calc-wrap'\r\n    const onChange = e => {\r\n        const value = e.target.value\r\n        const newData = getData(value)\r\n        setData(newData)\r\n        setCalcMethod(value)\r\n        setAnswerVisible(false)\r\n    }\r\n\r\n    const handleChangeInput = (e, index) => {\r\n        const newData = data.map((item, j) => {\r\n            if (index === j) {\r\n                return {\r\n                    ...item,\r\n                    input: e.target.value,\r\n                }\r\n            }\r\n            return item\r\n        })\r\n        setData(newData)\r\n    }\r\n\r\n    const handleClickResult = () => {\r\n        setAnswerVisible(true)\r\n        let count = 0\r\n        data.forEach(item => {\r\n            const { input, formatAnswer, errorAnalysis } = item\r\n            if (errorAnalysis(input, formatAnswer)) {\r\n                count++\r\n            }\r\n        })\r\n        setAcceptRate(count)\r\n        setTime({\r\n            ...time,\r\n            end: time.start ? parseInt((Date.now() - time.start) / 1000) : 0,\r\n        })\r\n    }\r\n\r\n    const handleClickInput = index => {\r\n        if (index === 0) {\r\n            console.log('start!!!')\r\n            setTime({\r\n                ...time,\r\n                start: Date.now(),\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleBlur = index => {\r\n        const newData = data.map((item, j) => {\r\n            if (index === j) {\r\n                return {\r\n                    ...item,\r\n                    time: Date.now(),\r\n                }\r\n            } else {\r\n                return item\r\n            }\r\n        })\r\n        setData(newData)\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setData(getData(calcMethod))\r\n        setAnswerVisible(false)\r\n        setAcceptRate(0)\r\n        setTime({\r\n            start: '',\r\n            end: '',\r\n        })\r\n    }\r\n    // 24133 44424 22443 43434\r\n    return (\r\n        <div className={prefix}>\r\n            <div className={`${prefix}-method`}>\r\n                <Button onClick={handleReset}>刷新数据</Button>\r\n                <Radio.Group onChange={onChange} value={calcMethod}>\r\n                    <Radio value={1}>除法</Radio>\r\n                    <Radio value={2}>增长量</Radio>\r\n                    <Radio value={3}>加法</Radio>\r\n                    <Radio value={4}>减法</Radio>\r\n                    <Radio value={5}>两位数乘法</Radio>\r\n                    <Radio value={6}>三位数乘法</Radio>\r\n                    <Radio value={7}>特殊分数</Radio>\r\n                    <Radio value={8}>高难度除法</Radio>\r\n                    <Radio value={9}>3*1乘法</Radio>\r\n                </Radio.Group>\r\n            </div>\r\n            <div className={`${prefix}-content`}>\r\n                <div className='list'>\r\n                    <Row className='list-item'>\r\n                        {column.map((item, index) => {\r\n                            return (\r\n                                <Col\r\n                                    key={index}\r\n                                    className='list-item-num'\r\n                                    span={item.span}\r\n                                >\r\n                                    {item.label}\r\n                                </Col>\r\n                            )\r\n                        })}\r\n                    </Row>\r\n                    <Form>\r\n                        {data.map((item, index) => {\r\n                            const {\r\n                                formula,\r\n                                input,\r\n                                formatAnswer,\r\n                                errorAnalysis,\r\n                            } = item\r\n                            let consumeTime = item.time - time.start\r\n                            if (index > 1) {\r\n                                const preItem = data[index - 1]\r\n                                consumeTime = item.time - preItem.time\r\n                            }\r\n                            return (\r\n                                <Row className='list-item' key={index}>\r\n                                    <Col\r\n                                        span={8}\r\n                                        className='list-item-num list-item-a'\r\n                                    >\r\n                                        {formula}\r\n                                    </Col>\r\n                                    <Col\r\n                                        span={6}\r\n                                        className='list-item-num list-item-b'\r\n                                    >\r\n                                        <Input\r\n                                            type='tel'\r\n                                            onClick={() =>\r\n                                                handleClickInput(index)\r\n                                            }\r\n                                            onChange={e =>\r\n                                                handleChangeInput(e, index)\r\n                                            }\r\n                                            onBlur={() => handleBlur(index)}\r\n                                            value={input}\r\n                                        />\r\n                                    </Col>\r\n                                    {answerVisible && (\r\n                                        <Col\r\n                                            span={6}\r\n                                            className='list-item-num list-item-c'\r\n                                        >\r\n                                            <Alert\r\n                                                message={formatAnswer}\r\n                                                type={\r\n                                                    errorAnalysis(\r\n                                                        input,\r\n                                                        formatAnswer\r\n                                                    )\r\n                                                        ? 'success'\r\n                                                        : 'error'\r\n                                                }\r\n                                                showIcon\r\n                                            />\r\n                                        </Col>\r\n                                    )}\r\n                                    {answerVisible && (\r\n                                        <Col\r\n                                            span={4}\r\n                                            className='list-item-num list-item-c'\r\n                                        >\r\n                                            {parseInt(consumeTime / 1000)}\r\n                                        </Col>\r\n                                    )}\r\n                                </Row>\r\n                            )\r\n                        })}\r\n                    </Form>\r\n                    <Button onClick={handleClickResult}>验证结果</Button>\r\n                    <div>\r\n                        通过: {acceptRate}/{data.length}\r\n                    </div>\r\n                    <div>用时: {time.end}s</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calc\r\n","import React, { useEffect } from 'react'\r\nimport './test.scss'\r\n\r\nconst Test = () => {\r\n    useEffect(() => {\r\n        function remLayoutFn() {\r\n            var oHtml = document.getElementsByTagName('html')[0]\r\n            var iWidth = document.documentElement.clientWidth\r\n            var defaultPercent = 100\r\n            iWidth = iWidth > 1080 ? 1080 : iWidth\r\n            var rootFontSize = iWidth / defaultPercent\r\n            oHtml.style.fontSize = rootFontSize + 'px'\r\n        }\r\n        remLayoutFn()\r\n        window.addEventListener('resize', remLayoutFn, false)\r\n\r\n        const box = document.querySelector('.box')\r\n        const wEl = document.querySelector('.width')\r\n        const hEl = document.querySelector('.height')\r\n        const { width, height } = box.getBoundingClientRect()\r\n        wEl.innerHTML = `宽：${width}`\r\n        hEl.innerHTML = `高：${height}`\r\n    }, [])\r\n    return (\r\n        <div className='wrap'>\r\n            <div className='box'></div>\r\n            <div className='width'>宽：</div>\r\n            <div className='height'>高：</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test\r\n","import React, { useState } from 'react'\r\nimport { Upload, message, Button, Divider } from 'antd'\r\nimport { InboxOutlined } from '@ant-design/icons'\r\nimport {\r\n    addCategoryQuestion,\r\n    addQuestion,\r\n    existQuestion,\r\n    getQuestionList,\r\n} from '../../service/question'\r\nimport { addExam, getExamList } from '../../service/exam'\r\nconst { Dragger } = Upload\r\n\r\nconst WrongQuestion = () => {\r\n    const [fileList, setFileList] = useState([])\r\n    const [uploading, setUploading] = useState(false)\r\n    const [dataSource, setDataSource] = useState([])\r\n    const props = {\r\n        name: 'file',\r\n        multiple: true,\r\n        action: '',\r\n        onChange(info) {\r\n            const { status } = info.file\r\n            window.file = info.file\r\n            if (status !== 'uploading') {\r\n                console.log(info.file, info.fileList)\r\n            }\r\n            if (status === 'done') {\r\n                message.success(`${info.file.name} file uploaded successfully.`)\r\n            } else if (status === 'error') {\r\n                message.error(`${info.file.name} file upload failed.`)\r\n            }\r\n        },\r\n        onDrop(e) {\r\n            console.log('Dropped files', e.dataTransfer.files)\r\n        },\r\n        beforeUpload: file => {\r\n            setFileList([...fileList, file])\r\n            const reader = new FileReader()\r\n\r\n            reader.onload = e => {\r\n                console.log('是个啥呀？', JSON.parse(e.target.result))\r\n                setDataSource(JSON.parse(e.target.result))\r\n            }\r\n            reader.readAsText(file)\r\n            return false\r\n        },\r\n    }\r\n\r\n    const filterRepeatQuestion = async question => {\r\n        let result = [1]\r\n        let qs = question\r\n        while (result.length > 0) {\r\n            const ids = qs.map(item => item.id)\r\n            result = await existQuestion(ids)\r\n            const set = new Set()\r\n            result.forEach(item => {\r\n                set.add(item.toJSON().id)\r\n            })\r\n            // 去重，上传不重复的\r\n            qs = qs\r\n                .filter(item => !set.has(item.id))\r\n                .map(item => {\r\n                    return {\r\n                        ...item,\r\n                        shortSource: null,\r\n                    }\r\n                })\r\n        }\r\n        return qs\r\n    }\r\n\r\n    const handleUpload = async () => {\r\n        const { category, question } = dataSource\r\n        const result = await filterRepeatQuestion(question)\r\n        if (result.length > 0) {\r\n            addCategoryQuestion({\r\n                content: category,\r\n            }).then(\r\n                res => {\r\n                    message.success('上传分类成功')\r\n                },\r\n                err => {\r\n                    message.error(err.error || '上传分类失败')\r\n                }\r\n            )\r\n\r\n            addQuestion(result).then(\r\n                res => {\r\n                    message.success('上传题目成功')\r\n                },\r\n                err => {\r\n                    message.error('上传题目失败')\r\n                }\r\n            )\r\n        } else {\r\n            message.error('没有新的数据')\r\n        }\r\n    }\r\n\r\n    // 上传训练题\r\n    const handleUploadTrain = async () => {\r\n        console.log('dataSource', dataSource)\r\n        const question = dataSource\r\n        const result = await getExamList()\r\n        const set = new Set()\r\n        result.forEach(item => {\r\n            set.add(item.toJSON().id)\r\n        })\r\n        // 去重，上传不重复的\r\n        const questionData = question\r\n            .filter(item => !set.has(item.id))\r\n            .map(item => {\r\n                return {\r\n                    ...item,\r\n                    shortSource: null,\r\n                }\r\n            })\r\n        message.success(`重复题目：${question.length - questionData.length}`)\r\n        if (questionData.length > 0) {\r\n            addExam(questionData).then(\r\n                res => {\r\n                    message.success('上传题目成功')\r\n                },\r\n                err => {\r\n                    message.error('上传题目失败')\r\n                }\r\n            )\r\n        } else {\r\n            message.error('没有新的数据')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='wrong'>\r\n            <div className='upload'>\r\n                <Dragger {...props}>\r\n                    <p className='ant-upload-drag-icon'>\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className='ant-upload-text'>\r\n                        Click or drag file to this area to upload\r\n                    </p>\r\n                    <p className='ant-upload-hint'>\r\n                        Support for a single or bulk upload. Strictly prohibit\r\n                        from uploading company data or other band files\r\n                    </p>\r\n                </Dragger>\r\n                <div className='upload-btn'>\r\n                    <Button\r\n                        type='primary'\r\n                        onClick={handleUpload}\r\n                        loading={uploading}\r\n                        style={{ marginTop: 16 }}\r\n                    >\r\n                        上传错题\r\n                    </Button>\r\n                    <Divider />\r\n                    <Button\r\n                        type='primary'\r\n                        onClick={handleUploadTrain}\r\n                        loading={uploading}\r\n                        style={{ marginTop: 16 }}\r\n                    >\r\n                        上传训练题\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WrongQuestion\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Upload, Tree, Button } from 'antd'\r\nimport { InboxOutlined } from '@ant-design/icons'\r\nimport {\r\n    addCategoryQuestion,\r\n    addQuestion,\r\n    getCategoryQuestion,\r\n    getQuestionList,\r\n} from '../../service/question'\r\nimport './XingCe.scss'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst XingCe = () => {\r\n    const [categoryList, setCategoryList] = useState([])\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        getCategoryQuestion().then(res => {\r\n            const data = res.toJSON().content\r\n            processCategoryList(data)\r\n            console.log('res', data)\r\n            setCategoryList(data)\r\n        })\r\n    }, [])\r\n\r\n    // 开始练习\r\n    const handleClickPractice = (questionIds, id) => {\r\n        history.push(`/xingce/${id}`)\r\n    }\r\n\r\n    const processCategoryList = data => {\r\n        // 处理数据\r\n        data.forEach(item => {\r\n            item.title = (\r\n                <div className='category-item'>\r\n                    <div className='name'>{item.name}</div>\r\n                    <div className='num'>{item.questionIds.length}题</div>\r\n                    <div className='practice'>\r\n                        <Button\r\n                            onClick={() =>\r\n                                handleClickPractice(item.questionIds, item.id)\r\n                            }\r\n                            shape='round'\r\n                        >\r\n                            开始练习\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            )\r\n            item.key = item.id\r\n            if (item.children) {\r\n                processCategoryList(item.children)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='xing-ce'>\r\n            hello, world\r\n            <div className='category'>\r\n                <Tree className='xing-ce-tree' treeData={categoryList} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default XingCe\r\n","import React, { useEffect, useState } from 'react'\r\nimport { message } from 'antd'\r\nimport classNames from 'classnames'\r\nimport { getCategoryQuestion, getQuestionList } from '../../service/question'\r\nimport './XingCe.scss'\r\nimport { useParams } from 'react-router'\r\nimport Answer from './components/Answer'\r\nimport { getExamList } from '../../service/exam'\r\nimport CollectIcon from './components/CollectIcon'\r\nimport {\r\n    addCollect,\r\n    deleteCollect,\r\n    getCollectList,\r\n} from '../../service/collect'\r\n\r\n/**\r\n * 16:15 16:19\r\n * 23141 14413\r\n * 16:40 17:20\r\n * 42214 23231 11221 31343 34314 41112\r\n */\r\nconst XingCeList = () => {\r\n    const params = useParams()\r\n    const [categoryList, setCategoryList] = useState([])\r\n    const [collectMap, setCollectMap] = useState({})\r\n    const [dataSource, setDataSource] = useState([])\r\n    useEffect(() => {\r\n        getCategoryQuestion().then(res => {\r\n            const data = res.toJSON().content\r\n            setCategoryList(data)\r\n        })\r\n\r\n        getCollect()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const getQuestionIds = (data, id, callback) => {\r\n            for (let i = 0; i < data.length; i++) {\r\n                const item = data[i]\r\n                if (item.id == id) {\r\n                    callback(item.questionIds)\r\n                    return\r\n                }\r\n                if (item.children) {\r\n                    getQuestionIds(item.children, id, callback)\r\n                }\r\n            }\r\n        }\r\n        const id = params.objectId\r\n        if (id.includes(',')) {\r\n            console.log('123', id.split(','))\r\n            const questionIds = id\r\n                .split(',')\r\n                .filter(item => item != '')\r\n                .map(item => parseInt(item))\r\n\r\n            getExamList(questionIds).then(res => {\r\n                if (res.length === questionIds.length) {\r\n                    const data = res.map(item => item.toJSON())\r\n                    setDataSource(data)\r\n                } else {\r\n                    getQuestionList(questionIds).then(res => {\r\n                        const data = res.map(item => item.toJSON())\r\n                        setDataSource(data)\r\n                    })\r\n                }\r\n            })\r\n        } else {\r\n            if (categoryList.length > 0) {\r\n                let questionIds = ''\r\n                getQuestionIds(categoryList, id, res => {\r\n                    questionIds = res\r\n                })\r\n                if (questionIds) {\r\n                    getQuestionList(questionIds).then(res => {\r\n                        const data = res.map(item => item.toJSON())\r\n                        setDataSource(data)\r\n                    })\r\n                } else {\r\n                    message.error('题目不存在')\r\n                }\r\n            }\r\n        }\r\n    }, [categoryList, params])\r\n\r\n    const getCollect = () => {\r\n        getCollectList().then(res => {\r\n            const data = res.map(item => item.toJSON())\r\n            const newMap = {}\r\n            data.forEach(item => {\r\n                newMap[item.id] = item.objectId\r\n            })\r\n            setCollectMap(newMap)\r\n        })\r\n    }\r\n\r\n    const handleSelectOption = (item, index) => {\r\n        const choice = item.correctAnswer.choice\r\n        const questionId = item.id\r\n        let status = ''\r\n        if (choice == index) {\r\n            status = 'correct'\r\n        } else {\r\n            status = 'wrong'\r\n        }\r\n        const newDataSource = dataSource.map(item => {\r\n            if (item.id === questionId) {\r\n                return {\r\n                    ...item,\r\n                    answerVisible: true,\r\n                    status,\r\n                    selectIndex: index,\r\n                }\r\n            } else {\r\n                return item\r\n            }\r\n        })\r\n        setDataSource(newDataSource)\r\n    }\r\n\r\n    const handleClose = item => {\r\n        const questionId = item.id\r\n        const newDataSource = dataSource.map(item => {\r\n            if (item.id === questionId) {\r\n                return {\r\n                    ...item,\r\n                    answerVisible: false,\r\n                    status: '',\r\n                    selectIndex: '',\r\n                }\r\n            } else {\r\n                return item\r\n            }\r\n        })\r\n        setDataSource(newDataSource)\r\n    }\r\n\r\n    const handleCollect = (item, checked) => {\r\n        if (checked) {\r\n            // 取消收藏\r\n            const objectId = collectMap[item.id]\r\n            console.log('objectId', objectId)\r\n            deleteCollect(objectId)\r\n                .then(() => {\r\n                    message.success('取消收藏')\r\n                    getCollect()\r\n                })\r\n                .catch(err => {\r\n                    message.error('取消失败')\r\n                })\r\n        } else {\r\n            // 点击收藏\r\n            addCollect([{ id: item.id }])\r\n                .then(() => {\r\n                    //\r\n                    message.success('收藏成功')\r\n                    getCollect()\r\n                })\r\n                .catch(err => {\r\n                    message.error('收藏失败')\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='wrap'>\r\n            <h2>错题整理</h2>\r\n            <div className='wrap-print'>\r\n                <div className='list'>\r\n                    {dataSource.map((item, index) => {\r\n                        let layout = 'four'\r\n                        // 任一选项文字长度超过10，则选择两栏布局\r\n                        // 任一选项文字长度超过20，则选择一栏布局\r\n                        // 否则使用四栏布局\r\n                        const itemLength = []\r\n                        item.accessories[0].options.forEach(item => {\r\n                            itemLength.push(item.length)\r\n                        })\r\n                        const len = Math.max(...itemLength)\r\n                        if (len >= 20) {\r\n                            layout = 'one'\r\n                        } else if (len > 10) {\r\n                            layout = 'two'\r\n                        }\r\n                        const cls = classNames({\r\n                            question: true,\r\n                            [item.status]: item.status,\r\n                        })\r\n                        return (\r\n                            <div key={item.id} className='item'>\r\n                                <div className={cls}>\r\n                                    <span>{index + 1}.</span>\r\n                                    <div className='content'>\r\n                                        <div className='title'>\r\n                                            <span\r\n                                                dangerouslySetInnerHTML={{\r\n                                                    __html: item.content,\r\n                                                }}\r\n                                            ></span>\r\n                                            <CollectIcon\r\n                                                checked={collectMap[item.id]}\r\n                                                onClick={() =>\r\n                                                    handleCollect(\r\n                                                        item,\r\n                                                        collectMap[item.id]\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className={`options ${layout}`}>\r\n                                            {item.accessories[0] &&\r\n                                                item.accessories[0].options.map(\r\n                                                    (option, pos) => {\r\n                                                        const mapIndexToLetter =\r\n                                                            ['A', 'B', 'C', 'D']\r\n                                                        let status =\r\n                                                            pos ==\r\n                                                                item.selectIndex &&\r\n                                                            item.status ==\r\n                                                                'correct'\r\n                                                                ? 'correct'\r\n                                                                : 'wrong'\r\n                                                        const optionCls =\r\n                                                            classNames({\r\n                                                                option: true,\r\n                                                                [status]:\r\n                                                                    pos ===\r\n                                                                    item.selectIndex,\r\n                                                            })\r\n                                                        return (\r\n                                                            <div\r\n                                                                key={pos}\r\n                                                                onClick={() =>\r\n                                                                    handleSelectOption(\r\n                                                                        item,\r\n                                                                        pos\r\n                                                                    )\r\n                                                                }\r\n                                                                className={\r\n                                                                    optionCls\r\n                                                                }\r\n                                                            >\r\n                                                                <span className='num'>\r\n                                                                    {\r\n                                                                        mapIndexToLetter[\r\n                                                                            pos\r\n                                                                        ]\r\n                                                                    }\r\n                                                                    .\r\n                                                                </span>\r\n                                                                <span\r\n                                                                    dangerouslySetInnerHTML={{\r\n                                                                        __html: option,\r\n                                                                    }}\r\n                                                                ></span>\r\n                                                            </div>\r\n                                                        )\r\n                                                    }\r\n                                                )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {item.answerVisible && (\r\n                                    <Answer\r\n                                        onClose={() => handleClose(item)}\r\n                                        data={item}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default XingCeList\r\n","import React, { useEffect, useState } from 'react'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport {\r\n    Button,\r\n    Cascader,\r\n    Divider,\r\n    Input,\r\n    message,\r\n    Modal,\r\n    Tree,\r\n    Form,\r\n    Skeleton,\r\n} from 'antd'\r\nimport {\r\n    addCustomWrongQuestionCategory,\r\n    getCustomWrongQuestionCategory,\r\n} from '../../../service/question'\r\nimport lodash from 'lodash'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst { TextArea } = Input\r\nconst { confirm } = Modal\r\n\r\n// 分类树\r\nconst CategoryTree = props => {\r\n    const history = useHistory()\r\n    const [form] = Form.useForm()\r\n    const [treeData, setTreeData] = useState([])\r\n    const [showData, setShowData] = useState([])\r\n    const [cascaderOptions, setCascaderOptions] = useState([])\r\n    const [inputValue, setInputValue] = useState()\r\n    const [deleteInputValue, setDeleteInputValue] = useState()\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n    const [addModalVisible, setAddModalVisible] = useState(false)\r\n    const [deleteModalVisible, setDeleteModalVisible] = useState(false)\r\n    const [checkedQuestionIds, setCheckedQuestionIds] = useState([])\r\n    /**\r\n     * 17:10 (33) 17:38\r\n     * 12212 13142 33412 12312 42214 43433 21321 33244\r\n     */\r\n    const onSelect = (selectedKeys, info) => {\r\n        const selectedKey = selectedKeys[selectedKeys.length - 1]\r\n        console.log('selected', selectedKey, info)\r\n        const qIds = []\r\n        info.checkedNodes.forEach(item => {\r\n            qIds.push(...item.questionIds)\r\n        })\r\n        setCheckedQuestionIds(qIds)\r\n        console.log('qIDs', qIds)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCustomCategory()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setInputValue(JSON.stringify(treeData, null, 4))\r\n\r\n        //\r\n        const getQuestionIdCount = treeNode => {\r\n            if (!treeNode) return 0\r\n            let count = 0\r\n            treeNode.forEach(item => {\r\n                count += item.questionIds.length\r\n                if (item.children) {\r\n                    count += getQuestionIdCount(item.children)\r\n                }\r\n            })\r\n            return count\r\n        }\r\n\r\n        const dfs = data => {\r\n            const result = []\r\n            for (let i = 0; i < data.length; i++) {\r\n                let obj = {}\r\n                const item = data[i]\r\n                const count =\r\n                    item.questionIds.length + getQuestionIdCount(item.children)\r\n                obj.title = (\r\n                    <div style={{ display: 'flex' }} className='tree-title'>\r\n                        <div className='name'>{item.title}</div>\r\n                        <div\r\n                            style={{\r\n                                marginLeft: '30px',\r\n                                fontSize: '12px',\r\n                                color: '#5f6368',\r\n                            }}\r\n                            className='num'\r\n                        >\r\n                            {`${count}题`}\r\n                        </div>\r\n                    </div>\r\n                )\r\n                obj.key = item.key\r\n                if (item.questionIds) {\r\n                    obj.questionIds = item.questionIds\r\n                }\r\n                if (item.children) {\r\n                    obj.children = dfs(item.children)\r\n                }\r\n                result.push(obj)\r\n            }\r\n            return result\r\n        }\r\n        const newShowData = dfs(treeData)\r\n        setShowData(newShowData)\r\n    }, [treeData])\r\n\r\n    const getCustomCategory = () => {\r\n        const getCascaderData = data => {\r\n            const result = []\r\n            for (let i = 0; i < data.length; i++) {\r\n                let obj = {}\r\n                const item = data[i]\r\n                obj.label = item.title\r\n                obj.value = item.key\r\n                if (item.children) {\r\n                    obj.children = getCascaderData(item.children)\r\n                }\r\n                result.push(obj)\r\n            }\r\n            return result\r\n        }\r\n        getCustomWrongQuestionCategory().then(res => {\r\n            const data = res.toJSON().content\r\n            setTreeData(data)\r\n            const result = getCascaderData(data)\r\n            console.log('caD', result)\r\n            setCascaderOptions(result)\r\n        })\r\n    }\r\n\r\n    const onCheck = (selectedKeys, info) => {\r\n        const qIds = []\r\n        info.checkedNodes.forEach(item => {\r\n            qIds.push(...item.questionIds)\r\n        })\r\n        setCheckedQuestionIds(qIds)\r\n    }\r\n\r\n    const handleOk = type => {\r\n        if (type === 'category') {\r\n            try {\r\n                const data = JSON.parse(inputValue)\r\n                addCustomWrongQuestionCategory({ content: data })\r\n                    .then(() => {\r\n                        setIsModalVisible(false)\r\n                        getCustomCategory()\r\n                        message.success('更新成功！')\r\n                    })\r\n                    .catch(() => {\r\n                        message.error('更新失败！')\r\n                    })\r\n            } catch (error) {\r\n                message.error('格式有误！')\r\n            }\r\n        } else if (type === 'question') {\r\n            submitQuestion()\r\n        } else if (type === 'delete') {\r\n            deleteQuestion()\r\n        }\r\n    }\r\n\r\n    const handleCancel = type => {\r\n        if (type === 'category') {\r\n            setIsModalVisible(false)\r\n        } else {\r\n            form.resetFields()\r\n            setAddModalVisible(false)\r\n        }\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleClickPractice = () => {\r\n        history.push(`/xingce/${checkedQuestionIds.toString()},`)\r\n    }\r\n\r\n    const handleClickCategory = () => {\r\n        setIsModalVisible(true)\r\n    }\r\n\r\n    const handleAddQuestion = () => {\r\n        setAddModalVisible(true)\r\n    }\r\n\r\n    const handleDeleteQuestion = () => {\r\n        setDeleteModalVisible(true)\r\n    }\r\n\r\n    const submitQuestion = () => {\r\n        console.log('form', form.getFieldsValue())\r\n        form.validateFields()\r\n            .then(res => {\r\n                const { question, category } = form.getFieldsValue()\r\n                const qIds = question.split(',')\r\n                // 取最后一位ID找\r\n                const id = category[category.length - 1]\r\n                const dfs = (data, objectId) => {\r\n                    const result = []\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        let obj = {}\r\n                        const item = data[i]\r\n                        obj.title = item.title\r\n                        obj.key = item.key\r\n                        if (item.questionIds) {\r\n                            obj.questionIds = item.questionIds\r\n                        }\r\n                        if (item.children) {\r\n                            obj.children = dfs(item.children, objectId)\r\n                        }\r\n                        if (item.key == objectId) {\r\n                            // 取交集\r\n                            const interArr = lodash.intersection(\r\n                                obj.questionIds,\r\n                                qIds\r\n                            )\r\n                            console.log(\r\n                                'obj.questionIds,',\r\n                                obj.questionIds,\r\n                                qIds\r\n                            )\r\n                            if (interArr.length > 0) {\r\n                                message.error(\r\n                                    `您添加的部分题目已存在， ${interArr.toString()}`\r\n                                )\r\n                            } else {\r\n                                // 将题目添加进去\r\n                                const newQuestionIds =\r\n                                    obj.questionIds.concat(qIds)\r\n                                obj.questionIds = newQuestionIds\r\n                            }\r\n                            console.log('添加题目所在的ITEM', item)\r\n                        }\r\n                        result.push(obj)\r\n                    }\r\n                    return result\r\n                }\r\n\r\n                const newData = dfs(treeData, id)\r\n                // 前后有变化才更新\r\n                if (!lodash.isEqual(newData, treeData)) {\r\n                    addCustomWrongQuestionCategory({ content: newData })\r\n                        .then(() => {\r\n                            setIsModalVisible(false)\r\n                            getCustomCategory()\r\n                            message.success(\r\n                                `添加成功！共添加${\r\n                                    qIds.length\r\n                                }道题，${qIds.toString()}`\r\n                            )\r\n                        })\r\n                        .catch(() => {\r\n                            message.error('添加失败！')\r\n                        })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('err', err)\r\n            })\r\n    }\r\n\r\n    const deleteQuestion = () => {\r\n        const deleteIds = deleteInputValue.split(',')\r\n        if (deleteIds.length <= 0) {\r\n            message.error('请输入正确格式')\r\n            return\r\n        }\r\n        const dfs = (data, deleteIds, arr) => {\r\n            const result = []\r\n            for (let i = 0; i < data.length; i++) {\r\n                let obj = {}\r\n                const item = data[i]\r\n                obj.title = item.title\r\n                obj.key = item.key\r\n                if (item.questionIds) {\r\n                    // 过滤掉数组中包含deleteIds的元素\r\n                    const newIds = lodash.without(\r\n                        item.questionIds,\r\n                        ...deleteIds\r\n                    )\r\n                    if (newIds.length !== item.questionIds.length) {\r\n                        // 求交集，看哪个元素被删除了\r\n                        const xorIds = lodash.xor(item.questionIds, newIds)\r\n                        // 求并集\r\n                        arr.push({\r\n                            title: obj.title,\r\n                            ids: xorIds,\r\n                        })\r\n                    }\r\n                    obj.questionIds = newIds\r\n                }\r\n                if (item.children) {\r\n                    obj.children = dfs(item.children, deleteIds, arr)\r\n                }\r\n                result.push(obj)\r\n            }\r\n            return result\r\n        }\r\n        // 删除信息\r\n        let arr = []\r\n        const newData = dfs(treeData, deleteIds, arr)\r\n        console.log('newData', newData)\r\n        console.log('treeData', treeData)\r\n        if (arr.length > 0) {\r\n            confirm({\r\n                title: '您确定要删除这些题目吗?',\r\n                icon: <ExclamationCircleOutlined />,\r\n                content: (\r\n                    <div>\r\n                        {arr.map((item, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    {item.title}: {item.ids.toString()}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                ),\r\n                onOk() {\r\n                    addCustomWrongQuestionCategory({ content: newData })\r\n                        .then(() => {\r\n                            setDeleteModalVisible(false)\r\n                            getCustomCategory()\r\n                            message.success(`删除成功！`)\r\n                        })\r\n                        .catch(() => {\r\n                            message.error('删除失败！')\r\n                        })\r\n                },\r\n                onCancel() {\r\n                    console.log('Cancel')\r\n                },\r\n            })\r\n        } else {\r\n            message.warn('没有找到该题！')\r\n        }\r\n    }\r\n\r\n    const onFinish = values => {\r\n        console.log('values', values)\r\n    }\r\n\r\n    const handleClickPreview = () => {\r\n        const { question } = form.getFieldsValue()\r\n        window.open(\r\n            `https://zmojm.github.io/build/index.html#/xingce/${question},`,\r\n            '',\r\n            'width=800,height=1000'\r\n        )\r\n    }\r\n\r\n    const handleDeletePreview = () => {\r\n        window.open(\r\n            `https://zmojm.github.io/build/index.html#/xingce/${deleteInputValue},`,\r\n            '',\r\n            'width=800,height=1000'\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='category-tree'>\r\n            {showData.length > 0 ? (\r\n                <Tree\r\n                    defaultExpandAll\r\n                    checkable\r\n                    onSelect={onSelect}\r\n                    onCheck={onCheck}\r\n                    treeData={showData}\r\n                />\r\n            ) : (\r\n                <Skeleton />\r\n            )}\r\n\r\n            <Divider />\r\n            <span>已勾选{checkedQuestionIds.length}题</span>\r\n            <Divider type='vertical' />\r\n            <Button onClick={handleClickPractice}>开始练习</Button>\r\n            <Divider />\r\n            <Button onClick={handleClickCategory}>更新分类</Button>\r\n            <Divider type='vertical' />\r\n            <Button onClick={handleAddQuestion}>添加错题</Button>\r\n            <Divider type='vertical' />\r\n            <Button danger onClick={handleDeleteQuestion}>\r\n                删除\r\n            </Button>\r\n\r\n            <Modal\r\n                width={800}\r\n                title='更新分类'\r\n                visible={isModalVisible}\r\n                onOk={() => handleOk('category')}\r\n                onCancel={() => handleCancel('category')}\r\n            >\r\n                <TextArea\r\n                    rows={20}\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </Modal>\r\n            <Modal\r\n                width={600}\r\n                title='添加错题'\r\n                visible={addModalVisible}\r\n                okText='提交'\r\n                okCancel='取消'\r\n                onOk={() => handleOk('question')}\r\n                onCancel={() => handleCancel('question')}\r\n            >\r\n                <Form\r\n                    form={form}\r\n                    name='basic'\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={onFinish}\r\n                    autoComplete='off'\r\n                >\r\n                    <Form.Item\r\n                        label='分类'\r\n                        name='category'\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '请选择分类',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Cascader\r\n                            options={cascaderOptions}\r\n                            placeholder='Please select'\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label='题目'\r\n                        name='question'\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '请输入题目',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button onClick={handleClickPreview}>预览</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n\r\n            <Modal\r\n                width={600}\r\n                title='删除错题'\r\n                visible={deleteModalVisible}\r\n                okText='提交'\r\n                okCancel='取消'\r\n                onOk={() => handleOk('delete')}\r\n                onCancel={() => setDeleteModalVisible(false)}\r\n            >\r\n                <Input\r\n                    value={deleteInputValue}\r\n                    onChange={e => setDeleteInputValue(e.target.value)}\r\n                />\r\n                <Divider />\r\n                <Button onClick={handleDeletePreview}>预览</Button>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryTree\r\n","// 考试模式\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Divider, message, Modal, Select } from 'antd'\r\nimport { getCategoryQuestion } from '../../service/question'\r\nimport './XingCe.scss'\r\nimport './Exam.scss'\r\nimport { useHistory } from 'react-router'\r\nimport { getExamList } from '../../service/exam'\r\nimport { getCollectList } from '../../service/collect'\r\nimport CategoryTree from './components/CategoryTree'\r\nconst { Option } = Select\r\n\r\nconst Exam = () => {\r\n    const [isModalVisible, setIsModalVisible] = useState(false)\r\n    const [dataSource, setDataSource] = useState([])\r\n    const [selectIndex, setSelectIndex] = useState(0)\r\n    const [pageList, setPageList] = useState([])\r\n    const [collectList, setCollectList] = useState([])\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        getExamList().then(res => {\r\n            const data = res.map(item => item.toJSON())\r\n            setDataSource(data)\r\n\r\n            const newPageList = []\r\n            for (let i = 0; i < data.length; i += 10) {\r\n                const item = data.slice(i, i + 10)\r\n                newPageList.push(item)\r\n            }\r\n            setPageList(newPageList)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getCollectList()\r\n            .then(res => {\r\n                const data = res.map(item => item.toJSON())\r\n                const ids = data.map(item => item.id)\r\n                setCollectList(ids)\r\n            })\r\n            .catch(err => {\r\n                message.error('获取数据失败')\r\n            })\r\n    }, [])\r\n\r\n    // 开始练习\r\n    const handleClickPractice = () => {\r\n        const ids = pageList[selectIndex].map(item => item.id)\r\n        console.log('ids', ids.toString())\r\n        history.push(`/xingce/${ids.toString()}`)\r\n    }\r\n\r\n    const copyText = text => {\r\n        var textarea = document.createElement('textarea')\r\n        document.body.appendChild(textarea)\r\n        // 隐藏此输入框\r\n        textarea.style.position = 'fixed'\r\n        textarea.style.clip = 'rect(0 0 0 0)'\r\n        textarea.style.top = '10px'\r\n        // 赋值\r\n        textarea.value = text\r\n        // 选中\r\n        textarea.select()\r\n        // 复制\r\n        document.execCommand('copy', true)\r\n        // 移除输入框\r\n        document.body.removeChild(textarea)\r\n    }\r\n\r\n    const handleCopy = dataSource => {\r\n        const data = dataSource || pageList[selectIndex]\r\n        let html = ''\r\n        data.forEach(item => {\r\n            // item.content是内容\r\n            // item.accessories[0].options是选项\r\n            // item.correctAnswer.choice是答案\r\n            const choice = item.correctAnswer.choice\r\n            let rightAnswer = ''\r\n            const option = item.accessories[0].options.map((item, index) => {\r\n                if (index == choice) {\r\n                    rightAnswer = `<strong>「${item}」</strong>`\r\n                }\r\n                return `<span>「${item}」</span>`\r\n            })\r\n            const qaItem = `\r\n                <div class=\"qa-item\">\r\n                    ${item.content}<input style=\"border: none; width: 300px; height: 35px; font-weight: bold;\" />\r\n                    <details>\r\n                        <summary>查看</summary>\r\n                        <div>${option}</div>\r\n                    </details>\r\n                    <details>\r\n                        <summary>正确</summary>\r\n                        ${rightAnswer}\r\n                    </details>\r\n                </div>\r\n                `\r\n            html += qaItem\r\n        })\r\n        const result = `<div style=\"height: 300px; overflow-y: scroll;\">${html}</div>`\r\n        // 复制成功\r\n        copyText(result)\r\n        message.success('已复制!')\r\n    }\r\n\r\n    const handleChange = index => {\r\n        setSelectIndex(index)\r\n    }\r\n\r\n    const handleCollect = () => {\r\n        history.push(`/xingce/${collectList.toString()}`)\r\n    }\r\n\r\n    const handleCollectCopy = () => {\r\n        getExamList(collectList).then(res => {\r\n            const data = res.map(item => item.toJSON())\r\n            handleCopy(data)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='exam'>\r\n            能力训练\r\n            <div className='category'>\r\n                <div className='read'>\r\n                    <h3>阅读概括能力</h3>\r\n                    {/* <Tree className='xing-ce-tree' treeData={categoryList} /> */}\r\n                    <Select style={{ width: 120 }} onChange={handleChange}>\r\n                        {pageList.map((item, index) => {\r\n                            return (\r\n                                <Option\r\n                                    key={index}\r\n                                    value={index}\r\n                                >{`套卷 ${index}`}</Option>\r\n                            )\r\n                        })}\r\n                    </Select>\r\n                    <Divider type='vertical' />\r\n                    <Button onClick={handleClickPractice}>开始练习</Button>\r\n                    <Divider type='vertical' />\r\n                    <Button onClick={() => handleCopy()}>复制套题</Button>\r\n                    <Divider type='vertical' />\r\n                    <Button onClick={handleCollect}>收藏题练习</Button>\r\n                    <Divider type='vertical' />\r\n                    <Button onClick={handleCollectCopy}>收藏题复制</Button>\r\n                </div>\r\n                <Divider />\r\n                <div className='wrong-question'>\r\n                    <h3>错题训练</h3>\r\n                    <CategoryTree />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Exam\r\n","import React, { useEffect, useState } from 'react'\r\nimport { HashRouter, Route, Switch, useParams } from 'react-router-dom'\r\nimport Header from '../feature/edit/Header/Header'\r\nimport Annotation from '../feature/edit/Annotation/Annotation'\r\nimport Comment from '../feature/edit/Comment/Comment'\r\nimport Highlighter from 'web-highlighter'\r\nimport Admin from '../feature/admin/Admin'\r\nimport Book from '../feature/book/Book'\r\nimport BookList from '../feature/book/BookList'\r\nimport Algorithm from '../feature/algorithm/Algorithm'\r\nimport Calc from '../feature/calc/Calc'\r\nimport Calc2 from '../feature/calc/Calc2'\r\nimport Test from './test'\r\nimport WrongQuestion from '../feature/wrongQuestion/WrongQuestion'\r\nimport './App.scss'\r\nimport XingCe from '../feature/xingce/XingCe'\r\nimport XingCeList from '../feature/xingce/XingCeList'\r\nimport Exam from '../feature/xingce/Exam'\r\n\r\nconst Edit = () => {\r\n    const params = useParams()\r\n    const [highlighter, setHighlighter] = useState(\r\n        new Highlighter({\r\n            exceptSelectors: ['.ant-list-item'],\r\n        })\r\n    )\r\n    useEffect(() => {\r\n        const h = new Highlighter({\r\n            exceptSelectors: ['.ant-list-item'],\r\n        })\r\n        setHighlighter(h)\r\n\r\n        return () => {\r\n            h.dispose()\r\n        }\r\n    }, [params])\r\n\r\n    return (\r\n        <div className='yryr-home'>\r\n            <Header />\r\n            <div className='main'>\r\n                <Annotation key={highlighter} highlighter={highlighter} />\r\n                <Comment key={highlighter} highlighter={highlighter} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst App = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Switch>\r\n                <Route exact path='/' component={Admin} />\r\n                <Route exact path='/admin' component={Admin} />\r\n                <Route exact path='/edit/:objectId' component={Edit} />\r\n                <Route exact path='/algorithm' component={Algorithm} />\r\n                <Route exact path='/calc' component={Calc} />\r\n                <Route exact path='/calc2' component={Calc2} />\r\n                <Route exact path='/test' component={Test} />\r\n                <Route exact path='/book' component={Book} />\r\n                <Route exact path='/book/:objectId' component={BookList} />\r\n                <Route exact path='/question' component={WrongQuestion} />\r\n                {/* 这两个是打印模式 */}\r\n                <Route exact path='/XingCe' component={XingCe} />\r\n                <Route exact path='/XingCe/:objectId' component={XingCeList} />\r\n                {/* 考试模式，提高能力 */}\r\n                <Route exact path='/exam' component={Exam} />\r\n            </Switch>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport annotationReducer from '../feature/edit/Annotation/AnnotationSlice'\r\nimport headerReducer from '../feature/edit/Header/HeaderSlice'\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        annotation: annotationReducer,\r\n        header: headerReducer,\r\n    },\r\n})\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './app/App'\r\nimport { Provider } from 'react-redux'\r\nimport 'antd/dist/antd.css'\r\nimport './index.css'\r\nimport { store } from './store'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}